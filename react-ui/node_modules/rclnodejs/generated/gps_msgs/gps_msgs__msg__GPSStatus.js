// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const HeaderWrapper = require('../../generated/std_msgs/std_msgs__msg__Header.js');
const Int32Wrapper = require('../../generated/std_msgs/std_msgs__msg__Int32.js');
const GPSStatusRefStruct = StructType({
  header: HeaderWrapper.refObjectType,
  satellites_used: primitiveTypes.uint16,
  satellite_used_prn: Int32Wrapper.refObjectArrayType,
  satellites_visible: primitiveTypes.uint16,
  satellite_visible_prn: Int32Wrapper.refObjectArrayType,
  satellite_visible_z: Int32Wrapper.refObjectArrayType,
  satellite_visible_azimuth: Int32Wrapper.refObjectArrayType,
  satellite_visible_snr: Int32Wrapper.refObjectArrayType,
  status: primitiveTypes.int16,
  motion_source: primitiveTypes.uint16,
  orientation_source: primitiveTypes.uint16,
  position_source: primitiveTypes.uint16,
});
const GPSStatusRefArray = ArrayType(GPSStatusRefStruct);
const GPSStatusRefStructArray = StructType({
  data: GPSStatusRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class GPSStatusWrapper {
  constructor(other, willCheckConsistency = false) {
    this._wrapperFields = {};
    this._willCheckConsistency = willCheckConsistency;
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new GPSStatusRefStruct(other._refObject.toObject());
      this._wrapperFields.header =  new HeaderWrapper(other._wrapperFields.header);
      this._satellites_usedIntialized = true;
      this._wrapperFields.satellite_used_prn = Int32Wrapper.createArray();
      this._wrapperFields.satellite_used_prn.copy(other._wrapperFields.satellite_used_prn);
      this._satellites_visibleIntialized = true;
      this._wrapperFields.satellite_visible_prn = Int32Wrapper.createArray();
      this._wrapperFields.satellite_visible_prn.copy(other._wrapperFields.satellite_visible_prn);
      this._wrapperFields.satellite_visible_z = Int32Wrapper.createArray();
      this._wrapperFields.satellite_visible_z.copy(other._wrapperFields.satellite_visible_z);
      this._wrapperFields.satellite_visible_azimuth = Int32Wrapper.createArray();
      this._wrapperFields.satellite_visible_azimuth.copy(other._wrapperFields.satellite_visible_azimuth);
      this._wrapperFields.satellite_visible_snr = Int32Wrapper.createArray();
      this._wrapperFields.satellite_visible_snr.copy(other._wrapperFields.satellite_visible_snr);
      this._statusIntialized = true;
      this._motion_sourceIntialized = true;
      this._orientation_sourceIntialized = true;
      this._position_sourceIntialized = true;
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new GPSStatusRefStruct();
    this._wrapperFields.header = new HeaderWrapper();
    this._satellites_usedIntialized = false;
    this._wrapperFields.satellite_used_prn = Int32Wrapper.createArray();
    this._satellites_visibleIntialized = false;
    this._wrapperFields.satellite_visible_prn = Int32Wrapper.createArray();
    this._wrapperFields.satellite_visible_z = Int32Wrapper.createArray();
    this._wrapperFields.satellite_visible_azimuth = Int32Wrapper.createArray();
    this._wrapperFields.satellite_visible_snr = Int32Wrapper.createArray();
    this._statusIntialized = false;
    this._motion_sourceIntialized = false;
    this._orientation_sourceIntialized = false;
    this._position_sourceIntialized = false;
  }
  static createFromRefObject(refObject) {
    let self = new GPSStatusWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new GPSStatusArrayWrapper;
  }
  static get ArrayType() {
    return GPSStatusArrayWrapper;
  }
  static get refObjectArrayType() {
    return GPSStatusRefStructArray
  }
  static get refObjectType() {
    return GPSStatusRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
      if (checkConsistency && !this._satellites_usedIntialized) {
        throw new TypeError('Invalid argument: satellites_used in GPSStatus');
      }
      if (checkConsistency && !this._satellites_visibleIntialized) {
        throw new TypeError('Invalid argument: satellites_visible in GPSStatus');
      }
      if (checkConsistency && !this._statusIntialized) {
        throw new TypeError('Invalid argument: status in GPSStatus');
      }
      if (checkConsistency && !this._motion_sourceIntialized) {
        throw new TypeError('Invalid argument: motion_source in GPSStatus');
      }
      if (checkConsistency && !this._orientation_sourceIntialized) {
        throw new TypeError('Invalid argument: orientation_source in GPSStatus');
      }
      if (checkConsistency && !this._position_sourceIntialized) {
        throw new TypeError('Invalid argument: position_source in GPSStatus');
      }
    this._wrapperFields.header.freeze(own, checkConsistency);
    this._refObject.header = this._wrapperFields.header.refObject;
    this._wrapperFields.satellite_used_prn.freeze(own, checkConsistency);
    this._refObject.satellite_used_prn = this._wrapperFields.satellite_used_prn.refObject;
    if (own) {
      this._wrapperFields.satellite_used_prn.fill(Int32Array.from([]));
      this._wrapperFields.satellite_used_prn.freeze(own, checkConsistency);
      this._refObject.satellite_used_prn = this._wrapperFields.satellite_used_prn.refObject;
    }
    this._wrapperFields.satellite_visible_prn.freeze(own, checkConsistency);
    this._refObject.satellite_visible_prn = this._wrapperFields.satellite_visible_prn.refObject;
    if (own) {
      this._wrapperFields.satellite_visible_prn.fill(Int32Array.from([]));
      this._wrapperFields.satellite_visible_prn.freeze(own, checkConsistency);
      this._refObject.satellite_visible_prn = this._wrapperFields.satellite_visible_prn.refObject;
    }
    this._wrapperFields.satellite_visible_z.freeze(own, checkConsistency);
    this._refObject.satellite_visible_z = this._wrapperFields.satellite_visible_z.refObject;
    if (own) {
      this._wrapperFields.satellite_visible_z.fill(Int32Array.from([]));
      this._wrapperFields.satellite_visible_z.freeze(own, checkConsistency);
      this._refObject.satellite_visible_z = this._wrapperFields.satellite_visible_z.refObject;
    }
    this._wrapperFields.satellite_visible_azimuth.freeze(own, checkConsistency);
    this._refObject.satellite_visible_azimuth = this._wrapperFields.satellite_visible_azimuth.refObject;
    if (own) {
      this._wrapperFields.satellite_visible_azimuth.fill(Int32Array.from([]));
      this._wrapperFields.satellite_visible_azimuth.freeze(own, checkConsistency);
      this._refObject.satellite_visible_azimuth = this._wrapperFields.satellite_visible_azimuth.refObject;
    }
    this._wrapperFields.satellite_visible_snr.freeze(own, checkConsistency);
    this._refObject.satellite_visible_snr = this._wrapperFields.satellite_visible_snr.refObject;
    if (own) {
      this._wrapperFields.satellite_visible_snr.fill(Int32Array.from([]));
      this._wrapperFields.satellite_visible_snr.freeze(own, checkConsistency);
      this._refObject.satellite_visible_snr = this._wrapperFields.satellite_visible_snr.refObject;
    }
  }
  serialize() {
    this.freeze(/*own=*/false, this._willCheckConsistency);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._wrapperFields.header.copyRefObject(refObject.header);
    this._satellites_usedIntialized = true;
    this._refObject.satellites_used = refObject.satellites_used;
    this._wrapperFields.satellite_used_prn.copyRefObject(refObject.satellite_used_prn);
    this._satellites_visibleIntialized = true;
    this._refObject.satellites_visible = refObject.satellites_visible;
    this._wrapperFields.satellite_visible_prn.copyRefObject(refObject.satellite_visible_prn);
    this._wrapperFields.satellite_visible_z.copyRefObject(refObject.satellite_visible_z);
    this._wrapperFields.satellite_visible_azimuth.copyRefObject(refObject.satellite_visible_azimuth);
    this._wrapperFields.satellite_visible_snr.copyRefObject(refObject.satellite_visible_snr);
    this._statusIntialized = true;
    this._refObject.status = refObject.status;
    this._motion_sourceIntialized = true;
    this._refObject.motion_source = refObject.motion_source;
    this._orientation_sourceIntialized = true;
    this._refObject.orientation_source = refObject.orientation_source;
    this._position_sourceIntialized = true;
    this._refObject.position_source = refObject.position_source;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
    HeaderWrapper.freeStruct(refObject.header);
    if (refObject.satellite_used_prn.size != 0) {
      Int32Wrapper.ArrayType.freeArray(refObject.satellite_used_prn);
      if (Int32Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.satellite_used_prn, Int32Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.satellite_visible_prn.size != 0) {
      Int32Wrapper.ArrayType.freeArray(refObject.satellite_visible_prn);
      if (Int32Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.satellite_visible_prn, Int32Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.satellite_visible_z.size != 0) {
      Int32Wrapper.ArrayType.freeArray(refObject.satellite_visible_z);
      if (Int32Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.satellite_visible_z, Int32Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.satellite_visible_azimuth.size != 0) {
      Int32Wrapper.ArrayType.freeArray(refObject.satellite_visible_azimuth);
      if (Int32Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.satellite_visible_azimuth, Int32Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.satellite_visible_snr.size != 0) {
      Int32Wrapper.ArrayType.freeArray(refObject.satellite_visible_snr);
      if (Int32Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.satellite_visible_snr, Int32Wrapper.refObjectArrayType, 'data');
      }
    }
  }
  static destoryRawROS(msg) {
    GPSStatusWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'gps_msgs', subFolder: 'msg', interfaceName: 'GPSStatus'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get header() {
    return this._wrapperFields.header;
  }
  set header(value) {
    if (value instanceof HeaderWrapper) {
      this._wrapperFields.header.copy(value);
    } else {
      this._wrapperFields.header.copy(new HeaderWrapper(value));
    }
  }
  get satellites_used() {
    if (!this._satellites_usedIntialized) {
      return undefined;
    }
    return this._refObject.satellites_used;
  }
  set satellites_used(value) {
    this._satellites_usedIntialized = true;
    this._refObject.satellites_used = value;
  }
  get satellite_used_prn() {
    return this._wrapperFields['satellite_used_prn'].data;
  }
  set satellite_used_prn(value) {
    this._wrapperFields['satellite_used_prn'].fill(value);
  }
  get satellites_visible() {
    if (!this._satellites_visibleIntialized) {
      return undefined;
    }
    return this._refObject.satellites_visible;
  }
  set satellites_visible(value) {
    this._satellites_visibleIntialized = true;
    this._refObject.satellites_visible = value;
  }
  get satellite_visible_prn() {
    return this._wrapperFields['satellite_visible_prn'].data;
  }
  set satellite_visible_prn(value) {
    this._wrapperFields['satellite_visible_prn'].fill(value);
  }
  get satellite_visible_z() {
    return this._wrapperFields['satellite_visible_z'].data;
  }
  set satellite_visible_z(value) {
    this._wrapperFields['satellite_visible_z'].fill(value);
  }
  get satellite_visible_azimuth() {
    return this._wrapperFields['satellite_visible_azimuth'].data;
  }
  set satellite_visible_azimuth(value) {
    this._wrapperFields['satellite_visible_azimuth'].fill(value);
  }
  get satellite_visible_snr() {
    return this._wrapperFields['satellite_visible_snr'].data;
  }
  set satellite_visible_snr(value) {
    this._wrapperFields['satellite_visible_snr'].fill(value);
  }
  get status() {
    if (!this._statusIntialized) {
      return undefined;
    }
    return this._refObject.status;
  }
  set status(value) {
    this._statusIntialized = true;
    this._refObject.status = value;
  }
  get motion_source() {
    if (!this._motion_sourceIntialized) {
      return undefined;
    }
    return this._refObject.motion_source;
  }
  set motion_source(value) {
    this._motion_sourceIntialized = true;
    this._refObject.motion_source = value;
  }
  get orientation_source() {
    if (!this._orientation_sourceIntialized) {
      return undefined;
    }
    return this._refObject.orientation_source;
  }
  set orientation_source(value) {
    this._orientation_sourceIntialized = true;
    this._refObject.orientation_source = value;
  }
  get position_source() {
    if (!this._position_sourceIntialized) {
      return undefined;
    }
    return this._refObject.position_source;
  }
  set position_source(value) {
    this._position_sourceIntialized = true;
    this._refObject.position_source = value;
  }
  copyRefObject(refObject) {
    this._refObject = new GPSStatusRefStruct(refObject.toObject());
    this._wrapperFields.header.copyRefObject(this._refObject.header);
    this._satellites_usedIntialized = true;
    this._wrapperFields.satellite_used_prn.copyRefObject(this._refObject.satellite_used_prn);
    this._satellites_visibleIntialized = true;
    this._wrapperFields.satellite_visible_prn.copyRefObject(this._refObject.satellite_visible_prn);
    this._wrapperFields.satellite_visible_z.copyRefObject(this._refObject.satellite_visible_z);
    this._wrapperFields.satellite_visible_azimuth.copyRefObject(this._refObject.satellite_visible_azimuth);
    this._wrapperFields.satellite_visible_snr.copyRefObject(this._refObject.satellite_visible_snr);
    this._statusIntialized = true;
    this._motion_sourceIntialized = true;
    this._orientation_sourceIntialized = true;
    this._position_sourceIntialized = true;
  }
  copy(other) {
    this._refObject = new GPSStatusRefStruct(other._refObject.toObject());
    this._wrapperFields.header.copy(other._wrapperFields.header);
    this._satellites_usedIntialized = true;
    this._wrapperFields.satellite_used_prn.copy(other._wrapperFields.satellite_used_prn);
    this._satellites_visibleIntialized = true;
    this._wrapperFields.satellite_visible_prn.copy(other._wrapperFields.satellite_visible_prn);
    this._wrapperFields.satellite_visible_z.copy(other._wrapperFields.satellite_visible_z);
    this._wrapperFields.satellite_visible_azimuth.copy(other._wrapperFields.satellite_visible_azimuth);
    this._wrapperFields.satellite_visible_snr.copy(other._wrapperFields.satellite_visible_snr);
    this._statusIntialized = true;
    this._motion_sourceIntialized = true;
    this._orientation_sourceIntialized = true;
    this._position_sourceIntialized = true;
  }
  static get classType() {
    return GPSStatusWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[{"type":"int16","name":"STATUS_NO_FIX","value":-1},{"type":"int16","name":"STATUS_FIX","value":0},{"type":"int16","name":"STATUS_SBAS_FIX","value":1},{"type":"int16","name":"STATUS_GBAS_FIX","value":2},{"type":"int16","name":"STATUS_DGPS_FIX","value":18},{"type":"int16","name":"STATUS_WAAS_FIX","value":33},{"type":"uint16","name":"SOURCE_NONE","value":0},{"type":"uint16","name":"SOURCE_GPS","value":1},{"type":"uint16","name":"SOURCE_POINTS","value":2},{"type":"uint16","name":"SOURCE_DOPPLER","value":4},{"type":"uint16","name":"SOURCE_ALTIMETER","value":8},{"type":"uint16","name":"SOURCE_MAGNETIC","value":16},{"type":"uint16","name":"SOURCE_GYRO","value":32},{"type":"uint16","name":"SOURCE_ACCEL","value":64}],"fields":[{"name":"header","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":"std_msgs","type":"Header","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"satellites_used","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"satellite_used_prn","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"satellites_visible","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"satellite_visible_prn","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"satellite_visible_z","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"satellite_visible_azimuth","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"satellite_visible_snr","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"status","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"motion_source","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"orientation_source","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"position_source","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"gps_msgs","type":"GPSStatus","stringUpperBound":null,"isPrimitiveType":false},"msgName":"GPSStatus"};
  }
  hasMember(name) {
    let memberNames = ["header","satellites_used","satellite_used_prn","satellites_visible","satellite_visible_prn","satellite_visible_z","satellite_visible_azimuth","satellite_visible_snr","status","motion_source","orientation_source","position_source"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class GPSStatusArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof GPSStatusWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new GPSStatusWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to GPSStatusArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to GPSStatusArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new GPSStatusRefArray(size);
    this._refObject = new GPSStatusRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new GPSStatusWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof GPSStatusArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "GPSStatusArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      GPSStatusWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return GPSStatusWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return GPSStatusArrayWrapper;
  }
}
// Define constants (14 in total)
Object.defineProperty(GPSStatusWrapper, "STATUS_NO_FIX", {value: -1, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GPSStatusWrapper, "STATUS_FIX", {value: 0, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GPSStatusWrapper, "STATUS_SBAS_FIX", {value: 1, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GPSStatusWrapper, "STATUS_GBAS_FIX", {value: 2, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GPSStatusWrapper, "STATUS_DGPS_FIX", {value: 18, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GPSStatusWrapper, "STATUS_WAAS_FIX", {value: 33, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GPSStatusWrapper, "SOURCE_NONE", {value: 0, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GPSStatusWrapper, "SOURCE_GPS", {value: 1, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GPSStatusWrapper, "SOURCE_POINTS", {value: 2, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GPSStatusWrapper, "SOURCE_DOPPLER", {value: 4, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GPSStatusWrapper, "SOURCE_ALTIMETER", {value: 8, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GPSStatusWrapper, "SOURCE_MAGNETIC", {value: 16, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GPSStatusWrapper, "SOURCE_GYRO", {value: 32, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GPSStatusWrapper, "SOURCE_ACCEL", {value: 64, writable: false, enumerable: true, configurable: true});
module.exports = GPSStatusWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [
    {
      "type": "int16",
      "name": "STATUS_NO_FIX",
      "value": -1
    },
    {
      "type": "int16",
      "name": "STATUS_FIX",
      "value": 0
    },
    {
      "type": "int16",
      "name": "STATUS_SBAS_FIX",
      "value": 1
    },
    {
      "type": "int16",
      "name": "STATUS_GBAS_FIX",
      "value": 2
    },
    {
      "type": "int16",
      "name": "STATUS_DGPS_FIX",
      "value": 18
    },
    {
      "type": "int16",
      "name": "STATUS_WAAS_FIX",
      "value": 33
    },
    {
      "type": "uint16",
      "name": "SOURCE_NONE",
      "value": 0
    },
    {
      "type": "uint16",
      "name": "SOURCE_GPS",
      "value": 1
    },
    {
      "type": "uint16",
      "name": "SOURCE_POINTS",
      "value": 2
    },
    {
      "type": "uint16",
      "name": "SOURCE_DOPPLER",
      "value": 4
    },
    {
      "type": "uint16",
      "name": "SOURCE_ALTIMETER",
      "value": 8
    },
    {
      "type": "uint16",
      "name": "SOURCE_MAGNETIC",
      "value": 16
    },
    {
      "type": "uint16",
      "name": "SOURCE_GYRO",
      "value": 32
    },
    {
      "type": "uint16",
      "name": "SOURCE_ACCEL",
      "value": 64
    }
  ],
  "fields": [
    {
      "name": "header",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": "std_msgs",
        "type": "Header",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "satellites_used",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "satellite_used_prn",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "satellites_visible",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "satellite_visible_prn",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "satellite_visible_z",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "satellite_visible_azimuth",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "satellite_visible_snr",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "status",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "motion_source",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "orientation_source",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "position_source",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "gps_msgs",
    "type": "GPSStatus",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "GPSStatus"
}
*/
