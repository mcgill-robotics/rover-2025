/* eslint-disable camelcase */
/* eslint-disable max-len */
// DO NOT EDIT
// This file is generated by the rostsd_gen script

declare module 'rclnodejs' {
  namespace ackermann_msgs {
    namespace msg {
      export interface AckermannDrive {
        steering_angle: number;
        steering_angle_velocity: number;
        speed: number;
        acceleration: number;
        jerk: number;
      }
      export interface AckermannDriveConstructor {
        new(other?: AckermannDrive): AckermannDrive;
      }
      export interface AckermannDriveStamped {
        header: std_msgs.msg.Header;
        drive: ackermann_msgs.msg.AckermannDrive;
      }
      export interface AckermannDriveStampedConstructor {
        new(other?: AckermannDriveStamped): AckermannDriveStamped;
      }
    }
  }

  namespace action_msgs {
    namespace msg {
      export interface GoalInfo {
        goal_id: unique_identifier_msgs.msg.UUID;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface GoalInfoConstructor {
        new(other?: GoalInfo): GoalInfo;
      }
      export interface GoalStatus {
        goal_info: action_msgs.msg.GoalInfo;
        status: number;
      }
      export interface GoalStatusConstructor {
        readonly STATUS_UNKNOWN: number;
        readonly STATUS_ACCEPTED: number;
        readonly STATUS_EXECUTING: number;
        readonly STATUS_CANCELING: number;
        readonly STATUS_SUCCEEDED: number;
        readonly STATUS_CANCELED: number;
        readonly STATUS_ABORTED: number;
        new(other?: GoalStatus): GoalStatus;
      }
      export interface GoalStatusArray {
        status_list: action_msgs.msg.GoalStatus[];
      }
      export interface GoalStatusArrayConstructor {
        new(other?: GoalStatusArray): GoalStatusArray;
      }
    }
    namespace srv {
      export interface CancelGoalConstructor extends ROSService {
        readonly Request: CancelGoal_RequestConstructor;
        readonly Response: CancelGoal_ResponseConstructor;
      }
      export interface CancelGoal_Request {
        goal_info: action_msgs.msg.GoalInfo;
      }
      export interface CancelGoal_RequestConstructor {
        new(other?: CancelGoal_Request): CancelGoal_Request;
      }
      export interface CancelGoal_Response {
        return_code: number;
        goals_canceling: action_msgs.msg.GoalInfo[];
      }
      export interface CancelGoal_ResponseConstructor {
        readonly ERROR_NONE: number;
        readonly ERROR_REJECTED: number;
        readonly ERROR_UNKNOWN_GOAL_ID: number;
        readonly ERROR_GOAL_TERMINATED: number;
        new(other?: CancelGoal_Response): CancelGoal_Response;
      }
    }
  }

  namespace actionlib_msgs {
    namespace msg {
      export interface GoalID {
        stamp: builtin_interfaces.msg.Time;
        id: string;
      }
      export interface GoalIDConstructor {
        new(other?: GoalID): GoalID;
      }
      export interface GoalStatus {
        goal_id: actionlib_msgs.msg.GoalID;
        status: number;
        text: string;
      }
      export interface GoalStatusConstructor {
        readonly PENDING: number;
        readonly ACTIVE: number;
        readonly PREEMPTED: number;
        readonly SUCCEEDED: number;
        readonly ABORTED: number;
        readonly REJECTED: number;
        readonly PREEMPTING: number;
        readonly RECALLING: number;
        readonly RECALLED: number;
        readonly LOST: number;
        new(other?: GoalStatus): GoalStatus;
      }
      export interface GoalStatusArray {
        header: std_msgs.msg.Header;
        status_list: actionlib_msgs.msg.GoalStatus[];
      }
      export interface GoalStatusArrayConstructor {
        new(other?: GoalStatusArray): GoalStatusArray;
      }
    }
  }

  namespace actuator_msgs {
    namespace msg {
      export interface Actuators {
        header: std_msgs.msg.Header;
        position: number[] | Float64Array;
        velocity: number[] | Float64Array;
        normalized: number[] | Float64Array;
      }
      export interface ActuatorsConstructor {
        new(other?: Actuators): Actuators;
      }
      export interface ActuatorsAngularPosition {
        position: number[] | Float64Array;
      }
      export interface ActuatorsAngularPositionConstructor {
        new(other?: ActuatorsAngularPosition): ActuatorsAngularPosition;
      }
      export interface ActuatorsAngularVelocity {
        velocity: number[] | Float64Array;
      }
      export interface ActuatorsAngularVelocityConstructor {
        new(other?: ActuatorsAngularVelocity): ActuatorsAngularVelocity;
      }
      export interface ActuatorsLinearPosition {
        position: number[] | Float64Array;
      }
      export interface ActuatorsLinearPositionConstructor {
        new(other?: ActuatorsLinearPosition): ActuatorsLinearPosition;
      }
      export interface ActuatorsLinearVelocity {
        velocity: number[] | Float64Array;
      }
      export interface ActuatorsLinearVelocityConstructor {
        new(other?: ActuatorsLinearVelocity): ActuatorsLinearVelocity;
      }
      export interface ActuatorsNormalized {
        header: std_msgs.msg.Header;
        normalized: number[] | Float64Array;
      }
      export interface ActuatorsNormalizedConstructor {
        new(other?: ActuatorsNormalized): ActuatorsNormalized;
      }
      export interface ActuatorsPosition {
        header: std_msgs.msg.Header;
        angular: actuator_msgs.msg.ActuatorsAngularPosition;
        linear: actuator_msgs.msg.ActuatorsLinearPosition;
      }
      export interface ActuatorsPositionConstructor {
        new(other?: ActuatorsPosition): ActuatorsPosition;
      }
      export interface ActuatorsVelocity {
        header: std_msgs.msg.Header;
        angular: actuator_msgs.msg.ActuatorsAngularVelocity;
        linear: actuator_msgs.msg.ActuatorsLinearVelocity;
      }
      export interface ActuatorsVelocityConstructor {
        new(other?: ActuatorsVelocity): ActuatorsVelocity;
      }
    }
  }

  namespace bond {
    namespace msg {
      export interface Constants {
      }
      export interface ConstantsConstructor {
        readonly DEAD_PUBLISH_PERIOD: number;
        readonly DEFAULT_CONNECT_TIMEOUT: number;
        readonly DEFAULT_HEARTBEAT_TIMEOUT: number;
        readonly DEFAULT_DISCONNECT_TIMEOUT: number;
        readonly DEFAULT_HEARTBEAT_PERIOD: number;
        readonly DISABLE_HEARTBEAT_TIMEOUT_PARAM: string;
        new(other?: Constants): Constants;
      }
      export interface Status {
        header: std_msgs.msg.Header;
        id: string;
        instance_id: string;
        active: boolean;
        heartbeat_timeout: number;
        heartbeat_period: number;
      }
      export interface StatusConstructor {
        new(other?: Status): Status;
      }
    }
  }

  namespace builtin_interfaces {
    namespace msg {
      export interface Duration {
        sec: number;
        nanosec: number;
      }
      export interface DurationConstructor {
        new(other?: Duration): Duration;
      }
      export interface Time {
        sec: number;
        nanosec: number;
      }
      export interface TimeConstructor {
        new(other?: Time): Time;
      }
    }
  }

  namespace cartographer_ros_msgs {
    namespace msg {
      export interface BagfileProgress {
        current_bagfile_name: string;
        current_bagfile_id: number;
        total_bagfiles: number;
        total_messages: number;
        processed_messages: number;
        total_seconds: number;
        processed_seconds: number;
      }
      export interface BagfileProgressConstructor {
        new(other?: BagfileProgress): BagfileProgress;
      }
      export interface HistogramBucket {
        bucket_boundary: number;
        count: number;
      }
      export interface HistogramBucketConstructor {
        new(other?: HistogramBucket): HistogramBucket;
      }
      export interface LandmarkEntry {
        id: string;
        tracking_from_landmark_transform: geometry_msgs.msg.Pose;
        translation_weight: number;
        rotation_weight: number;
      }
      export interface LandmarkEntryConstructor {
        new(other?: LandmarkEntry): LandmarkEntry;
      }
      export interface LandmarkList {
        header: std_msgs.msg.Header;
        landmarks: cartographer_ros_msgs.msg.LandmarkEntry[];
      }
      export interface LandmarkListConstructor {
        new(other?: LandmarkList): LandmarkList;
      }
      export interface Metric {
        type: number;
        labels: cartographer_ros_msgs.msg.MetricLabel[];
        value: number;
        counts_by_bucket: cartographer_ros_msgs.msg.HistogramBucket[];
      }
      export interface MetricConstructor {
        readonly TYPE_COUNTER: number;
        readonly TYPE_GAUGE: number;
        readonly TYPE_HISTOGRAM: number;
        new(other?: Metric): Metric;
      }
      export interface MetricFamily {
        name: string;
        description: string;
        metrics: cartographer_ros_msgs.msg.Metric[];
      }
      export interface MetricFamilyConstructor {
        new(other?: MetricFamily): MetricFamily;
      }
      export interface MetricLabel {
        key: string;
        value: string;
      }
      export interface MetricLabelConstructor {
        new(other?: MetricLabel): MetricLabel;
      }
      export interface StatusCode {
      }
      export interface StatusCodeConstructor {
        readonly OK: number;
        readonly CANCELLED: number;
        readonly UNKNOWN: number;
        readonly INVALID_ARGUMENT: number;
        readonly DEADLINE_EXCEEDED: number;
        readonly NOT_FOUND: number;
        readonly ALREADY_EXISTS: number;
        readonly PERMISSION_DENIED: number;
        readonly RESOURCE_EXHAUSTED: number;
        readonly FAILED_PRECONDITION: number;
        readonly ABORTED: number;
        readonly OUT_OF_RANGE: number;
        readonly UNIMPLEMENTED: number;
        readonly INTERNAL: number;
        readonly UNAVAILABLE: number;
        readonly DATA_LOSS: number;
        new(other?: StatusCode): StatusCode;
      }
      export interface StatusResponse {
        code: number;
        message: string;
      }
      export interface StatusResponseConstructor {
        new(other?: StatusResponse): StatusResponse;
      }
      export interface SubmapEntry {
        trajectory_id: number;
        submap_index: number;
        submap_version: number;
        pose: geometry_msgs.msg.Pose;
        is_frozen: boolean;
      }
      export interface SubmapEntryConstructor {
        new(other?: SubmapEntry): SubmapEntry;
      }
      export interface SubmapList {
        header: std_msgs.msg.Header;
        submap: cartographer_ros_msgs.msg.SubmapEntry[];
      }
      export interface SubmapListConstructor {
        new(other?: SubmapList): SubmapList;
      }
      export interface SubmapTexture {
        cells: number[] | Uint8Array;
        width: number;
        height: number;
        resolution: number;
        slice_pose: geometry_msgs.msg.Pose;
      }
      export interface SubmapTextureConstructor {
        new(other?: SubmapTexture): SubmapTexture;
      }
      export interface TrajectoryStates {
        header: std_msgs.msg.Header;
        trajectory_id: number[] | Int32Array;
        trajectory_state: number[] | Uint8Array;
      }
      export interface TrajectoryStatesConstructor {
        readonly ACTIVE: number;
        readonly FINISHED: number;
        readonly FROZEN: number;
        readonly DELETED: number;
        new(other?: TrajectoryStates): TrajectoryStates;
      }
    }
    namespace srv {
      export interface FinishTrajectoryConstructor extends ROSService {
        readonly Request: FinishTrajectory_RequestConstructor;
        readonly Response: FinishTrajectory_ResponseConstructor;
      }
      export interface FinishTrajectory_Request {
        trajectory_id: number;
      }
      export interface FinishTrajectory_RequestConstructor {
        new(other?: FinishTrajectory_Request): FinishTrajectory_Request;
      }
      export interface FinishTrajectory_Response {
        status: cartographer_ros_msgs.msg.StatusResponse;
      }
      export interface FinishTrajectory_ResponseConstructor {
        new(other?: FinishTrajectory_Response): FinishTrajectory_Response;
      }
      export interface GetTrajectoryStatesConstructor extends ROSService {
        readonly Request: GetTrajectoryStates_RequestConstructor;
        readonly Response: GetTrajectoryStates_ResponseConstructor;
      }
      export interface GetTrajectoryStates_Request {
      }
      export interface GetTrajectoryStates_RequestConstructor {
        new(other?: GetTrajectoryStates_Request): GetTrajectoryStates_Request;
      }
      export interface GetTrajectoryStates_Response {
        status: cartographer_ros_msgs.msg.StatusResponse;
        trajectory_states: cartographer_ros_msgs.msg.TrajectoryStates;
      }
      export interface GetTrajectoryStates_ResponseConstructor {
        new(other?: GetTrajectoryStates_Response): GetTrajectoryStates_Response;
      }
      export interface ReadMetricsConstructor extends ROSService {
        readonly Request: ReadMetrics_RequestConstructor;
        readonly Response: ReadMetrics_ResponseConstructor;
      }
      export interface ReadMetrics_Request {
      }
      export interface ReadMetrics_RequestConstructor {
        new(other?: ReadMetrics_Request): ReadMetrics_Request;
      }
      export interface ReadMetrics_Response {
        status: cartographer_ros_msgs.msg.StatusResponse;
        metric_families: cartographer_ros_msgs.msg.MetricFamily[];
        timestamp: builtin_interfaces.msg.Time;
      }
      export interface ReadMetrics_ResponseConstructor {
        new(other?: ReadMetrics_Response): ReadMetrics_Response;
      }
      export interface StartTrajectoryConstructor extends ROSService {
        readonly Request: StartTrajectory_RequestConstructor;
        readonly Response: StartTrajectory_ResponseConstructor;
      }
      export interface StartTrajectory_Request {
        configuration_directory: string;
        configuration_basename: string;
        use_initial_pose: boolean;
        initial_pose: geometry_msgs.msg.Pose;
        relative_to_trajectory_id: number;
      }
      export interface StartTrajectory_RequestConstructor {
        new(other?: StartTrajectory_Request): StartTrajectory_Request;
      }
      export interface StartTrajectory_Response {
        status: cartographer_ros_msgs.msg.StatusResponse;
        trajectory_id: number;
      }
      export interface StartTrajectory_ResponseConstructor {
        new(other?: StartTrajectory_Response): StartTrajectory_Response;
      }
      export interface SubmapQueryConstructor extends ROSService {
        readonly Request: SubmapQuery_RequestConstructor;
        readonly Response: SubmapQuery_ResponseConstructor;
      }
      export interface SubmapQuery_Request {
        trajectory_id: number;
        submap_index: number;
      }
      export interface SubmapQuery_RequestConstructor {
        new(other?: SubmapQuery_Request): SubmapQuery_Request;
      }
      export interface SubmapQuery_Response {
        status: cartographer_ros_msgs.msg.StatusResponse;
        submap_version: number;
        textures: cartographer_ros_msgs.msg.SubmapTexture[];
      }
      export interface SubmapQuery_ResponseConstructor {
        new(other?: SubmapQuery_Response): SubmapQuery_Response;
      }
      export interface TrajectoryQueryConstructor extends ROSService {
        readonly Request: TrajectoryQuery_RequestConstructor;
        readonly Response: TrajectoryQuery_ResponseConstructor;
      }
      export interface TrajectoryQuery_Request {
        trajectory_id: number;
      }
      export interface TrajectoryQuery_RequestConstructor {
        new(other?: TrajectoryQuery_Request): TrajectoryQuery_Request;
      }
      export interface TrajectoryQuery_Response {
        status: cartographer_ros_msgs.msg.StatusResponse;
        trajectory: geometry_msgs.msg.PoseStamped[];
      }
      export interface TrajectoryQuery_ResponseConstructor {
        new(other?: TrajectoryQuery_Response): TrajectoryQuery_Response;
      }
      export interface WriteStateConstructor extends ROSService {
        readonly Request: WriteState_RequestConstructor;
        readonly Response: WriteState_ResponseConstructor;
      }
      export interface WriteState_Request {
        filename: string;
        include_unfinished_submaps: boolean;
      }
      export interface WriteState_RequestConstructor {
        new(other?: WriteState_Request): WriteState_Request;
      }
      export interface WriteState_Response {
        status: cartographer_ros_msgs.msg.StatusResponse;
      }
      export interface WriteState_ResponseConstructor {
        new(other?: WriteState_Response): WriteState_Response;
      }
    }
  }

  namespace composition_interfaces {
    namespace srv {
      export interface ListNodesConstructor extends ROSService {
        readonly Request: ListNodes_RequestConstructor;
        readonly Response: ListNodes_ResponseConstructor;
      }
      export interface ListNodes_Request {
      }
      export interface ListNodes_RequestConstructor {
        new(other?: ListNodes_Request): ListNodes_Request;
      }
      export interface ListNodes_Response {
        full_node_names: string[];
        unique_ids: number[];
      }
      export interface ListNodes_ResponseConstructor {
        new(other?: ListNodes_Response): ListNodes_Response;
      }
      export interface LoadNodeConstructor extends ROSService {
        readonly Request: LoadNode_RequestConstructor;
        readonly Response: LoadNode_ResponseConstructor;
      }
      export interface LoadNode_Request {
        package_name: string;
        plugin_name: string;
        node_name: string;
        node_namespace: string;
        log_level: number;
        remap_rules: string[];
        parameters: rcl_interfaces.msg.Parameter[];
        extra_arguments: rcl_interfaces.msg.Parameter[];
      }
      export interface LoadNode_RequestConstructor {
        new(other?: LoadNode_Request): LoadNode_Request;
      }
      export interface LoadNode_Response {
        success: boolean;
        error_message: string;
        full_node_name: string;
        unique_id: number;
      }
      export interface LoadNode_ResponseConstructor {
        new(other?: LoadNode_Response): LoadNode_Response;
      }
      export interface UnloadNodeConstructor extends ROSService {
        readonly Request: UnloadNode_RequestConstructor;
        readonly Response: UnloadNode_ResponseConstructor;
      }
      export interface UnloadNode_Request {
        unique_id: number;
      }
      export interface UnloadNode_RequestConstructor {
        new(other?: UnloadNode_Request): UnloadNode_Request;
      }
      export interface UnloadNode_Response {
        success: boolean;
        error_message: string;
      }
      export interface UnloadNode_ResponseConstructor {
        new(other?: UnloadNode_Response): UnloadNode_Response;
      }
    }
  }

  namespace control_msgs {
    namespace action {
      export interface FollowJointTrajectoryConstructor {
        readonly Goal: FollowJointTrajectory_GoalConstructor;
        readonly Result: FollowJointTrajectory_ResultConstructor;
        readonly Feedback: FollowJointTrajectory_FeedbackConstructor;
      }
      export interface FollowJointTrajectory_Feedback {
        header: std_msgs.msg.Header;
        joint_names: string[];
        desired: trajectory_msgs.msg.JointTrajectoryPoint;
        actual: trajectory_msgs.msg.JointTrajectoryPoint;
        error: trajectory_msgs.msg.JointTrajectoryPoint;
        multi_dof_joint_names: string[];
        multi_dof_desired: trajectory_msgs.msg.MultiDOFJointTrajectoryPoint;
        multi_dof_actual: trajectory_msgs.msg.MultiDOFJointTrajectoryPoint;
        multi_dof_error: trajectory_msgs.msg.MultiDOFJointTrajectoryPoint;
      }
      export interface FollowJointTrajectory_FeedbackConstructor {
        new(other?: FollowJointTrajectory_Feedback): FollowJointTrajectory_Feedback;
      }
      export interface FollowJointTrajectory_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: control_msgs.action.FollowJointTrajectory_Feedback;
      }
      export interface FollowJointTrajectory_FeedbackMessageConstructor {
        new(other?: FollowJointTrajectory_FeedbackMessage): FollowJointTrajectory_FeedbackMessage;
      }
      export interface FollowJointTrajectory_GetResultConstructor extends ROSService {
        readonly Request: FollowJointTrajectory_GetResult_RequestConstructor;
        readonly Response: FollowJointTrajectory_GetResult_ResponseConstructor;
      }
      export interface FollowJointTrajectory_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface FollowJointTrajectory_GetResult_RequestConstructor {
        new(other?: FollowJointTrajectory_GetResult_Request): FollowJointTrajectory_GetResult_Request;
      }
      export interface FollowJointTrajectory_GetResult_Response {
        status: number;
        result: control_msgs.action.FollowJointTrajectory_Result;
      }
      export interface FollowJointTrajectory_GetResult_ResponseConstructor {
        new(other?: FollowJointTrajectory_GetResult_Response): FollowJointTrajectory_GetResult_Response;
      }
      export interface FollowJointTrajectory_Goal {
        trajectory: trajectory_msgs.msg.JointTrajectory;
        multi_dof_trajectory: trajectory_msgs.msg.MultiDOFJointTrajectory;
        path_tolerance: control_msgs.msg.JointTolerance[];
        component_path_tolerance: control_msgs.msg.JointComponentTolerance[];
        goal_tolerance: control_msgs.msg.JointTolerance[];
        component_goal_tolerance: control_msgs.msg.JointComponentTolerance[];
        goal_time_tolerance: builtin_interfaces.msg.Duration;
      }
      export interface FollowJointTrajectory_GoalConstructor {
        new(other?: FollowJointTrajectory_Goal): FollowJointTrajectory_Goal;
      }
      export interface FollowJointTrajectory_Result {
        error_code: number;
        error_string: string;
      }
      export interface FollowJointTrajectory_ResultConstructor {
        readonly SUCCESSFUL: number;
        readonly INVALID_GOAL: number;
        readonly INVALID_JOINTS: number;
        readonly OLD_HEADER_TIMESTAMP: number;
        readonly PATH_TOLERANCE_VIOLATED: number;
        readonly GOAL_TOLERANCE_VIOLATED: number;
        new(other?: FollowJointTrajectory_Result): FollowJointTrajectory_Result;
      }
      export interface FollowJointTrajectory_SendGoalConstructor extends ROSService {
        readonly Request: FollowJointTrajectory_SendGoal_RequestConstructor;
        readonly Response: FollowJointTrajectory_SendGoal_ResponseConstructor;
      }
      export interface FollowJointTrajectory_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: control_msgs.action.FollowJointTrajectory_Goal;
      }
      export interface FollowJointTrajectory_SendGoal_RequestConstructor {
        new(other?: FollowJointTrajectory_SendGoal_Request): FollowJointTrajectory_SendGoal_Request;
      }
      export interface FollowJointTrajectory_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface FollowJointTrajectory_SendGoal_ResponseConstructor {
        new(other?: FollowJointTrajectory_SendGoal_Response): FollowJointTrajectory_SendGoal_Response;
      }
      export interface GripperCommandConstructor {
        readonly Goal: GripperCommand_GoalConstructor;
        readonly Result: GripperCommand_ResultConstructor;
        readonly Feedback: GripperCommand_FeedbackConstructor;
      }
      export interface GripperCommand_Feedback {
        position: number;
        effort: number;
        stalled: boolean;
        reached_goal: boolean;
      }
      export interface GripperCommand_FeedbackConstructor {
        new(other?: GripperCommand_Feedback): GripperCommand_Feedback;
      }
      export interface GripperCommand_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: control_msgs.action.GripperCommand_Feedback;
      }
      export interface GripperCommand_FeedbackMessageConstructor {
        new(other?: GripperCommand_FeedbackMessage): GripperCommand_FeedbackMessage;
      }
      export interface GripperCommand_GetResultConstructor extends ROSService {
        readonly Request: GripperCommand_GetResult_RequestConstructor;
        readonly Response: GripperCommand_GetResult_ResponseConstructor;
      }
      export interface GripperCommand_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface GripperCommand_GetResult_RequestConstructor {
        new(other?: GripperCommand_GetResult_Request): GripperCommand_GetResult_Request;
      }
      export interface GripperCommand_GetResult_Response {
        status: number;
        result: control_msgs.action.GripperCommand_Result;
      }
      export interface GripperCommand_GetResult_ResponseConstructor {
        new(other?: GripperCommand_GetResult_Response): GripperCommand_GetResult_Response;
      }
      export interface GripperCommand_Goal {
        command: control_msgs.msg.GripperCommand;
      }
      export interface GripperCommand_GoalConstructor {
        new(other?: GripperCommand_Goal): GripperCommand_Goal;
      }
      export interface GripperCommand_Result {
        position: number;
        effort: number;
        stalled: boolean;
        reached_goal: boolean;
      }
      export interface GripperCommand_ResultConstructor {
        new(other?: GripperCommand_Result): GripperCommand_Result;
      }
      export interface GripperCommand_SendGoalConstructor extends ROSService {
        readonly Request: GripperCommand_SendGoal_RequestConstructor;
        readonly Response: GripperCommand_SendGoal_ResponseConstructor;
      }
      export interface GripperCommand_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: control_msgs.action.GripperCommand_Goal;
      }
      export interface GripperCommand_SendGoal_RequestConstructor {
        new(other?: GripperCommand_SendGoal_Request): GripperCommand_SendGoal_Request;
      }
      export interface GripperCommand_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface GripperCommand_SendGoal_ResponseConstructor {
        new(other?: GripperCommand_SendGoal_Response): GripperCommand_SendGoal_Response;
      }
      export interface JointTrajectoryConstructor {
        readonly Goal: JointTrajectory_GoalConstructor;
        readonly Result: JointTrajectory_ResultConstructor;
        readonly Feedback: JointTrajectory_FeedbackConstructor;
      }
      export interface JointTrajectory_Feedback {
      }
      export interface JointTrajectory_FeedbackConstructor {
        new(other?: JointTrajectory_Feedback): JointTrajectory_Feedback;
      }
      export interface JointTrajectory_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: control_msgs.action.JointTrajectory_Feedback;
      }
      export interface JointTrajectory_FeedbackMessageConstructor {
        new(other?: JointTrajectory_FeedbackMessage): JointTrajectory_FeedbackMessage;
      }
      export interface JointTrajectory_GetResultConstructor extends ROSService {
        readonly Request: JointTrajectory_GetResult_RequestConstructor;
        readonly Response: JointTrajectory_GetResult_ResponseConstructor;
      }
      export interface JointTrajectory_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface JointTrajectory_GetResult_RequestConstructor {
        new(other?: JointTrajectory_GetResult_Request): JointTrajectory_GetResult_Request;
      }
      export interface JointTrajectory_GetResult_Response {
        status: number;
        result: control_msgs.action.JointTrajectory_Result;
      }
      export interface JointTrajectory_GetResult_ResponseConstructor {
        new(other?: JointTrajectory_GetResult_Response): JointTrajectory_GetResult_Response;
      }
      export interface JointTrajectory_Goal {
        trajectory: trajectory_msgs.msg.JointTrajectory;
      }
      export interface JointTrajectory_GoalConstructor {
        new(other?: JointTrajectory_Goal): JointTrajectory_Goal;
      }
      export interface JointTrajectory_Result {
      }
      export interface JointTrajectory_ResultConstructor {
        new(other?: JointTrajectory_Result): JointTrajectory_Result;
      }
      export interface JointTrajectory_SendGoalConstructor extends ROSService {
        readonly Request: JointTrajectory_SendGoal_RequestConstructor;
        readonly Response: JointTrajectory_SendGoal_ResponseConstructor;
      }
      export interface JointTrajectory_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: control_msgs.action.JointTrajectory_Goal;
      }
      export interface JointTrajectory_SendGoal_RequestConstructor {
        new(other?: JointTrajectory_SendGoal_Request): JointTrajectory_SendGoal_Request;
      }
      export interface JointTrajectory_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface JointTrajectory_SendGoal_ResponseConstructor {
        new(other?: JointTrajectory_SendGoal_Response): JointTrajectory_SendGoal_Response;
      }
      export interface ParallelGripperCommandConstructor {
        readonly Goal: ParallelGripperCommand_GoalConstructor;
        readonly Result: ParallelGripperCommand_ResultConstructor;
        readonly Feedback: ParallelGripperCommand_FeedbackConstructor;
      }
      export interface ParallelGripperCommand_Feedback {
        state: sensor_msgs.msg.JointState;
      }
      export interface ParallelGripperCommand_FeedbackConstructor {
        new(other?: ParallelGripperCommand_Feedback): ParallelGripperCommand_Feedback;
      }
      export interface ParallelGripperCommand_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: control_msgs.action.ParallelGripperCommand_Feedback;
      }
      export interface ParallelGripperCommand_FeedbackMessageConstructor {
        new(other?: ParallelGripperCommand_FeedbackMessage): ParallelGripperCommand_FeedbackMessage;
      }
      export interface ParallelGripperCommand_GetResultConstructor extends ROSService {
        readonly Request: ParallelGripperCommand_GetResult_RequestConstructor;
        readonly Response: ParallelGripperCommand_GetResult_ResponseConstructor;
      }
      export interface ParallelGripperCommand_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface ParallelGripperCommand_GetResult_RequestConstructor {
        new(other?: ParallelGripperCommand_GetResult_Request): ParallelGripperCommand_GetResult_Request;
      }
      export interface ParallelGripperCommand_GetResult_Response {
        status: number;
        result: control_msgs.action.ParallelGripperCommand_Result;
      }
      export interface ParallelGripperCommand_GetResult_ResponseConstructor {
        new(other?: ParallelGripperCommand_GetResult_Response): ParallelGripperCommand_GetResult_Response;
      }
      export interface ParallelGripperCommand_Goal {
        command: sensor_msgs.msg.JointState;
      }
      export interface ParallelGripperCommand_GoalConstructor {
        new(other?: ParallelGripperCommand_Goal): ParallelGripperCommand_Goal;
      }
      export interface ParallelGripperCommand_Result {
        state: sensor_msgs.msg.JointState;
        stalled: boolean;
        reached_goal: boolean;
      }
      export interface ParallelGripperCommand_ResultConstructor {
        new(other?: ParallelGripperCommand_Result): ParallelGripperCommand_Result;
      }
      export interface ParallelGripperCommand_SendGoalConstructor extends ROSService {
        readonly Request: ParallelGripperCommand_SendGoal_RequestConstructor;
        readonly Response: ParallelGripperCommand_SendGoal_ResponseConstructor;
      }
      export interface ParallelGripperCommand_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: control_msgs.action.ParallelGripperCommand_Goal;
      }
      export interface ParallelGripperCommand_SendGoal_RequestConstructor {
        new(other?: ParallelGripperCommand_SendGoal_Request): ParallelGripperCommand_SendGoal_Request;
      }
      export interface ParallelGripperCommand_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface ParallelGripperCommand_SendGoal_ResponseConstructor {
        new(other?: ParallelGripperCommand_SendGoal_Response): ParallelGripperCommand_SendGoal_Response;
      }
      export interface PointHeadConstructor {
        readonly Goal: PointHead_GoalConstructor;
        readonly Result: PointHead_ResultConstructor;
        readonly Feedback: PointHead_FeedbackConstructor;
      }
      export interface PointHead_Feedback {
        pointing_angle_error: number;
      }
      export interface PointHead_FeedbackConstructor {
        new(other?: PointHead_Feedback): PointHead_Feedback;
      }
      export interface PointHead_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: control_msgs.action.PointHead_Feedback;
      }
      export interface PointHead_FeedbackMessageConstructor {
        new(other?: PointHead_FeedbackMessage): PointHead_FeedbackMessage;
      }
      export interface PointHead_GetResultConstructor extends ROSService {
        readonly Request: PointHead_GetResult_RequestConstructor;
        readonly Response: PointHead_GetResult_ResponseConstructor;
      }
      export interface PointHead_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface PointHead_GetResult_RequestConstructor {
        new(other?: PointHead_GetResult_Request): PointHead_GetResult_Request;
      }
      export interface PointHead_GetResult_Response {
        status: number;
        result: control_msgs.action.PointHead_Result;
      }
      export interface PointHead_GetResult_ResponseConstructor {
        new(other?: PointHead_GetResult_Response): PointHead_GetResult_Response;
      }
      export interface PointHead_Goal {
        target: geometry_msgs.msg.PointStamped;
        pointing_axis: geometry_msgs.msg.Vector3;
        pointing_frame: string;
        min_duration: builtin_interfaces.msg.Duration;
        max_velocity: number;
      }
      export interface PointHead_GoalConstructor {
        new(other?: PointHead_Goal): PointHead_Goal;
      }
      export interface PointHead_Result {
      }
      export interface PointHead_ResultConstructor {
        new(other?: PointHead_Result): PointHead_Result;
      }
      export interface PointHead_SendGoalConstructor extends ROSService {
        readonly Request: PointHead_SendGoal_RequestConstructor;
        readonly Response: PointHead_SendGoal_ResponseConstructor;
      }
      export interface PointHead_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: control_msgs.action.PointHead_Goal;
      }
      export interface PointHead_SendGoal_RequestConstructor {
        new(other?: PointHead_SendGoal_Request): PointHead_SendGoal_Request;
      }
      export interface PointHead_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface PointHead_SendGoal_ResponseConstructor {
        new(other?: PointHead_SendGoal_Response): PointHead_SendGoal_Response;
      }
      export interface SingleJointPositionConstructor {
        readonly Goal: SingleJointPosition_GoalConstructor;
        readonly Result: SingleJointPosition_ResultConstructor;
        readonly Feedback: SingleJointPosition_FeedbackConstructor;
      }
      export interface SingleJointPosition_Feedback {
        header: std_msgs.msg.Header;
        position: number;
        velocity: number;
        error: number;
      }
      export interface SingleJointPosition_FeedbackConstructor {
        new(other?: SingleJointPosition_Feedback): SingleJointPosition_Feedback;
      }
      export interface SingleJointPosition_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: control_msgs.action.SingleJointPosition_Feedback;
      }
      export interface SingleJointPosition_FeedbackMessageConstructor {
        new(other?: SingleJointPosition_FeedbackMessage): SingleJointPosition_FeedbackMessage;
      }
      export interface SingleJointPosition_GetResultConstructor extends ROSService {
        readonly Request: SingleJointPosition_GetResult_RequestConstructor;
        readonly Response: SingleJointPosition_GetResult_ResponseConstructor;
      }
      export interface SingleJointPosition_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface SingleJointPosition_GetResult_RequestConstructor {
        new(other?: SingleJointPosition_GetResult_Request): SingleJointPosition_GetResult_Request;
      }
      export interface SingleJointPosition_GetResult_Response {
        status: number;
        result: control_msgs.action.SingleJointPosition_Result;
      }
      export interface SingleJointPosition_GetResult_ResponseConstructor {
        new(other?: SingleJointPosition_GetResult_Response): SingleJointPosition_GetResult_Response;
      }
      export interface SingleJointPosition_Goal {
        position: number;
        min_duration: builtin_interfaces.msg.Duration;
        max_velocity: number;
      }
      export interface SingleJointPosition_GoalConstructor {
        new(other?: SingleJointPosition_Goal): SingleJointPosition_Goal;
      }
      export interface SingleJointPosition_Result {
      }
      export interface SingleJointPosition_ResultConstructor {
        new(other?: SingleJointPosition_Result): SingleJointPosition_Result;
      }
      export interface SingleJointPosition_SendGoalConstructor extends ROSService {
        readonly Request: SingleJointPosition_SendGoal_RequestConstructor;
        readonly Response: SingleJointPosition_SendGoal_ResponseConstructor;
      }
      export interface SingleJointPosition_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: control_msgs.action.SingleJointPosition_Goal;
      }
      export interface SingleJointPosition_SendGoal_RequestConstructor {
        new(other?: SingleJointPosition_SendGoal_Request): SingleJointPosition_SendGoal_Request;
      }
      export interface SingleJointPosition_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface SingleJointPosition_SendGoal_ResponseConstructor {
        new(other?: SingleJointPosition_SendGoal_Response): SingleJointPosition_SendGoal_Response;
      }
    }
    namespace msg {
      export interface AdmittanceControllerState {
        mass: std_msgs.msg.Float64MultiArray;
        damping: std_msgs.msg.Float64MultiArray;
        stiffness: std_msgs.msg.Float64MultiArray;
        rot_base_control: geometry_msgs.msg.Quaternion;
        ref_trans_base_ft: geometry_msgs.msg.TransformStamped;
        selected_axes: std_msgs.msg.Int8MultiArray;
        ft_sensor_frame: std_msgs.msg.String;
        admittance_position: geometry_msgs.msg.TransformStamped;
        admittance_acceleration: geometry_msgs.msg.TwistStamped;
        admittance_velocity: geometry_msgs.msg.TwistStamped;
        wrench_base: geometry_msgs.msg.WrenchStamped;
        joint_state: sensor_msgs.msg.JointState;
      }
      export interface AdmittanceControllerStateConstructor {
        new(other?: AdmittanceControllerState): AdmittanceControllerState;
      }
      export interface DynamicJointState {
        header: std_msgs.msg.Header;
        joint_names: string[];
        interface_values: control_msgs.msg.InterfaceValue[];
      }
      export interface DynamicJointStateConstructor {
        new(other?: DynamicJointState): DynamicJointState;
      }
      export interface GripperCommand {
        position: number;
        max_effort: number;
      }
      export interface GripperCommandConstructor {
        new(other?: GripperCommand): GripperCommand;
      }
      export interface InterfaceValue {
        interface_names: string[];
        values: number[] | Float64Array;
      }
      export interface InterfaceValueConstructor {
        new(other?: InterfaceValue): InterfaceValue;
      }
      export interface JointComponentTolerance {
        joint_name: string;
        component: number;
        position: number;
        velocity: number;
        acceleration: number;
      }
      export interface JointComponentToleranceConstructor {
        readonly X_AXIS: number;
        readonly Y_AXIS: number;
        readonly Z_AXIS: number;
        readonly TRANSLATION: number;
        readonly ROTATION: number;
        new(other?: JointComponentTolerance): JointComponentTolerance;
      }
      export interface JointControllerState {
        header: std_msgs.msg.Header;
        set_point: number;
        process_value: number;
        process_value_dot: number;
        error: number;
        time_step: number;
        command: number;
        p: number;
        i: number;
        d: number;
        i_clamp: number;
        antiwindup: boolean;
      }
      export interface JointControllerStateConstructor {
        new(other?: JointControllerState): JointControllerState;
      }
      export interface JointJog {
        header: std_msgs.msg.Header;
        joint_names: string[];
        displacements: number[] | Float64Array;
        velocities: number[] | Float64Array;
        duration: number;
      }
      export interface JointJogConstructor {
        new(other?: JointJog): JointJog;
      }
      export interface JointTolerance {
        name: string;
        position: number;
        velocity: number;
        acceleration: number;
      }
      export interface JointToleranceConstructor {
        new(other?: JointTolerance): JointTolerance;
      }
      export interface JointTrajectoryControllerState {
        header: std_msgs.msg.Header;
        joint_names: string[];
        reference: trajectory_msgs.msg.JointTrajectoryPoint;
        feedback: trajectory_msgs.msg.JointTrajectoryPoint;
        error: trajectory_msgs.msg.JointTrajectoryPoint;
        output: trajectory_msgs.msg.JointTrajectoryPoint;
        desired: trajectory_msgs.msg.JointTrajectoryPoint;
        actual: trajectory_msgs.msg.JointTrajectoryPoint;
        multi_dof_joint_names: string[];
        multi_dof_reference: trajectory_msgs.msg.MultiDOFJointTrajectoryPoint;
        multi_dof_feedback: trajectory_msgs.msg.MultiDOFJointTrajectoryPoint;
        multi_dof_error: trajectory_msgs.msg.MultiDOFJointTrajectoryPoint;
        multi_dof_output: trajectory_msgs.msg.MultiDOFJointTrajectoryPoint;
        multi_dof_desired: trajectory_msgs.msg.MultiDOFJointTrajectoryPoint;
        multi_dof_actual: trajectory_msgs.msg.MultiDOFJointTrajectoryPoint;
      }
      export interface JointTrajectoryControllerStateConstructor {
        new(other?: JointTrajectoryControllerState): JointTrajectoryControllerState;
      }
      export interface MecanumDriveControllerState {
        header: std_msgs.msg.Header;
        front_left_wheel_velocity: number;
        back_left_wheel_velocity: number;
        back_right_wheel_velocity: number;
        front_right_wheel_velocity: number;
        reference_velocity: geometry_msgs.msg.Twist;
      }
      export interface MecanumDriveControllerStateConstructor {
        new(other?: MecanumDriveControllerState): MecanumDriveControllerState;
      }
      export interface MultiDOFCommand {
        dof_names: string[];
        values: number[] | Float64Array;
        values_dot: number[] | Float64Array;
      }
      export interface MultiDOFCommandConstructor {
        new(other?: MultiDOFCommand): MultiDOFCommand;
      }
      export interface MultiDOFStateStamped {
        header: std_msgs.msg.Header;
        dof_states: control_msgs.msg.SingleDOFState[];
      }
      export interface MultiDOFStateStampedConstructor {
        new(other?: MultiDOFStateStamped): MultiDOFStateStamped;
      }
      export interface PidState {
        header: std_msgs.msg.Header;
        timestep: builtin_interfaces.msg.Duration;
        error: number;
        error_dot: number;
        p_error: number;
        i_error: number;
        d_error: number;
        p_term: number;
        i_term: number;
        d_term: number;
        i_max: number;
        i_min: number;
        output: number;
      }
      export interface PidStateConstructor {
        new(other?: PidState): PidState;
      }
      export interface SingleDOFState {
        name: string;
        reference: number;
        feedback: number;
        feedback_dot: number;
        error: number;
        error_dot: number;
        time_step: number;
        output: number;
      }
      export interface SingleDOFStateConstructor {
        new(other?: SingleDOFState): SingleDOFState;
      }
      export interface SingleDOFStateStamped {
        header: std_msgs.msg.Header;
        dof_state: control_msgs.msg.SingleDOFState;
      }
      export interface SingleDOFStateStampedConstructor {
        new(other?: SingleDOFStateStamped): SingleDOFStateStamped;
      }
      export interface SteeringControllerStatus {
        header: std_msgs.msg.Header;
        traction_wheels_position: number[] | Float64Array;
        traction_wheels_velocity: number[] | Float64Array;
        steer_positions: number[] | Float64Array;
        linear_velocity_command: number[] | Float64Array;
        steering_angle_command: number[] | Float64Array;
      }
      export interface SteeringControllerStatusConstructor {
        new(other?: SteeringControllerStatus): SteeringControllerStatus;
      }
    }
    namespace srv {
      export interface QueryCalibrationStateConstructor extends ROSService {
        readonly Request: QueryCalibrationState_RequestConstructor;
        readonly Response: QueryCalibrationState_ResponseConstructor;
      }
      export interface QueryCalibrationState_Request {
      }
      export interface QueryCalibrationState_RequestConstructor {
        new(other?: QueryCalibrationState_Request): QueryCalibrationState_Request;
      }
      export interface QueryCalibrationState_Response {
        is_calibrated: boolean;
      }
      export interface QueryCalibrationState_ResponseConstructor {
        new(other?: QueryCalibrationState_Response): QueryCalibrationState_Response;
      }
      export interface QueryTrajectoryStateConstructor extends ROSService {
        readonly Request: QueryTrajectoryState_RequestConstructor;
        readonly Response: QueryTrajectoryState_ResponseConstructor;
      }
      export interface QueryTrajectoryState_Request {
        time: builtin_interfaces.msg.Time;
      }
      export interface QueryTrajectoryState_RequestConstructor {
        new(other?: QueryTrajectoryState_Request): QueryTrajectoryState_Request;
      }
      export interface QueryTrajectoryState_Response {
        success: boolean;
        message: string;
        name: string[];
        position: number[] | Float64Array;
        velocity: number[] | Float64Array;
        acceleration: number[] | Float64Array;
      }
      export interface QueryTrajectoryState_ResponseConstructor {
        new(other?: QueryTrajectoryState_Response): QueryTrajectoryState_Response;
      }
    }
  }

  namespace controller_manager_msgs {
    namespace msg {
      export interface ChainConnection {
        name: string;
        reference_interfaces: string[];
      }
      export interface ChainConnectionConstructor {
        new(other?: ChainConnection): ChainConnection;
      }
      export interface ControllerState {
        name: string;
        state: string;
        type: string;
        claimed_interfaces: string[];
        required_command_interfaces: string[];
        required_state_interfaces: string[];
        is_chainable: boolean;
        is_chained: boolean;
        reference_interfaces: string[];
        chain_connections: controller_manager_msgs.msg.ChainConnection[];
      }
      export interface ControllerStateConstructor {
        new(other?: ControllerState): ControllerState;
      }
      export interface HardwareComponentState {
        name: string;
        type: string;
        class_type: string;
        state: lifecycle_msgs.msg.State;
        command_interfaces: controller_manager_msgs.msg.HardwareInterface[];
        state_interfaces: controller_manager_msgs.msg.HardwareInterface[];
      }
      export interface HardwareComponentStateConstructor {
        new(other?: HardwareComponentState): HardwareComponentState;
      }
      export interface HardwareInterface {
        name: string;
        is_available: boolean;
        is_claimed: boolean;
      }
      export interface HardwareInterfaceConstructor {
        new(other?: HardwareInterface): HardwareInterface;
      }
    }
    namespace srv {
      export interface ConfigureControllerConstructor extends ROSService {
        readonly Request: ConfigureController_RequestConstructor;
        readonly Response: ConfigureController_ResponseConstructor;
      }
      export interface ConfigureController_Request {
        name: string;
      }
      export interface ConfigureController_RequestConstructor {
        new(other?: ConfigureController_Request): ConfigureController_Request;
      }
      export interface ConfigureController_Response {
        ok: boolean;
      }
      export interface ConfigureController_ResponseConstructor {
        new(other?: ConfigureController_Response): ConfigureController_Response;
      }
      export interface ListControllerTypesConstructor extends ROSService {
        readonly Request: ListControllerTypes_RequestConstructor;
        readonly Response: ListControllerTypes_ResponseConstructor;
      }
      export interface ListControllerTypes_Request {
      }
      export interface ListControllerTypes_RequestConstructor {
        new(other?: ListControllerTypes_Request): ListControllerTypes_Request;
      }
      export interface ListControllerTypes_Response {
        types: string[];
        base_classes: string[];
      }
      export interface ListControllerTypes_ResponseConstructor {
        new(other?: ListControllerTypes_Response): ListControllerTypes_Response;
      }
      export interface ListControllersConstructor extends ROSService {
        readonly Request: ListControllers_RequestConstructor;
        readonly Response: ListControllers_ResponseConstructor;
      }
      export interface ListControllers_Request {
      }
      export interface ListControllers_RequestConstructor {
        new(other?: ListControllers_Request): ListControllers_Request;
      }
      export interface ListControllers_Response {
        controller: controller_manager_msgs.msg.ControllerState[];
      }
      export interface ListControllers_ResponseConstructor {
        new(other?: ListControllers_Response): ListControllers_Response;
      }
      export interface ListHardwareComponentsConstructor extends ROSService {
        readonly Request: ListHardwareComponents_RequestConstructor;
        readonly Response: ListHardwareComponents_ResponseConstructor;
      }
      export interface ListHardwareComponents_Request {
      }
      export interface ListHardwareComponents_RequestConstructor {
        new(other?: ListHardwareComponents_Request): ListHardwareComponents_Request;
      }
      export interface ListHardwareComponents_Response {
        component: controller_manager_msgs.msg.HardwareComponentState[];
      }
      export interface ListHardwareComponents_ResponseConstructor {
        new(other?: ListHardwareComponents_Response): ListHardwareComponents_Response;
      }
      export interface ListHardwareInterfacesConstructor extends ROSService {
        readonly Request: ListHardwareInterfaces_RequestConstructor;
        readonly Response: ListHardwareInterfaces_ResponseConstructor;
      }
      export interface ListHardwareInterfaces_Request {
      }
      export interface ListHardwareInterfaces_RequestConstructor {
        new(other?: ListHardwareInterfaces_Request): ListHardwareInterfaces_Request;
      }
      export interface ListHardwareInterfaces_Response {
        command_interfaces: controller_manager_msgs.msg.HardwareInterface[];
        state_interfaces: controller_manager_msgs.msg.HardwareInterface[];
      }
      export interface ListHardwareInterfaces_ResponseConstructor {
        new(other?: ListHardwareInterfaces_Response): ListHardwareInterfaces_Response;
      }
      export interface LoadControllerConstructor extends ROSService {
        readonly Request: LoadController_RequestConstructor;
        readonly Response: LoadController_ResponseConstructor;
      }
      export interface LoadController_Request {
        name: string;
      }
      export interface LoadController_RequestConstructor {
        new(other?: LoadController_Request): LoadController_Request;
      }
      export interface LoadController_Response {
        ok: boolean;
      }
      export interface LoadController_ResponseConstructor {
        new(other?: LoadController_Response): LoadController_Response;
      }
      export interface ReloadControllerLibrariesConstructor extends ROSService {
        readonly Request: ReloadControllerLibraries_RequestConstructor;
        readonly Response: ReloadControllerLibraries_ResponseConstructor;
      }
      export interface ReloadControllerLibraries_Request {
        force_kill: boolean;
      }
      export interface ReloadControllerLibraries_RequestConstructor {
        new(other?: ReloadControllerLibraries_Request): ReloadControllerLibraries_Request;
      }
      export interface ReloadControllerLibraries_Response {
        ok: boolean;
      }
      export interface ReloadControllerLibraries_ResponseConstructor {
        new(other?: ReloadControllerLibraries_Response): ReloadControllerLibraries_Response;
      }
      export interface SetHardwareComponentStateConstructor extends ROSService {
        readonly Request: SetHardwareComponentState_RequestConstructor;
        readonly Response: SetHardwareComponentState_ResponseConstructor;
      }
      export interface SetHardwareComponentState_Request {
        name: string;
        target_state: lifecycle_msgs.msg.State;
      }
      export interface SetHardwareComponentState_RequestConstructor {
        new(other?: SetHardwareComponentState_Request): SetHardwareComponentState_Request;
      }
      export interface SetHardwareComponentState_Response {
        ok: boolean;
        state: lifecycle_msgs.msg.State;
      }
      export interface SetHardwareComponentState_ResponseConstructor {
        new(other?: SetHardwareComponentState_Response): SetHardwareComponentState_Response;
      }
      export interface SwitchControllerConstructor extends ROSService {
        readonly Request: SwitchController_RequestConstructor;
        readonly Response: SwitchController_ResponseConstructor;
      }
      export interface SwitchController_Request {
        activate_controllers: string[];
        deactivate_controllers: string[];
        start_controllers: string[];
        stop_controllers: string[];
        strictness: number;
        start_asap: boolean;
        activate_asap: boolean;
        timeout: builtin_interfaces.msg.Duration;
      }
      export interface SwitchController_RequestConstructor {
        readonly BEST_EFFORT: number;
        readonly STRICT: number;
        new(other?: SwitchController_Request): SwitchController_Request;
      }
      export interface SwitchController_Response {
        ok: boolean;
      }
      export interface SwitchController_ResponseConstructor {
        new(other?: SwitchController_Response): SwitchController_Response;
      }
      export interface UnloadControllerConstructor extends ROSService {
        readonly Request: UnloadController_RequestConstructor;
        readonly Response: UnloadController_ResponseConstructor;
      }
      export interface UnloadController_Request {
        name: string;
      }
      export interface UnloadController_RequestConstructor {
        new(other?: UnloadController_Request): UnloadController_Request;
      }
      export interface UnloadController_Response {
        ok: boolean;
      }
      export interface UnloadController_ResponseConstructor {
        new(other?: UnloadController_Response): UnloadController_Response;
      }
    }
  }

  namespace diagnostic_msgs {
    namespace msg {
      export interface DiagnosticArray {
        header: std_msgs.msg.Header;
        status: diagnostic_msgs.msg.DiagnosticStatus[];
      }
      export interface DiagnosticArrayConstructor {
        new(other?: DiagnosticArray): DiagnosticArray;
      }
      export interface DiagnosticStatus {
        level: number;
        name: string;
        message: string;
        hardware_id: string;
        values: diagnostic_msgs.msg.KeyValue[];
      }
      export interface DiagnosticStatusConstructor {
        readonly OK: number;
        readonly WARN: number;
        readonly ERROR: number;
        readonly STALE: number;
        new(other?: DiagnosticStatus): DiagnosticStatus;
      }
      export interface KeyValue {
        key: string;
        value: string;
      }
      export interface KeyValueConstructor {
        new(other?: KeyValue): KeyValue;
      }
    }
    namespace srv {
      export interface AddDiagnosticsConstructor extends ROSService {
        readonly Request: AddDiagnostics_RequestConstructor;
        readonly Response: AddDiagnostics_ResponseConstructor;
      }
      export interface AddDiagnostics_Request {
        load_namespace: string;
      }
      export interface AddDiagnostics_RequestConstructor {
        new(other?: AddDiagnostics_Request): AddDiagnostics_Request;
      }
      export interface AddDiagnostics_Response {
        success: boolean;
        message: string;
      }
      export interface AddDiagnostics_ResponseConstructor {
        new(other?: AddDiagnostics_Response): AddDiagnostics_Response;
      }
      export interface SelfTestConstructor extends ROSService {
        readonly Request: SelfTest_RequestConstructor;
        readonly Response: SelfTest_ResponseConstructor;
      }
      export interface SelfTest_Request {
      }
      export interface SelfTest_RequestConstructor {
        new(other?: SelfTest_Request): SelfTest_Request;
      }
      export interface SelfTest_Response {
        id: string;
        passed: number;
        status: diagnostic_msgs.msg.DiagnosticStatus[];
      }
      export interface SelfTest_ResponseConstructor {
        new(other?: SelfTest_Response): SelfTest_Response;
      }
    }
  }

  namespace dwb_msgs {
    namespace msg {
      export interface CriticScore {
        name: string;
        raw_score: number;
        scale: number;
      }
      export interface CriticScoreConstructor {
        new(other?: CriticScore): CriticScore;
      }
      export interface LocalPlanEvaluation {
        header: std_msgs.msg.Header;
        twists: dwb_msgs.msg.TrajectoryScore[];
        best_index: number;
        worst_index: number;
      }
      export interface LocalPlanEvaluationConstructor {
        new(other?: LocalPlanEvaluation): LocalPlanEvaluation;
      }
      export interface Trajectory2D {
        velocity: nav_2d_msgs.msg.Twist2D;
        time_offsets: builtin_interfaces.msg.Duration[];
        poses: geometry_msgs.msg.Pose2D[];
      }
      export interface Trajectory2DConstructor {
        new(other?: Trajectory2D): Trajectory2D;
      }
      export interface TrajectoryScore {
        traj: dwb_msgs.msg.Trajectory2D;
        scores: dwb_msgs.msg.CriticScore[];
        total: number;
      }
      export interface TrajectoryScoreConstructor {
        new(other?: TrajectoryScore): TrajectoryScore;
      }
    }
    namespace srv {
      export interface DebugLocalPlanConstructor extends ROSService {
        readonly Request: DebugLocalPlan_RequestConstructor;
        readonly Response: DebugLocalPlan_ResponseConstructor;
      }
      export interface DebugLocalPlan_Request {
        pose: nav_2d_msgs.msg.Pose2DStamped;
        velocity: nav_2d_msgs.msg.Twist2D;
        global_plan: nav_2d_msgs.msg.Path2D;
      }
      export interface DebugLocalPlan_RequestConstructor {
        new(other?: DebugLocalPlan_Request): DebugLocalPlan_Request;
      }
      export interface DebugLocalPlan_Response {
        results: dwb_msgs.msg.LocalPlanEvaluation;
      }
      export interface DebugLocalPlan_ResponseConstructor {
        new(other?: DebugLocalPlan_Response): DebugLocalPlan_Response;
      }
      export interface GenerateTrajectoryConstructor extends ROSService {
        readonly Request: GenerateTrajectory_RequestConstructor;
        readonly Response: GenerateTrajectory_ResponseConstructor;
      }
      export interface GenerateTrajectory_Request {
        start_pose: geometry_msgs.msg.Pose2D;
        start_vel: nav_2d_msgs.msg.Twist2D;
        cmd_vel: nav_2d_msgs.msg.Twist2D;
      }
      export interface GenerateTrajectory_RequestConstructor {
        new(other?: GenerateTrajectory_Request): GenerateTrajectory_Request;
      }
      export interface GenerateTrajectory_Response {
        traj: dwb_msgs.msg.Trajectory2D;
      }
      export interface GenerateTrajectory_ResponseConstructor {
        new(other?: GenerateTrajectory_Response): GenerateTrajectory_Response;
      }
      export interface GenerateTwistsConstructor extends ROSService {
        readonly Request: GenerateTwists_RequestConstructor;
        readonly Response: GenerateTwists_ResponseConstructor;
      }
      export interface GenerateTwists_Request {
        current_vel: nav_2d_msgs.msg.Twist2D;
      }
      export interface GenerateTwists_RequestConstructor {
        new(other?: GenerateTwists_Request): GenerateTwists_Request;
      }
      export interface GenerateTwists_Response {
        twists: nav_2d_msgs.msg.Twist2D[];
      }
      export interface GenerateTwists_ResponseConstructor {
        new(other?: GenerateTwists_Response): GenerateTwists_Response;
      }
      export interface GetCriticScoreConstructor extends ROSService {
        readonly Request: GetCriticScore_RequestConstructor;
        readonly Response: GetCriticScore_ResponseConstructor;
      }
      export interface GetCriticScore_Request {
        pose: nav_2d_msgs.msg.Pose2DStamped;
        velocity: nav_2d_msgs.msg.Twist2D;
        global_plan: nav_2d_msgs.msg.Path2D;
        traj: dwb_msgs.msg.Trajectory2D;
        critic_name: string;
      }
      export interface GetCriticScore_RequestConstructor {
        new(other?: GetCriticScore_Request): GetCriticScore_Request;
      }
      export interface GetCriticScore_Response {
        score: dwb_msgs.msg.CriticScore;
      }
      export interface GetCriticScore_ResponseConstructor {
        new(other?: GetCriticScore_Response): GetCriticScore_Response;
      }
      export interface ScoreTrajectoryConstructor extends ROSService {
        readonly Request: ScoreTrajectory_RequestConstructor;
        readonly Response: ScoreTrajectory_ResponseConstructor;
      }
      export interface ScoreTrajectory_Request {
        pose: nav_2d_msgs.msg.Pose2DStamped;
        velocity: nav_2d_msgs.msg.Twist2D;
        global_plan: nav_2d_msgs.msg.Path2D;
        traj: dwb_msgs.msg.Trajectory2D;
      }
      export interface ScoreTrajectory_RequestConstructor {
        new(other?: ScoreTrajectory_Request): ScoreTrajectory_Request;
      }
      export interface ScoreTrajectory_Response {
        score: dwb_msgs.msg.TrajectoryScore;
      }
      export interface ScoreTrajectory_ResponseConstructor {
        new(other?: ScoreTrajectory_Response): ScoreTrajectory_Response;
      }
    }
  }

  namespace geometry_msgs {
    namespace msg {
      export interface Accel {
        linear: geometry_msgs.msg.Vector3;
        angular: geometry_msgs.msg.Vector3;
      }
      export interface AccelConstructor {
        new(other?: Accel): Accel;
      }
      export interface AccelStamped {
        header: std_msgs.msg.Header;
        accel: geometry_msgs.msg.Accel;
      }
      export interface AccelStampedConstructor {
        new(other?: AccelStamped): AccelStamped;
      }
      export interface AccelWithCovariance {
        accel: geometry_msgs.msg.Accel;
        covariance: number[] | Float64Array;
      }
      export interface AccelWithCovarianceConstructor {
        new(other?: AccelWithCovariance): AccelWithCovariance;
      }
      export interface AccelWithCovarianceStamped {
        header: std_msgs.msg.Header;
        accel: geometry_msgs.msg.AccelWithCovariance;
      }
      export interface AccelWithCovarianceStampedConstructor {
        new(other?: AccelWithCovarianceStamped): AccelWithCovarianceStamped;
      }
      export interface Inertia {
        m: number;
        com: geometry_msgs.msg.Vector3;
        ixx: number;
        ixy: number;
        ixz: number;
        iyy: number;
        iyz: number;
        izz: number;
      }
      export interface InertiaConstructor {
        new(other?: Inertia): Inertia;
      }
      export interface InertiaStamped {
        header: std_msgs.msg.Header;
        inertia: geometry_msgs.msg.Inertia;
      }
      export interface InertiaStampedConstructor {
        new(other?: InertiaStamped): InertiaStamped;
      }
      export interface Point {
        x: number;
        y: number;
        z: number;
      }
      export interface PointConstructor {
        new(other?: Point): Point;
      }
      export interface Point32 {
        x: number;
        y: number;
        z: number;
      }
      export interface Point32Constructor {
        new(other?: Point32): Point32;
      }
      export interface PointStamped {
        header: std_msgs.msg.Header;
        point: geometry_msgs.msg.Point;
      }
      export interface PointStampedConstructor {
        new(other?: PointStamped): PointStamped;
      }
      export interface Polygon {
        points: geometry_msgs.msg.Point32[];
      }
      export interface PolygonConstructor {
        new(other?: Polygon): Polygon;
      }
      export interface PolygonStamped {
        header: std_msgs.msg.Header;
        polygon: geometry_msgs.msg.Polygon;
      }
      export interface PolygonStampedConstructor {
        new(other?: PolygonStamped): PolygonStamped;
      }
      export interface Pose {
        position: geometry_msgs.msg.Point;
        orientation: geometry_msgs.msg.Quaternion;
      }
      export interface PoseConstructor {
        new(other?: Pose): Pose;
      }
      export interface Pose2D {
        x: number;
        y: number;
        theta: number;
      }
      export interface Pose2DConstructor {
        new(other?: Pose2D): Pose2D;
      }
      export interface PoseArray {
        header: std_msgs.msg.Header;
        poses: geometry_msgs.msg.Pose[];
      }
      export interface PoseArrayConstructor {
        new(other?: PoseArray): PoseArray;
      }
      export interface PoseStamped {
        header: std_msgs.msg.Header;
        pose: geometry_msgs.msg.Pose;
      }
      export interface PoseStampedConstructor {
        new(other?: PoseStamped): PoseStamped;
      }
      export interface PoseWithCovariance {
        pose: geometry_msgs.msg.Pose;
        covariance: number[] | Float64Array;
      }
      export interface PoseWithCovarianceConstructor {
        new(other?: PoseWithCovariance): PoseWithCovariance;
      }
      export interface PoseWithCovarianceStamped {
        header: std_msgs.msg.Header;
        pose: geometry_msgs.msg.PoseWithCovariance;
      }
      export interface PoseWithCovarianceStampedConstructor {
        new(other?: PoseWithCovarianceStamped): PoseWithCovarianceStamped;
      }
      export interface Quaternion {
        x: number;
        y: number;
        z: number;
        w: number;
      }
      export interface QuaternionConstructor {
        new(other?: Quaternion): Quaternion;
      }
      export interface QuaternionStamped {
        header: std_msgs.msg.Header;
        quaternion: geometry_msgs.msg.Quaternion;
      }
      export interface QuaternionStampedConstructor {
        new(other?: QuaternionStamped): QuaternionStamped;
      }
      export interface Transform {
        translation: geometry_msgs.msg.Vector3;
        rotation: geometry_msgs.msg.Quaternion;
      }
      export interface TransformConstructor {
        new(other?: Transform): Transform;
      }
      export interface TransformStamped {
        header: std_msgs.msg.Header;
        child_frame_id: string;
        transform: geometry_msgs.msg.Transform;
      }
      export interface TransformStampedConstructor {
        new(other?: TransformStamped): TransformStamped;
      }
      export interface Twist {
        linear: geometry_msgs.msg.Vector3;
        angular: geometry_msgs.msg.Vector3;
      }
      export interface TwistConstructor {
        new(other?: Twist): Twist;
      }
      export interface TwistStamped {
        header: std_msgs.msg.Header;
        twist: geometry_msgs.msg.Twist;
      }
      export interface TwistStampedConstructor {
        new(other?: TwistStamped): TwistStamped;
      }
      export interface TwistWithCovariance {
        twist: geometry_msgs.msg.Twist;
        covariance: number[] | Float64Array;
      }
      export interface TwistWithCovarianceConstructor {
        new(other?: TwistWithCovariance): TwistWithCovariance;
      }
      export interface TwistWithCovarianceStamped {
        header: std_msgs.msg.Header;
        twist: geometry_msgs.msg.TwistWithCovariance;
      }
      export interface TwistWithCovarianceStampedConstructor {
        new(other?: TwistWithCovarianceStamped): TwistWithCovarianceStamped;
      }
      export interface Vector3 {
        x: number;
        y: number;
        z: number;
      }
      export interface Vector3Constructor {
        new(other?: Vector3): Vector3;
      }
      export interface Vector3Stamped {
        header: std_msgs.msg.Header;
        vector: geometry_msgs.msg.Vector3;
      }
      export interface Vector3StampedConstructor {
        new(other?: Vector3Stamped): Vector3Stamped;
      }
      export interface VelocityStamped {
        header: std_msgs.msg.Header;
        body_frame_id: string;
        reference_frame_id: string;
        velocity: geometry_msgs.msg.Twist;
      }
      export interface VelocityStampedConstructor {
        new(other?: VelocityStamped): VelocityStamped;
      }
      export interface Wrench {
        force: geometry_msgs.msg.Vector3;
        torque: geometry_msgs.msg.Vector3;
      }
      export interface WrenchConstructor {
        new(other?: Wrench): Wrench;
      }
      export interface WrenchStamped {
        header: std_msgs.msg.Header;
        wrench: geometry_msgs.msg.Wrench;
      }
      export interface WrenchStampedConstructor {
        new(other?: WrenchStamped): WrenchStamped;
      }
    }
  }

  namespace gps_msgs {
    namespace msg {
      export interface GPSFix {
        header: std_msgs.msg.Header;
        status: gps_msgs.msg.GPSStatus;
        latitude: number;
        longitude: number;
        altitude: number;
        track: number;
        speed: number;
        climb: number;
        pitch: number;
        roll: number;
        dip: number;
        time: number;
        gdop: number;
        pdop: number;
        hdop: number;
        vdop: number;
        tdop: number;
        err: number;
        err_horz: number;
        err_vert: number;
        err_track: number;
        err_speed: number;
        err_climb: number;
        err_time: number;
        err_pitch: number;
        err_roll: number;
        err_dip: number;
        position_covariance: number[] | Float64Array;
        position_covariance_type: number;
      }
      export interface GPSFixConstructor {
        readonly COVARIANCE_TYPE_UNKNOWN: number;
        readonly COVARIANCE_TYPE_APPROXIMATED: number;
        readonly COVARIANCE_TYPE_DIAGONAL_KNOWN: number;
        readonly COVARIANCE_TYPE_KNOWN: number;
        new(other?: GPSFix): GPSFix;
      }
      export interface GPSStatus {
        header: std_msgs.msg.Header;
        satellites_used: number;
        satellite_used_prn: number[] | Int32Array;
        satellites_visible: number;
        satellite_visible_prn: number[] | Int32Array;
        satellite_visible_z: number[] | Int32Array;
        satellite_visible_azimuth: number[] | Int32Array;
        satellite_visible_snr: number[] | Int32Array;
        status: number;
        motion_source: number;
        orientation_source: number;
        position_source: number;
      }
      export interface GPSStatusConstructor {
        readonly STATUS_NO_FIX: number;
        readonly STATUS_FIX: number;
        readonly STATUS_SBAS_FIX: number;
        readonly STATUS_GBAS_FIX: number;
        readonly STATUS_DGPS_FIX: number;
        readonly STATUS_WAAS_FIX: number;
        readonly SOURCE_NONE: number;
        readonly SOURCE_GPS: number;
        readonly SOURCE_POINTS: number;
        readonly SOURCE_DOPPLER: number;
        readonly SOURCE_ALTIMETER: number;
        readonly SOURCE_MAGNETIC: number;
        readonly SOURCE_GYRO: number;
        readonly SOURCE_ACCEL: number;
        new(other?: GPSStatus): GPSStatus;
      }
    }
  }

  namespace graph_msgs {
    namespace msg {
      export interface Edges {
        node_ids: number[] | Uint32Array;
        weights: number[] | Float64Array;
      }
      export interface EdgesConstructor {
        new(other?: Edges): Edges;
      }
      export interface GeometryGraph {
        header: std_msgs.msg.Header;
        nodes: geometry_msgs.msg.Point[];
        edges: graph_msgs.msg.Edges[];
      }
      export interface GeometryGraphConstructor {
        new(other?: GeometryGraph): GeometryGraph;
      }
    }
  }

  namespace irobot_create_msgs {
    namespace action {
      export interface AudioNoteSequenceConstructor {
        readonly Goal: AudioNoteSequence_GoalConstructor;
        readonly Result: AudioNoteSequence_ResultConstructor;
        readonly Feedback: AudioNoteSequence_FeedbackConstructor;
      }
      export interface AudioNoteSequence_Feedback {
        iterations_played: number;
        current_runtime: builtin_interfaces.msg.Duration;
      }
      export interface AudioNoteSequence_FeedbackConstructor {
        new(other?: AudioNoteSequence_Feedback): AudioNoteSequence_Feedback;
      }
      export interface AudioNoteSequence_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: irobot_create_msgs.action.AudioNoteSequence_Feedback;
      }
      export interface AudioNoteSequence_FeedbackMessageConstructor {
        new(other?: AudioNoteSequence_FeedbackMessage): AudioNoteSequence_FeedbackMessage;
      }
      export interface AudioNoteSequence_GetResultConstructor extends ROSService {
        readonly Request: AudioNoteSequence_GetResult_RequestConstructor;
        readonly Response: AudioNoteSequence_GetResult_ResponseConstructor;
      }
      export interface AudioNoteSequence_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface AudioNoteSequence_GetResult_RequestConstructor {
        new(other?: AudioNoteSequence_GetResult_Request): AudioNoteSequence_GetResult_Request;
      }
      export interface AudioNoteSequence_GetResult_Response {
        status: number;
        result: irobot_create_msgs.action.AudioNoteSequence_Result;
      }
      export interface AudioNoteSequence_GetResult_ResponseConstructor {
        new(other?: AudioNoteSequence_GetResult_Response): AudioNoteSequence_GetResult_Response;
      }
      export interface AudioNoteSequence_Goal {
        iterations: number;
        note_sequence: irobot_create_msgs.msg.AudioNoteVector;
      }
      export interface AudioNoteSequence_GoalConstructor {
        readonly INFINITE: number;
        new(other?: AudioNoteSequence_Goal): AudioNoteSequence_Goal;
      }
      export interface AudioNoteSequence_Result {
        complete: boolean;
        iterations_played: number;
        runtime: builtin_interfaces.msg.Duration;
      }
      export interface AudioNoteSequence_ResultConstructor {
        new(other?: AudioNoteSequence_Result): AudioNoteSequence_Result;
      }
      export interface AudioNoteSequence_SendGoalConstructor extends ROSService {
        readonly Request: AudioNoteSequence_SendGoal_RequestConstructor;
        readonly Response: AudioNoteSequence_SendGoal_ResponseConstructor;
      }
      export interface AudioNoteSequence_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: irobot_create_msgs.action.AudioNoteSequence_Goal;
      }
      export interface AudioNoteSequence_SendGoal_RequestConstructor {
        new(other?: AudioNoteSequence_SendGoal_Request): AudioNoteSequence_SendGoal_Request;
      }
      export interface AudioNoteSequence_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface AudioNoteSequence_SendGoal_ResponseConstructor {
        new(other?: AudioNoteSequence_SendGoal_Response): AudioNoteSequence_SendGoal_Response;
      }
      export interface DockConstructor {
        readonly Goal: Dock_GoalConstructor;
        readonly Result: Dock_ResultConstructor;
        readonly Feedback: Dock_FeedbackConstructor;
      }
      export interface Dock_Feedback {
        sees_dock: boolean;
      }
      export interface Dock_FeedbackConstructor {
        new(other?: Dock_Feedback): Dock_Feedback;
      }
      export interface Dock_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: irobot_create_msgs.action.Dock_Feedback;
      }
      export interface Dock_FeedbackMessageConstructor {
        new(other?: Dock_FeedbackMessage): Dock_FeedbackMessage;
      }
      export interface Dock_GetResultConstructor extends ROSService {
        readonly Request: Dock_GetResult_RequestConstructor;
        readonly Response: Dock_GetResult_ResponseConstructor;
      }
      export interface Dock_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface Dock_GetResult_RequestConstructor {
        new(other?: Dock_GetResult_Request): Dock_GetResult_Request;
      }
      export interface Dock_GetResult_Response {
        status: number;
        result: irobot_create_msgs.action.Dock_Result;
      }
      export interface Dock_GetResult_ResponseConstructor {
        new(other?: Dock_GetResult_Response): Dock_GetResult_Response;
      }
      export interface Dock_Goal {
      }
      export interface Dock_GoalConstructor {
        new(other?: Dock_Goal): Dock_Goal;
      }
      export interface Dock_Result {
        is_docked: boolean;
      }
      export interface Dock_ResultConstructor {
        new(other?: Dock_Result): Dock_Result;
      }
      export interface Dock_SendGoalConstructor extends ROSService {
        readonly Request: Dock_SendGoal_RequestConstructor;
        readonly Response: Dock_SendGoal_ResponseConstructor;
      }
      export interface Dock_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: irobot_create_msgs.action.Dock_Goal;
      }
      export interface Dock_SendGoal_RequestConstructor {
        new(other?: Dock_SendGoal_Request): Dock_SendGoal_Request;
      }
      export interface Dock_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface Dock_SendGoal_ResponseConstructor {
        new(other?: Dock_SendGoal_Response): Dock_SendGoal_Response;
      }
      export interface DriveArcConstructor {
        readonly Goal: DriveArc_GoalConstructor;
        readonly Result: DriveArc_ResultConstructor;
        readonly Feedback: DriveArc_FeedbackConstructor;
      }
      export interface DriveArc_Feedback {
        remaining_angle_travel: number;
      }
      export interface DriveArc_FeedbackConstructor {
        new(other?: DriveArc_Feedback): DriveArc_Feedback;
      }
      export interface DriveArc_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: irobot_create_msgs.action.DriveArc_Feedback;
      }
      export interface DriveArc_FeedbackMessageConstructor {
        new(other?: DriveArc_FeedbackMessage): DriveArc_FeedbackMessage;
      }
      export interface DriveArc_GetResultConstructor extends ROSService {
        readonly Request: DriveArc_GetResult_RequestConstructor;
        readonly Response: DriveArc_GetResult_ResponseConstructor;
      }
      export interface DriveArc_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface DriveArc_GetResult_RequestConstructor {
        new(other?: DriveArc_GetResult_Request): DriveArc_GetResult_Request;
      }
      export interface DriveArc_GetResult_Response {
        status: number;
        result: irobot_create_msgs.action.DriveArc_Result;
      }
      export interface DriveArc_GetResult_ResponseConstructor {
        new(other?: DriveArc_GetResult_Response): DriveArc_GetResult_Response;
      }
      export interface DriveArc_Goal {
        translate_direction: number;
        angle: number;
        radius: number;
        max_translation_speed: number;
      }
      export interface DriveArc_GoalConstructor {
        readonly TRANSLATE_FORWARD: number;
        readonly TRANSLATE_BACKWARD: number;
        new(other?: DriveArc_Goal): DriveArc_Goal;
      }
      export interface DriveArc_Result {
        pose: geometry_msgs.msg.PoseStamped;
      }
      export interface DriveArc_ResultConstructor {
        new(other?: DriveArc_Result): DriveArc_Result;
      }
      export interface DriveArc_SendGoalConstructor extends ROSService {
        readonly Request: DriveArc_SendGoal_RequestConstructor;
        readonly Response: DriveArc_SendGoal_ResponseConstructor;
      }
      export interface DriveArc_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: irobot_create_msgs.action.DriveArc_Goal;
      }
      export interface DriveArc_SendGoal_RequestConstructor {
        new(other?: DriveArc_SendGoal_Request): DriveArc_SendGoal_Request;
      }
      export interface DriveArc_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface DriveArc_SendGoal_ResponseConstructor {
        new(other?: DriveArc_SendGoal_Response): DriveArc_SendGoal_Response;
      }
      export interface DriveDistanceConstructor {
        readonly Goal: DriveDistance_GoalConstructor;
        readonly Result: DriveDistance_ResultConstructor;
        readonly Feedback: DriveDistance_FeedbackConstructor;
      }
      export interface DriveDistance_Feedback {
        remaining_travel_distance: number;
      }
      export interface DriveDistance_FeedbackConstructor {
        new(other?: DriveDistance_Feedback): DriveDistance_Feedback;
      }
      export interface DriveDistance_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: irobot_create_msgs.action.DriveDistance_Feedback;
      }
      export interface DriveDistance_FeedbackMessageConstructor {
        new(other?: DriveDistance_FeedbackMessage): DriveDistance_FeedbackMessage;
      }
      export interface DriveDistance_GetResultConstructor extends ROSService {
        readonly Request: DriveDistance_GetResult_RequestConstructor;
        readonly Response: DriveDistance_GetResult_ResponseConstructor;
      }
      export interface DriveDistance_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface DriveDistance_GetResult_RequestConstructor {
        new(other?: DriveDistance_GetResult_Request): DriveDistance_GetResult_Request;
      }
      export interface DriveDistance_GetResult_Response {
        status: number;
        result: irobot_create_msgs.action.DriveDistance_Result;
      }
      export interface DriveDistance_GetResult_ResponseConstructor {
        new(other?: DriveDistance_GetResult_Response): DriveDistance_GetResult_Response;
      }
      export interface DriveDistance_Goal {
        distance: number;
        max_translation_speed: number;
      }
      export interface DriveDistance_GoalConstructor {
        new(other?: DriveDistance_Goal): DriveDistance_Goal;
      }
      export interface DriveDistance_Result {
        pose: geometry_msgs.msg.PoseStamped;
      }
      export interface DriveDistance_ResultConstructor {
        new(other?: DriveDistance_Result): DriveDistance_Result;
      }
      export interface DriveDistance_SendGoalConstructor extends ROSService {
        readonly Request: DriveDistance_SendGoal_RequestConstructor;
        readonly Response: DriveDistance_SendGoal_ResponseConstructor;
      }
      export interface DriveDistance_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: irobot_create_msgs.action.DriveDistance_Goal;
      }
      export interface DriveDistance_SendGoal_RequestConstructor {
        new(other?: DriveDistance_SendGoal_Request): DriveDistance_SendGoal_Request;
      }
      export interface DriveDistance_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface DriveDistance_SendGoal_ResponseConstructor {
        new(other?: DriveDistance_SendGoal_Response): DriveDistance_SendGoal_Response;
      }
      export interface LedAnimationConstructor {
        readonly Goal: LedAnimation_GoalConstructor;
        readonly Result: LedAnimation_ResultConstructor;
        readonly Feedback: LedAnimation_FeedbackConstructor;
      }
      export interface LedAnimation_Feedback {
        remaining_runtime: builtin_interfaces.msg.Duration;
      }
      export interface LedAnimation_FeedbackConstructor {
        new(other?: LedAnimation_Feedback): LedAnimation_Feedback;
      }
      export interface LedAnimation_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: irobot_create_msgs.action.LedAnimation_Feedback;
      }
      export interface LedAnimation_FeedbackMessageConstructor {
        new(other?: LedAnimation_FeedbackMessage): LedAnimation_FeedbackMessage;
      }
      export interface LedAnimation_GetResultConstructor extends ROSService {
        readonly Request: LedAnimation_GetResult_RequestConstructor;
        readonly Response: LedAnimation_GetResult_ResponseConstructor;
      }
      export interface LedAnimation_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface LedAnimation_GetResult_RequestConstructor {
        new(other?: LedAnimation_GetResult_Request): LedAnimation_GetResult_Request;
      }
      export interface LedAnimation_GetResult_Response {
        status: number;
        result: irobot_create_msgs.action.LedAnimation_Result;
      }
      export interface LedAnimation_GetResult_ResponseConstructor {
        new(other?: LedAnimation_GetResult_Response): LedAnimation_GetResult_Response;
      }
      export interface LedAnimation_Goal {
        animation_type: number;
        lightring: irobot_create_msgs.msg.LightringLeds;
        max_runtime: builtin_interfaces.msg.Duration;
      }
      export interface LedAnimation_GoalConstructor {
        readonly BLINK_LIGHTS: number;
        readonly SPIN_LIGHTS: number;
        new(other?: LedAnimation_Goal): LedAnimation_Goal;
      }
      export interface LedAnimation_Result {
        runtime: builtin_interfaces.msg.Duration;
      }
      export interface LedAnimation_ResultConstructor {
        new(other?: LedAnimation_Result): LedAnimation_Result;
      }
      export interface LedAnimation_SendGoalConstructor extends ROSService {
        readonly Request: LedAnimation_SendGoal_RequestConstructor;
        readonly Response: LedAnimation_SendGoal_ResponseConstructor;
      }
      export interface LedAnimation_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: irobot_create_msgs.action.LedAnimation_Goal;
      }
      export interface LedAnimation_SendGoal_RequestConstructor {
        new(other?: LedAnimation_SendGoal_Request): LedAnimation_SendGoal_Request;
      }
      export interface LedAnimation_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface LedAnimation_SendGoal_ResponseConstructor {
        new(other?: LedAnimation_SendGoal_Response): LedAnimation_SendGoal_Response;
      }
      export interface NavigateToPositionConstructor {
        readonly Goal: NavigateToPosition_GoalConstructor;
        readonly Result: NavigateToPosition_ResultConstructor;
        readonly Feedback: NavigateToPosition_FeedbackConstructor;
      }
      export interface NavigateToPosition_Feedback {
        navigate_state: number;
        remaining_angle_travel: number;
        remaining_travel_distance: number;
      }
      export interface NavigateToPosition_FeedbackConstructor {
        readonly ROTATING_TO_GOAL_POSITION: number;
        readonly DRIVING_TO_GOAL_POSITION: number;
        readonly ROTATING_TO_GOAL_ORIENTATION: number;
        new(other?: NavigateToPosition_Feedback): NavigateToPosition_Feedback;
      }
      export interface NavigateToPosition_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: irobot_create_msgs.action.NavigateToPosition_Feedback;
      }
      export interface NavigateToPosition_FeedbackMessageConstructor {
        new(other?: NavigateToPosition_FeedbackMessage): NavigateToPosition_FeedbackMessage;
      }
      export interface NavigateToPosition_GetResultConstructor extends ROSService {
        readonly Request: NavigateToPosition_GetResult_RequestConstructor;
        readonly Response: NavigateToPosition_GetResult_ResponseConstructor;
      }
      export interface NavigateToPosition_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface NavigateToPosition_GetResult_RequestConstructor {
        new(other?: NavigateToPosition_GetResult_Request): NavigateToPosition_GetResult_Request;
      }
      export interface NavigateToPosition_GetResult_Response {
        status: number;
        result: irobot_create_msgs.action.NavigateToPosition_Result;
      }
      export interface NavigateToPosition_GetResult_ResponseConstructor {
        new(other?: NavigateToPosition_GetResult_Response): NavigateToPosition_GetResult_Response;
      }
      export interface NavigateToPosition_Goal {
        goal_pose: geometry_msgs.msg.PoseStamped;
        achieve_goal_heading: boolean;
        max_translation_speed: number;
        max_rotation_speed: number;
      }
      export interface NavigateToPosition_GoalConstructor {
        new(other?: NavigateToPosition_Goal): NavigateToPosition_Goal;
      }
      export interface NavigateToPosition_Result {
        pose: geometry_msgs.msg.PoseStamped;
      }
      export interface NavigateToPosition_ResultConstructor {
        new(other?: NavigateToPosition_Result): NavigateToPosition_Result;
      }
      export interface NavigateToPosition_SendGoalConstructor extends ROSService {
        readonly Request: NavigateToPosition_SendGoal_RequestConstructor;
        readonly Response: NavigateToPosition_SendGoal_ResponseConstructor;
      }
      export interface NavigateToPosition_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: irobot_create_msgs.action.NavigateToPosition_Goal;
      }
      export interface NavigateToPosition_SendGoal_RequestConstructor {
        new(other?: NavigateToPosition_SendGoal_Request): NavigateToPosition_SendGoal_Request;
      }
      export interface NavigateToPosition_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface NavigateToPosition_SendGoal_ResponseConstructor {
        new(other?: NavigateToPosition_SendGoal_Response): NavigateToPosition_SendGoal_Response;
      }
      export interface RotateAngleConstructor {
        readonly Goal: RotateAngle_GoalConstructor;
        readonly Result: RotateAngle_ResultConstructor;
        readonly Feedback: RotateAngle_FeedbackConstructor;
      }
      export interface RotateAngle_Feedback {
        remaining_angle_travel: number;
      }
      export interface RotateAngle_FeedbackConstructor {
        new(other?: RotateAngle_Feedback): RotateAngle_Feedback;
      }
      export interface RotateAngle_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: irobot_create_msgs.action.RotateAngle_Feedback;
      }
      export interface RotateAngle_FeedbackMessageConstructor {
        new(other?: RotateAngle_FeedbackMessage): RotateAngle_FeedbackMessage;
      }
      export interface RotateAngle_GetResultConstructor extends ROSService {
        readonly Request: RotateAngle_GetResult_RequestConstructor;
        readonly Response: RotateAngle_GetResult_ResponseConstructor;
      }
      export interface RotateAngle_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface RotateAngle_GetResult_RequestConstructor {
        new(other?: RotateAngle_GetResult_Request): RotateAngle_GetResult_Request;
      }
      export interface RotateAngle_GetResult_Response {
        status: number;
        result: irobot_create_msgs.action.RotateAngle_Result;
      }
      export interface RotateAngle_GetResult_ResponseConstructor {
        new(other?: RotateAngle_GetResult_Response): RotateAngle_GetResult_Response;
      }
      export interface RotateAngle_Goal {
        angle: number;
        max_rotation_speed: number;
      }
      export interface RotateAngle_GoalConstructor {
        new(other?: RotateAngle_Goal): RotateAngle_Goal;
      }
      export interface RotateAngle_Result {
        pose: geometry_msgs.msg.PoseStamped;
      }
      export interface RotateAngle_ResultConstructor {
        new(other?: RotateAngle_Result): RotateAngle_Result;
      }
      export interface RotateAngle_SendGoalConstructor extends ROSService {
        readonly Request: RotateAngle_SendGoal_RequestConstructor;
        readonly Response: RotateAngle_SendGoal_ResponseConstructor;
      }
      export interface RotateAngle_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: irobot_create_msgs.action.RotateAngle_Goal;
      }
      export interface RotateAngle_SendGoal_RequestConstructor {
        new(other?: RotateAngle_SendGoal_Request): RotateAngle_SendGoal_Request;
      }
      export interface RotateAngle_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface RotateAngle_SendGoal_ResponseConstructor {
        new(other?: RotateAngle_SendGoal_Response): RotateAngle_SendGoal_Response;
      }
      export interface UndockConstructor {
        readonly Goal: Undock_GoalConstructor;
        readonly Result: Undock_ResultConstructor;
        readonly Feedback: Undock_FeedbackConstructor;
      }
      export interface Undock_Feedback {
      }
      export interface Undock_FeedbackConstructor {
        new(other?: Undock_Feedback): Undock_Feedback;
      }
      export interface Undock_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: irobot_create_msgs.action.Undock_Feedback;
      }
      export interface Undock_FeedbackMessageConstructor {
        new(other?: Undock_FeedbackMessage): Undock_FeedbackMessage;
      }
      export interface Undock_GetResultConstructor extends ROSService {
        readonly Request: Undock_GetResult_RequestConstructor;
        readonly Response: Undock_GetResult_ResponseConstructor;
      }
      export interface Undock_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface Undock_GetResult_RequestConstructor {
        new(other?: Undock_GetResult_Request): Undock_GetResult_Request;
      }
      export interface Undock_GetResult_Response {
        status: number;
        result: irobot_create_msgs.action.Undock_Result;
      }
      export interface Undock_GetResult_ResponseConstructor {
        new(other?: Undock_GetResult_Response): Undock_GetResult_Response;
      }
      export interface Undock_Goal {
      }
      export interface Undock_GoalConstructor {
        new(other?: Undock_Goal): Undock_Goal;
      }
      export interface Undock_Result {
        is_docked: boolean;
      }
      export interface Undock_ResultConstructor {
        new(other?: Undock_Result): Undock_Result;
      }
      export interface Undock_SendGoalConstructor extends ROSService {
        readonly Request: Undock_SendGoal_RequestConstructor;
        readonly Response: Undock_SendGoal_ResponseConstructor;
      }
      export interface Undock_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: irobot_create_msgs.action.Undock_Goal;
      }
      export interface Undock_SendGoal_RequestConstructor {
        new(other?: Undock_SendGoal_Request): Undock_SendGoal_Request;
      }
      export interface Undock_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface Undock_SendGoal_ResponseConstructor {
        new(other?: Undock_SendGoal_Response): Undock_SendGoal_Response;
      }
      export interface WallFollowConstructor {
        readonly Goal: WallFollow_GoalConstructor;
        readonly Result: WallFollow_ResultConstructor;
        readonly Feedback: WallFollow_FeedbackConstructor;
      }
      export interface WallFollow_Feedback {
        engaged: boolean;
      }
      export interface WallFollow_FeedbackConstructor {
        new(other?: WallFollow_Feedback): WallFollow_Feedback;
      }
      export interface WallFollow_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: irobot_create_msgs.action.WallFollow_Feedback;
      }
      export interface WallFollow_FeedbackMessageConstructor {
        new(other?: WallFollow_FeedbackMessage): WallFollow_FeedbackMessage;
      }
      export interface WallFollow_GetResultConstructor extends ROSService {
        readonly Request: WallFollow_GetResult_RequestConstructor;
        readonly Response: WallFollow_GetResult_ResponseConstructor;
      }
      export interface WallFollow_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface WallFollow_GetResult_RequestConstructor {
        new(other?: WallFollow_GetResult_Request): WallFollow_GetResult_Request;
      }
      export interface WallFollow_GetResult_Response {
        status: number;
        result: irobot_create_msgs.action.WallFollow_Result;
      }
      export interface WallFollow_GetResult_ResponseConstructor {
        new(other?: WallFollow_GetResult_Response): WallFollow_GetResult_Response;
      }
      export interface WallFollow_Goal {
        follow_side: number;
        max_runtime: builtin_interfaces.msg.Duration;
      }
      export interface WallFollow_GoalConstructor {
        readonly FOLLOW_RIGHT: number;
        readonly FOLLOW_LEFT: number;
        new(other?: WallFollow_Goal): WallFollow_Goal;
      }
      export interface WallFollow_Result {
        runtime: builtin_interfaces.msg.Duration;
      }
      export interface WallFollow_ResultConstructor {
        new(other?: WallFollow_Result): WallFollow_Result;
      }
      export interface WallFollow_SendGoalConstructor extends ROSService {
        readonly Request: WallFollow_SendGoal_RequestConstructor;
        readonly Response: WallFollow_SendGoal_ResponseConstructor;
      }
      export interface WallFollow_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: irobot_create_msgs.action.WallFollow_Goal;
      }
      export interface WallFollow_SendGoal_RequestConstructor {
        new(other?: WallFollow_SendGoal_Request): WallFollow_SendGoal_Request;
      }
      export interface WallFollow_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface WallFollow_SendGoal_ResponseConstructor {
        new(other?: WallFollow_SendGoal_Response): WallFollow_SendGoal_Response;
      }
    }
    namespace msg {
      export interface AudioNote {
        frequency: number;
        max_runtime: builtin_interfaces.msg.Duration;
      }
      export interface AudioNoteConstructor {
        new(other?: AudioNote): AudioNote;
      }
      export interface AudioNoteVector {
        header: std_msgs.msg.Header;
        notes: irobot_create_msgs.msg.AudioNote[];
        append: boolean;
      }
      export interface AudioNoteVectorConstructor {
        new(other?: AudioNoteVector): AudioNoteVector;
      }
      export interface Button {
        header: std_msgs.msg.Header;
        is_pressed: boolean;
        last_start_pressed_time: builtin_interfaces.msg.Time;
        last_pressed_duration: builtin_interfaces.msg.Duration;
      }
      export interface ButtonConstructor {
        new(other?: Button): Button;
      }
      export interface DockStatus {
        header: std_msgs.msg.Header;
        dock_visible: boolean;
        is_docked: boolean;
      }
      export interface DockStatusConstructor {
        new(other?: DockStatus): DockStatus;
      }
      export interface HazardDetection {
        header: std_msgs.msg.Header;
        type: number;
      }
      export interface HazardDetectionConstructor {
        readonly BACKUP_LIMIT: number;
        readonly BUMP: number;
        readonly CLIFF: number;
        readonly STALL: number;
        readonly WHEEL_DROP: number;
        readonly OBJECT_PROXIMITY: number;
        new(other?: HazardDetection): HazardDetection;
      }
      export interface HazardDetectionVector {
        header: std_msgs.msg.Header;
        detections: irobot_create_msgs.msg.HazardDetection[];
      }
      export interface HazardDetectionVectorConstructor {
        new(other?: HazardDetectionVector): HazardDetectionVector;
      }
      export interface InterfaceButtons {
        header: std_msgs.msg.Header;
        button_1: irobot_create_msgs.msg.Button;
        button_power: irobot_create_msgs.msg.Button;
        button_2: irobot_create_msgs.msg.Button;
      }
      export interface InterfaceButtonsConstructor {
        new(other?: InterfaceButtons): InterfaceButtons;
      }
      export interface IrIntensity {
        header: std_msgs.msg.Header;
        value: number;
      }
      export interface IrIntensityConstructor {
        new(other?: IrIntensity): IrIntensity;
      }
      export interface IrIntensityVector {
        header: std_msgs.msg.Header;
        readings: irobot_create_msgs.msg.IrIntensity[];
      }
      export interface IrIntensityVectorConstructor {
        new(other?: IrIntensityVector): IrIntensityVector;
      }
      export interface IrOpcode {
        header: std_msgs.msg.Header;
        opcode: number;
        sensor: number;
      }
      export interface IrOpcodeConstructor {
        readonly CODE_IR_FORCE_FIELD: number;
        readonly CODE_IR_VIRTUAL_WALL: number;
        readonly CODE_IR_BUOY_GREEN: number;
        readonly CODE_IR_BUOY_RED: number;
        readonly CODE_IR_BUOY_BOTH: number;
        readonly CODE_IR_EVAC_GREEN_FIELD: number;
        readonly CODE_IR_EVAC_RED_FIELD: number;
        readonly CODE_IR_EVAC_BOTH_FIELD: number;
        readonly SENSOR_OMNI: number;
        readonly SENSOR_DIRECTIONAL_FRONT: number;
        new(other?: IrOpcode): IrOpcode;
      }
      export interface KidnapStatus {
        header: std_msgs.msg.Header;
        is_kidnapped: boolean;
      }
      export interface KidnapStatusConstructor {
        new(other?: KidnapStatus): KidnapStatus;
      }
      export interface LedColor {
        red: number;
        green: number;
        blue: number;
      }
      export interface LedColorConstructor {
        new(other?: LedColor): LedColor;
      }
      export interface LightringLeds {
        header: std_msgs.msg.Header;
        leds: irobot_create_msgs.msg.LedColor[];
        override_system: boolean;
      }
      export interface LightringLedsConstructor {
        new(other?: LightringLeds): LightringLeds;
      }
      export interface Mouse {
        header: std_msgs.msg.Header;
        integrated_x: number;
        integrated_y: number;
        frame_id: number;
        last_squal: number;
      }
      export interface MouseConstructor {
        new(other?: Mouse): Mouse;
      }
      export interface SlipStatus {
        header: std_msgs.msg.Header;
        is_slipping: boolean;
      }
      export interface SlipStatusConstructor {
        new(other?: SlipStatus): SlipStatus;
      }
      export interface StopStatus {
        header: std_msgs.msg.Header;
        is_stopped: boolean;
      }
      export interface StopStatusConstructor {
        new(other?: StopStatus): StopStatus;
      }
      export interface WheelStatus {
        header: std_msgs.msg.Header;
        current_ma_left: number;
        current_ma_right: number;
        pwm_left: number;
        pwm_right: number;
        wheels_enabled: boolean;
      }
      export interface WheelStatusConstructor {
        new(other?: WheelStatus): WheelStatus;
      }
      export interface WheelTicks {
        header: std_msgs.msg.Header;
        ticks_left: number;
        ticks_right: number;
      }
      export interface WheelTicksConstructor {
        new(other?: WheelTicks): WheelTicks;
      }
      export interface WheelVels {
        header: std_msgs.msg.Header;
        velocity_left: number;
        velocity_right: number;
      }
      export interface WheelVelsConstructor {
        new(other?: WheelVels): WheelVels;
      }
    }
    namespace srv {
      export interface EStopConstructor extends ROSService {
        readonly Request: EStop_RequestConstructor;
        readonly Response: EStop_ResponseConstructor;
      }
      export interface EStop_Request {
        e_stop_on: boolean;
      }
      export interface EStop_RequestConstructor {
        new(other?: EStop_Request): EStop_Request;
      }
      export interface EStop_Response {
        success: boolean;
        message: string;
      }
      export interface EStop_ResponseConstructor {
        new(other?: EStop_Response): EStop_Response;
      }
      export interface ResetPoseConstructor extends ROSService {
        readonly Request: ResetPose_RequestConstructor;
        readonly Response: ResetPose_ResponseConstructor;
      }
      export interface ResetPose_Request {
        pose: geometry_msgs.msg.Pose;
      }
      export interface ResetPose_RequestConstructor {
        new(other?: ResetPose_Request): ResetPose_Request;
      }
      export interface ResetPose_Response {
      }
      export interface ResetPose_ResponseConstructor {
        new(other?: ResetPose_Response): ResetPose_Response;
      }
      export interface RobotPowerConstructor extends ROSService {
        readonly Request: RobotPower_RequestConstructor;
        readonly Response: RobotPower_ResponseConstructor;
      }
      export interface RobotPower_Request {
      }
      export interface RobotPower_RequestConstructor {
        new(other?: RobotPower_Request): RobotPower_Request;
      }
      export interface RobotPower_Response {
        success: boolean;
        message: string;
      }
      export interface RobotPower_ResponseConstructor {
        new(other?: RobotPower_Response): RobotPower_Response;
      }
    }
  }

  namespace lifecycle_msgs {
    namespace msg {
      export interface State {
        id: number;
        label: string;
      }
      export interface StateConstructor {
        readonly PRIMARY_STATE_UNKNOWN: number;
        readonly PRIMARY_STATE_UNCONFIGURED: number;
        readonly PRIMARY_STATE_INACTIVE: number;
        readonly PRIMARY_STATE_ACTIVE: number;
        readonly PRIMARY_STATE_FINALIZED: number;
        readonly TRANSITION_STATE_CONFIGURING: number;
        readonly TRANSITION_STATE_CLEANINGUP: number;
        readonly TRANSITION_STATE_SHUTTINGDOWN: number;
        readonly TRANSITION_STATE_ACTIVATING: number;
        readonly TRANSITION_STATE_DEACTIVATING: number;
        readonly TRANSITION_STATE_ERRORPROCESSING: number;
        new(other?: State): State;
      }
      export interface Transition {
        id: number;
        label: string;
      }
      export interface TransitionConstructor {
        readonly TRANSITION_CREATE: number;
        readonly TRANSITION_CONFIGURE: number;
        readonly TRANSITION_CLEANUP: number;
        readonly TRANSITION_ACTIVATE: number;
        readonly TRANSITION_DEACTIVATE: number;
        readonly TRANSITION_UNCONFIGURED_SHUTDOWN: number;
        readonly TRANSITION_INACTIVE_SHUTDOWN: number;
        readonly TRANSITION_ACTIVE_SHUTDOWN: number;
        readonly TRANSITION_DESTROY: number;
        readonly TRANSITION_ON_CONFIGURE_SUCCESS: number;
        readonly TRANSITION_ON_CONFIGURE_FAILURE: number;
        readonly TRANSITION_ON_CONFIGURE_ERROR: number;
        readonly TRANSITION_ON_CLEANUP_SUCCESS: number;
        readonly TRANSITION_ON_CLEANUP_FAILURE: number;
        readonly TRANSITION_ON_CLEANUP_ERROR: number;
        readonly TRANSITION_ON_ACTIVATE_SUCCESS: number;
        readonly TRANSITION_ON_ACTIVATE_FAILURE: number;
        readonly TRANSITION_ON_ACTIVATE_ERROR: number;
        readonly TRANSITION_ON_DEACTIVATE_SUCCESS: number;
        readonly TRANSITION_ON_DEACTIVATE_FAILURE: number;
        readonly TRANSITION_ON_DEACTIVATE_ERROR: number;
        readonly TRANSITION_ON_SHUTDOWN_SUCCESS: number;
        readonly TRANSITION_ON_SHUTDOWN_FAILURE: number;
        readonly TRANSITION_ON_SHUTDOWN_ERROR: number;
        readonly TRANSITION_ON_ERROR_SUCCESS: number;
        readonly TRANSITION_ON_ERROR_FAILURE: number;
        readonly TRANSITION_ON_ERROR_ERROR: number;
        readonly TRANSITION_CALLBACK_SUCCESS: number;
        readonly TRANSITION_CALLBACK_FAILURE: number;
        readonly TRANSITION_CALLBACK_ERROR: number;
        new(other?: Transition): Transition;
      }
      export interface TransitionDescription {
        transition: lifecycle_msgs.msg.Transition;
        start_state: lifecycle_msgs.msg.State;
        goal_state: lifecycle_msgs.msg.State;
      }
      export interface TransitionDescriptionConstructor {
        new(other?: TransitionDescription): TransitionDescription;
      }
      export interface TransitionEvent {
        timestamp: number;
        transition: lifecycle_msgs.msg.Transition;
        start_state: lifecycle_msgs.msg.State;
        goal_state: lifecycle_msgs.msg.State;
      }
      export interface TransitionEventConstructor {
        new(other?: TransitionEvent): TransitionEvent;
      }
    }
    namespace srv {
      export interface ChangeStateConstructor extends ROSService {
        readonly Request: ChangeState_RequestConstructor;
        readonly Response: ChangeState_ResponseConstructor;
      }
      export interface ChangeState_Request {
        transition: lifecycle_msgs.msg.Transition;
      }
      export interface ChangeState_RequestConstructor {
        new(other?: ChangeState_Request): ChangeState_Request;
      }
      export interface ChangeState_Response {
        success: boolean;
      }
      export interface ChangeState_ResponseConstructor {
        new(other?: ChangeState_Response): ChangeState_Response;
      }
      export interface GetAvailableStatesConstructor extends ROSService {
        readonly Request: GetAvailableStates_RequestConstructor;
        readonly Response: GetAvailableStates_ResponseConstructor;
      }
      export interface GetAvailableStates_Request {
      }
      export interface GetAvailableStates_RequestConstructor {
        new(other?: GetAvailableStates_Request): GetAvailableStates_Request;
      }
      export interface GetAvailableStates_Response {
        available_states: lifecycle_msgs.msg.State[];
      }
      export interface GetAvailableStates_ResponseConstructor {
        new(other?: GetAvailableStates_Response): GetAvailableStates_Response;
      }
      export interface GetAvailableTransitionsConstructor extends ROSService {
        readonly Request: GetAvailableTransitions_RequestConstructor;
        readonly Response: GetAvailableTransitions_ResponseConstructor;
      }
      export interface GetAvailableTransitions_Request {
      }
      export interface GetAvailableTransitions_RequestConstructor {
        new(other?: GetAvailableTransitions_Request): GetAvailableTransitions_Request;
      }
      export interface GetAvailableTransitions_Response {
        available_transitions: lifecycle_msgs.msg.TransitionDescription[];
      }
      export interface GetAvailableTransitions_ResponseConstructor {
        new(other?: GetAvailableTransitions_Response): GetAvailableTransitions_Response;
      }
      export interface GetStateConstructor extends ROSService {
        readonly Request: GetState_RequestConstructor;
        readonly Response: GetState_ResponseConstructor;
      }
      export interface GetState_Request {
      }
      export interface GetState_RequestConstructor {
        new(other?: GetState_Request): GetState_Request;
      }
      export interface GetState_Response {
        current_state: lifecycle_msgs.msg.State;
      }
      export interface GetState_ResponseConstructor {
        new(other?: GetState_Response): GetState_Response;
      }
    }
  }

  namespace map_msgs {
    namespace msg {
      export interface OccupancyGridUpdate {
        header: std_msgs.msg.Header;
        x: number;
        y: number;
        width: number;
        height: number;
        data: number[] | Int8Array;
      }
      export interface OccupancyGridUpdateConstructor {
        new(other?: OccupancyGridUpdate): OccupancyGridUpdate;
      }
      export interface PointCloud2Update {
        header: std_msgs.msg.Header;
        type: number;
        points: sensor_msgs.msg.PointCloud2;
      }
      export interface PointCloud2UpdateConstructor {
        readonly ADD: number;
        readonly DELETE: number;
        new(other?: PointCloud2Update): PointCloud2Update;
      }
      export interface ProjectedMap {
        map: nav_msgs.msg.OccupancyGrid;
        min_z: number;
        max_z: number;
      }
      export interface ProjectedMapConstructor {
        new(other?: ProjectedMap): ProjectedMap;
      }
      export interface ProjectedMapInfo {
        frame_id: string;
        x: number;
        y: number;
        width: number;
        height: number;
        min_z: number;
        max_z: number;
      }
      export interface ProjectedMapInfoConstructor {
        new(other?: ProjectedMapInfo): ProjectedMapInfo;
      }
    }
    namespace srv {
      export interface GetMapROIConstructor extends ROSService {
        readonly Request: GetMapROI_RequestConstructor;
        readonly Response: GetMapROI_ResponseConstructor;
      }
      export interface GetMapROI_Request {
        x: number;
        y: number;
        l_x: number;
        l_y: number;
      }
      export interface GetMapROI_RequestConstructor {
        new(other?: GetMapROI_Request): GetMapROI_Request;
      }
      export interface GetMapROI_Response {
        sub_map: nav_msgs.msg.OccupancyGrid;
      }
      export interface GetMapROI_ResponseConstructor {
        new(other?: GetMapROI_Response): GetMapROI_Response;
      }
      export interface GetPointMapConstructor extends ROSService {
        readonly Request: GetPointMap_RequestConstructor;
        readonly Response: GetPointMap_ResponseConstructor;
      }
      export interface GetPointMapROIConstructor extends ROSService {
        readonly Request: GetPointMapROI_RequestConstructor;
        readonly Response: GetPointMapROI_ResponseConstructor;
      }
      export interface GetPointMapROI_Request {
        x: number;
        y: number;
        z: number;
        r: number;
        l_x: number;
        l_y: number;
        l_z: number;
      }
      export interface GetPointMapROI_RequestConstructor {
        new(other?: GetPointMapROI_Request): GetPointMapROI_Request;
      }
      export interface GetPointMapROI_Response {
        sub_map: sensor_msgs.msg.PointCloud2;
      }
      export interface GetPointMapROI_ResponseConstructor {
        new(other?: GetPointMapROI_Response): GetPointMapROI_Response;
      }
      export interface GetPointMap_Request {
      }
      export interface GetPointMap_RequestConstructor {
        new(other?: GetPointMap_Request): GetPointMap_Request;
      }
      export interface GetPointMap_Response {
        map: sensor_msgs.msg.PointCloud2;
      }
      export interface GetPointMap_ResponseConstructor {
        new(other?: GetPointMap_Response): GetPointMap_Response;
      }
      export interface ProjectedMapsInfoConstructor extends ROSService {
        readonly Request: ProjectedMapsInfo_RequestConstructor;
        readonly Response: ProjectedMapsInfo_ResponseConstructor;
      }
      export interface ProjectedMapsInfo_Request {
        projected_maps_info: map_msgs.msg.ProjectedMapInfo[];
      }
      export interface ProjectedMapsInfo_RequestConstructor {
        new(other?: ProjectedMapsInfo_Request): ProjectedMapsInfo_Request;
      }
      export interface ProjectedMapsInfo_Response {
      }
      export interface ProjectedMapsInfo_ResponseConstructor {
        new(other?: ProjectedMapsInfo_Response): ProjectedMapsInfo_Response;
      }
      export interface SaveMapConstructor extends ROSService {
        readonly Request: SaveMap_RequestConstructor;
        readonly Response: SaveMap_ResponseConstructor;
      }
      export interface SaveMap_Request {
        filename: std_msgs.msg.String;
      }
      export interface SaveMap_RequestConstructor {
        new(other?: SaveMap_Request): SaveMap_Request;
      }
      export interface SaveMap_Response {
      }
      export interface SaveMap_ResponseConstructor {
        new(other?: SaveMap_Response): SaveMap_Response;
      }
      export interface SetMapProjectionsConstructor extends ROSService {
        readonly Request: SetMapProjections_RequestConstructor;
        readonly Response: SetMapProjections_ResponseConstructor;
      }
      export interface SetMapProjections_Request {
      }
      export interface SetMapProjections_RequestConstructor {
        new(other?: SetMapProjections_Request): SetMapProjections_Request;
      }
      export interface SetMapProjections_Response {
        projected_maps_info: map_msgs.msg.ProjectedMapInfo[];
      }
      export interface SetMapProjections_ResponseConstructor {
        new(other?: SetMapProjections_Response): SetMapProjections_Response;
      }
    }
  }

  namespace mocap4r2_control_msgs {
    namespace msg {
      export interface Control {
        control_type: number;
        stamp: builtin_interfaces.msg.Time;
        mocap4r2_source: string;
        session_id: string;
        mocap4r2_systems: string[];
      }
      export interface ControlConstructor {
        readonly START: number;
        readonly ACK_START: number;
        readonly STOP: number;
        readonly ACK_STOP: number;
        new(other?: Control): Control;
      }
      export interface MocapInfo {
        mocap4r2_source: string;
        ros_version_source: number;
        topics: string[];
      }
      export interface MocapInfoConstructor {
        readonly ROS2: number;
        readonly ROS1: number;
        new(other?: MocapInfo): MocapInfo;
      }
    }
  }

  namespace moveit_msgs {
    namespace action {
      export interface ExecuteTrajectoryConstructor {
        readonly Goal: ExecuteTrajectory_GoalConstructor;
        readonly Result: ExecuteTrajectory_ResultConstructor;
        readonly Feedback: ExecuteTrajectory_FeedbackConstructor;
      }
      export interface ExecuteTrajectory_Feedback {
        state: string;
      }
      export interface ExecuteTrajectory_FeedbackConstructor {
        new(other?: ExecuteTrajectory_Feedback): ExecuteTrajectory_Feedback;
      }
      export interface ExecuteTrajectory_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: moveit_msgs.action.ExecuteTrajectory_Feedback;
      }
      export interface ExecuteTrajectory_FeedbackMessageConstructor {
        new(other?: ExecuteTrajectory_FeedbackMessage): ExecuteTrajectory_FeedbackMessage;
      }
      export interface ExecuteTrajectory_GetResultConstructor extends ROSService {
        readonly Request: ExecuteTrajectory_GetResult_RequestConstructor;
        readonly Response: ExecuteTrajectory_GetResult_ResponseConstructor;
      }
      export interface ExecuteTrajectory_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface ExecuteTrajectory_GetResult_RequestConstructor {
        new(other?: ExecuteTrajectory_GetResult_Request): ExecuteTrajectory_GetResult_Request;
      }
      export interface ExecuteTrajectory_GetResult_Response {
        status: number;
        result: moveit_msgs.action.ExecuteTrajectory_Result;
      }
      export interface ExecuteTrajectory_GetResult_ResponseConstructor {
        new(other?: ExecuteTrajectory_GetResult_Response): ExecuteTrajectory_GetResult_Response;
      }
      export interface ExecuteTrajectory_Goal {
        trajectory: moveit_msgs.msg.RobotTrajectory;
      }
      export interface ExecuteTrajectory_GoalConstructor {
        new(other?: ExecuteTrajectory_Goal): ExecuteTrajectory_Goal;
      }
      export interface ExecuteTrajectory_Result {
        error_code: moveit_msgs.msg.MoveItErrorCodes;
      }
      export interface ExecuteTrajectory_ResultConstructor {
        new(other?: ExecuteTrajectory_Result): ExecuteTrajectory_Result;
      }
      export interface ExecuteTrajectory_SendGoalConstructor extends ROSService {
        readonly Request: ExecuteTrajectory_SendGoal_RequestConstructor;
        readonly Response: ExecuteTrajectory_SendGoal_ResponseConstructor;
      }
      export interface ExecuteTrajectory_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: moveit_msgs.action.ExecuteTrajectory_Goal;
      }
      export interface ExecuteTrajectory_SendGoal_RequestConstructor {
        new(other?: ExecuteTrajectory_SendGoal_Request): ExecuteTrajectory_SendGoal_Request;
      }
      export interface ExecuteTrajectory_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface ExecuteTrajectory_SendGoal_ResponseConstructor {
        new(other?: ExecuteTrajectory_SendGoal_Response): ExecuteTrajectory_SendGoal_Response;
      }
      export interface GlobalPlannerConstructor {
        readonly Goal: GlobalPlanner_GoalConstructor;
        readonly Result: GlobalPlanner_ResultConstructor;
        readonly Feedback: GlobalPlanner_FeedbackConstructor;
      }
      export interface GlobalPlanner_Feedback {
        feedback: string;
      }
      export interface GlobalPlanner_FeedbackConstructor {
        new(other?: GlobalPlanner_Feedback): GlobalPlanner_Feedback;
      }
      export interface GlobalPlanner_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: moveit_msgs.action.GlobalPlanner_Feedback;
      }
      export interface GlobalPlanner_FeedbackMessageConstructor {
        new(other?: GlobalPlanner_FeedbackMessage): GlobalPlanner_FeedbackMessage;
      }
      export interface GlobalPlanner_GetResultConstructor extends ROSService {
        readonly Request: GlobalPlanner_GetResult_RequestConstructor;
        readonly Response: GlobalPlanner_GetResult_ResponseConstructor;
      }
      export interface GlobalPlanner_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface GlobalPlanner_GetResult_RequestConstructor {
        new(other?: GlobalPlanner_GetResult_Request): GlobalPlanner_GetResult_Request;
      }
      export interface GlobalPlanner_GetResult_Response {
        status: number;
        result: moveit_msgs.action.GlobalPlanner_Result;
      }
      export interface GlobalPlanner_GetResult_ResponseConstructor {
        new(other?: GlobalPlanner_GetResult_Response): GlobalPlanner_GetResult_Response;
      }
      export interface GlobalPlanner_Goal {
        planning_group: string;
        motion_sequence: moveit_msgs.msg.MotionSequenceRequest;
      }
      export interface GlobalPlanner_GoalConstructor {
        new(other?: GlobalPlanner_Goal): GlobalPlanner_Goal;
      }
      export interface GlobalPlanner_Result {
        response: moveit_msgs.msg.MotionPlanResponse;
      }
      export interface GlobalPlanner_ResultConstructor {
        new(other?: GlobalPlanner_Result): GlobalPlanner_Result;
      }
      export interface GlobalPlanner_SendGoalConstructor extends ROSService {
        readonly Request: GlobalPlanner_SendGoal_RequestConstructor;
        readonly Response: GlobalPlanner_SendGoal_ResponseConstructor;
      }
      export interface GlobalPlanner_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: moveit_msgs.action.GlobalPlanner_Goal;
      }
      export interface GlobalPlanner_SendGoal_RequestConstructor {
        new(other?: GlobalPlanner_SendGoal_Request): GlobalPlanner_SendGoal_Request;
      }
      export interface GlobalPlanner_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface GlobalPlanner_SendGoal_ResponseConstructor {
        new(other?: GlobalPlanner_SendGoal_Response): GlobalPlanner_SendGoal_Response;
      }
      export interface HybridPlannerConstructor {
        readonly Goal: HybridPlanner_GoalConstructor;
        readonly Result: HybridPlanner_ResultConstructor;
        readonly Feedback: HybridPlanner_FeedbackConstructor;
      }
      export interface HybridPlanner_Feedback {
        feedback: string;
      }
      export interface HybridPlanner_FeedbackConstructor {
        new(other?: HybridPlanner_Feedback): HybridPlanner_Feedback;
      }
      export interface HybridPlanner_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: moveit_msgs.action.HybridPlanner_Feedback;
      }
      export interface HybridPlanner_FeedbackMessageConstructor {
        new(other?: HybridPlanner_FeedbackMessage): HybridPlanner_FeedbackMessage;
      }
      export interface HybridPlanner_GetResultConstructor extends ROSService {
        readonly Request: HybridPlanner_GetResult_RequestConstructor;
        readonly Response: HybridPlanner_GetResult_ResponseConstructor;
      }
      export interface HybridPlanner_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface HybridPlanner_GetResult_RequestConstructor {
        new(other?: HybridPlanner_GetResult_Request): HybridPlanner_GetResult_Request;
      }
      export interface HybridPlanner_GetResult_Response {
        status: number;
        result: moveit_msgs.action.HybridPlanner_Result;
      }
      export interface HybridPlanner_GetResult_ResponseConstructor {
        new(other?: HybridPlanner_GetResult_Response): HybridPlanner_GetResult_Response;
      }
      export interface HybridPlanner_Goal {
        planning_group: string;
        motion_sequence: moveit_msgs.msg.MotionSequenceRequest;
      }
      export interface HybridPlanner_GoalConstructor {
        new(other?: HybridPlanner_Goal): HybridPlanner_Goal;
      }
      export interface HybridPlanner_Result {
        error_code: moveit_msgs.msg.MoveItErrorCodes;
        error_message: string;
      }
      export interface HybridPlanner_ResultConstructor {
        new(other?: HybridPlanner_Result): HybridPlanner_Result;
      }
      export interface HybridPlanner_SendGoalConstructor extends ROSService {
        readonly Request: HybridPlanner_SendGoal_RequestConstructor;
        readonly Response: HybridPlanner_SendGoal_ResponseConstructor;
      }
      export interface HybridPlanner_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: moveit_msgs.action.HybridPlanner_Goal;
      }
      export interface HybridPlanner_SendGoal_RequestConstructor {
        new(other?: HybridPlanner_SendGoal_Request): HybridPlanner_SendGoal_Request;
      }
      export interface HybridPlanner_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface HybridPlanner_SendGoal_ResponseConstructor {
        new(other?: HybridPlanner_SendGoal_Response): HybridPlanner_SendGoal_Response;
      }
      export interface LocalPlannerConstructor {
        readonly Goal: LocalPlanner_GoalConstructor;
        readonly Result: LocalPlanner_ResultConstructor;
        readonly Feedback: LocalPlanner_FeedbackConstructor;
      }
      export interface LocalPlanner_Feedback {
        feedback: string;
      }
      export interface LocalPlanner_FeedbackConstructor {
        new(other?: LocalPlanner_Feedback): LocalPlanner_Feedback;
      }
      export interface LocalPlanner_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: moveit_msgs.action.LocalPlanner_Feedback;
      }
      export interface LocalPlanner_FeedbackMessageConstructor {
        new(other?: LocalPlanner_FeedbackMessage): LocalPlanner_FeedbackMessage;
      }
      export interface LocalPlanner_GetResultConstructor extends ROSService {
        readonly Request: LocalPlanner_GetResult_RequestConstructor;
        readonly Response: LocalPlanner_GetResult_ResponseConstructor;
      }
      export interface LocalPlanner_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface LocalPlanner_GetResult_RequestConstructor {
        new(other?: LocalPlanner_GetResult_Request): LocalPlanner_GetResult_Request;
      }
      export interface LocalPlanner_GetResult_Response {
        status: number;
        result: moveit_msgs.action.LocalPlanner_Result;
      }
      export interface LocalPlanner_GetResult_ResponseConstructor {
        new(other?: LocalPlanner_GetResult_Response): LocalPlanner_GetResult_Response;
      }
      export interface LocalPlanner_Goal {
        local_constraints: moveit_msgs.msg.Constraints[];
      }
      export interface LocalPlanner_GoalConstructor {
        new(other?: LocalPlanner_Goal): LocalPlanner_Goal;
      }
      export interface LocalPlanner_Result {
        error_code: moveit_msgs.msg.MoveItErrorCodes;
        error_message: string;
      }
      export interface LocalPlanner_ResultConstructor {
        new(other?: LocalPlanner_Result): LocalPlanner_Result;
      }
      export interface LocalPlanner_SendGoalConstructor extends ROSService {
        readonly Request: LocalPlanner_SendGoal_RequestConstructor;
        readonly Response: LocalPlanner_SendGoal_ResponseConstructor;
      }
      export interface LocalPlanner_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: moveit_msgs.action.LocalPlanner_Goal;
      }
      export interface LocalPlanner_SendGoal_RequestConstructor {
        new(other?: LocalPlanner_SendGoal_Request): LocalPlanner_SendGoal_Request;
      }
      export interface LocalPlanner_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface LocalPlanner_SendGoal_ResponseConstructor {
        new(other?: LocalPlanner_SendGoal_Response): LocalPlanner_SendGoal_Response;
      }
      export interface MoveGroupConstructor {
        readonly Goal: MoveGroup_GoalConstructor;
        readonly Result: MoveGroup_ResultConstructor;
        readonly Feedback: MoveGroup_FeedbackConstructor;
      }
      export interface MoveGroupSequenceConstructor {
        readonly Goal: MoveGroupSequence_GoalConstructor;
        readonly Result: MoveGroupSequence_ResultConstructor;
        readonly Feedback: MoveGroupSequence_FeedbackConstructor;
      }
      export interface MoveGroupSequence_Feedback {
        state: string;
      }
      export interface MoveGroupSequence_FeedbackConstructor {
        new(other?: MoveGroupSequence_Feedback): MoveGroupSequence_Feedback;
      }
      export interface MoveGroupSequence_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: moveit_msgs.action.MoveGroupSequence_Feedback;
      }
      export interface MoveGroupSequence_FeedbackMessageConstructor {
        new(other?: MoveGroupSequence_FeedbackMessage): MoveGroupSequence_FeedbackMessage;
      }
      export interface MoveGroupSequence_GetResultConstructor extends ROSService {
        readonly Request: MoveGroupSequence_GetResult_RequestConstructor;
        readonly Response: MoveGroupSequence_GetResult_ResponseConstructor;
      }
      export interface MoveGroupSequence_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface MoveGroupSequence_GetResult_RequestConstructor {
        new(other?: MoveGroupSequence_GetResult_Request): MoveGroupSequence_GetResult_Request;
      }
      export interface MoveGroupSequence_GetResult_Response {
        status: number;
        result: moveit_msgs.action.MoveGroupSequence_Result;
      }
      export interface MoveGroupSequence_GetResult_ResponseConstructor {
        new(other?: MoveGroupSequence_GetResult_Response): MoveGroupSequence_GetResult_Response;
      }
      export interface MoveGroupSequence_Goal {
        request: moveit_msgs.msg.MotionSequenceRequest;
        planning_options: moveit_msgs.msg.PlanningOptions;
      }
      export interface MoveGroupSequence_GoalConstructor {
        new(other?: MoveGroupSequence_Goal): MoveGroupSequence_Goal;
      }
      export interface MoveGroupSequence_Result {
        response: moveit_msgs.msg.MotionSequenceResponse;
      }
      export interface MoveGroupSequence_ResultConstructor {
        new(other?: MoveGroupSequence_Result): MoveGroupSequence_Result;
      }
      export interface MoveGroupSequence_SendGoalConstructor extends ROSService {
        readonly Request: MoveGroupSequence_SendGoal_RequestConstructor;
        readonly Response: MoveGroupSequence_SendGoal_ResponseConstructor;
      }
      export interface MoveGroupSequence_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: moveit_msgs.action.MoveGroupSequence_Goal;
      }
      export interface MoveGroupSequence_SendGoal_RequestConstructor {
        new(other?: MoveGroupSequence_SendGoal_Request): MoveGroupSequence_SendGoal_Request;
      }
      export interface MoveGroupSequence_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface MoveGroupSequence_SendGoal_ResponseConstructor {
        new(other?: MoveGroupSequence_SendGoal_Response): MoveGroupSequence_SendGoal_Response;
      }
      export interface MoveGroup_Feedback {
        state: string;
      }
      export interface MoveGroup_FeedbackConstructor {
        new(other?: MoveGroup_Feedback): MoveGroup_Feedback;
      }
      export interface MoveGroup_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: moveit_msgs.action.MoveGroup_Feedback;
      }
      export interface MoveGroup_FeedbackMessageConstructor {
        new(other?: MoveGroup_FeedbackMessage): MoveGroup_FeedbackMessage;
      }
      export interface MoveGroup_GetResultConstructor extends ROSService {
        readonly Request: MoveGroup_GetResult_RequestConstructor;
        readonly Response: MoveGroup_GetResult_ResponseConstructor;
      }
      export interface MoveGroup_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface MoveGroup_GetResult_RequestConstructor {
        new(other?: MoveGroup_GetResult_Request): MoveGroup_GetResult_Request;
      }
      export interface MoveGroup_GetResult_Response {
        status: number;
        result: moveit_msgs.action.MoveGroup_Result;
      }
      export interface MoveGroup_GetResult_ResponseConstructor {
        new(other?: MoveGroup_GetResult_Response): MoveGroup_GetResult_Response;
      }
      export interface MoveGroup_Goal {
        request: moveit_msgs.msg.MotionPlanRequest;
        planning_options: moveit_msgs.msg.PlanningOptions;
      }
      export interface MoveGroup_GoalConstructor {
        new(other?: MoveGroup_Goal): MoveGroup_Goal;
      }
      export interface MoveGroup_Result {
        error_code: moveit_msgs.msg.MoveItErrorCodes;
        trajectory_start: moveit_msgs.msg.RobotState;
        planned_trajectory: moveit_msgs.msg.RobotTrajectory;
        executed_trajectory: moveit_msgs.msg.RobotTrajectory;
        planning_time: number;
      }
      export interface MoveGroup_ResultConstructor {
        new(other?: MoveGroup_Result): MoveGroup_Result;
      }
      export interface MoveGroup_SendGoalConstructor extends ROSService {
        readonly Request: MoveGroup_SendGoal_RequestConstructor;
        readonly Response: MoveGroup_SendGoal_ResponseConstructor;
      }
      export interface MoveGroup_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: moveit_msgs.action.MoveGroup_Goal;
      }
      export interface MoveGroup_SendGoal_RequestConstructor {
        new(other?: MoveGroup_SendGoal_Request): MoveGroup_SendGoal_Request;
      }
      export interface MoveGroup_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface MoveGroup_SendGoal_ResponseConstructor {
        new(other?: MoveGroup_SendGoal_Response): MoveGroup_SendGoal_Response;
      }
      export interface PickupConstructor {
        readonly Goal: Pickup_GoalConstructor;
        readonly Result: Pickup_ResultConstructor;
        readonly Feedback: Pickup_FeedbackConstructor;
      }
      export interface Pickup_Feedback {
        state: string;
      }
      export interface Pickup_FeedbackConstructor {
        new(other?: Pickup_Feedback): Pickup_Feedback;
      }
      export interface Pickup_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: moveit_msgs.action.Pickup_Feedback;
      }
      export interface Pickup_FeedbackMessageConstructor {
        new(other?: Pickup_FeedbackMessage): Pickup_FeedbackMessage;
      }
      export interface Pickup_GetResultConstructor extends ROSService {
        readonly Request: Pickup_GetResult_RequestConstructor;
        readonly Response: Pickup_GetResult_ResponseConstructor;
      }
      export interface Pickup_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface Pickup_GetResult_RequestConstructor {
        new(other?: Pickup_GetResult_Request): Pickup_GetResult_Request;
      }
      export interface Pickup_GetResult_Response {
        status: number;
        result: moveit_msgs.action.Pickup_Result;
      }
      export interface Pickup_GetResult_ResponseConstructor {
        new(other?: Pickup_GetResult_Response): Pickup_GetResult_Response;
      }
      export interface Pickup_Goal {
        target_name: string;
        group_name: string;
        end_effector: string;
        possible_grasps: moveit_msgs.msg.Grasp[];
        support_surface_name: string;
        allow_gripper_support_collision: boolean;
        attached_object_touch_links: string[];
        minimize_object_distance: boolean;
        path_constraints: moveit_msgs.msg.Constraints;
        planner_id: string;
        allowed_touch_objects: string[];
        allowed_planning_time: number;
        planning_options: moveit_msgs.msg.PlanningOptions;
      }
      export interface Pickup_GoalConstructor {
        new(other?: Pickup_Goal): Pickup_Goal;
      }
      export interface Pickup_Result {
        error_code: moveit_msgs.msg.MoveItErrorCodes;
        trajectory_start: moveit_msgs.msg.RobotState;
        trajectory_stages: moveit_msgs.msg.RobotTrajectory[];
        trajectory_descriptions: string[];
        grasp: moveit_msgs.msg.Grasp;
        planning_time: number;
      }
      export interface Pickup_ResultConstructor {
        new(other?: Pickup_Result): Pickup_Result;
      }
      export interface Pickup_SendGoalConstructor extends ROSService {
        readonly Request: Pickup_SendGoal_RequestConstructor;
        readonly Response: Pickup_SendGoal_ResponseConstructor;
      }
      export interface Pickup_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: moveit_msgs.action.Pickup_Goal;
      }
      export interface Pickup_SendGoal_RequestConstructor {
        new(other?: Pickup_SendGoal_Request): Pickup_SendGoal_Request;
      }
      export interface Pickup_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface Pickup_SendGoal_ResponseConstructor {
        new(other?: Pickup_SendGoal_Response): Pickup_SendGoal_Response;
      }
      export interface PlaceConstructor {
        readonly Goal: Place_GoalConstructor;
        readonly Result: Place_ResultConstructor;
        readonly Feedback: Place_FeedbackConstructor;
      }
      export interface Place_Feedback {
        state: string;
      }
      export interface Place_FeedbackConstructor {
        new(other?: Place_Feedback): Place_Feedback;
      }
      export interface Place_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: moveit_msgs.action.Place_Feedback;
      }
      export interface Place_FeedbackMessageConstructor {
        new(other?: Place_FeedbackMessage): Place_FeedbackMessage;
      }
      export interface Place_GetResultConstructor extends ROSService {
        readonly Request: Place_GetResult_RequestConstructor;
        readonly Response: Place_GetResult_ResponseConstructor;
      }
      export interface Place_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface Place_GetResult_RequestConstructor {
        new(other?: Place_GetResult_Request): Place_GetResult_Request;
      }
      export interface Place_GetResult_Response {
        status: number;
        result: moveit_msgs.action.Place_Result;
      }
      export interface Place_GetResult_ResponseConstructor {
        new(other?: Place_GetResult_Response): Place_GetResult_Response;
      }
      export interface Place_Goal {
        group_name: string;
        attached_object_name: string;
        place_locations: moveit_msgs.msg.PlaceLocation[];
        place_eef: boolean;
        support_surface_name: string;
        allow_gripper_support_collision: boolean;
        path_constraints: moveit_msgs.msg.Constraints;
        planner_id: string;
        allowed_touch_objects: string[];
        allowed_planning_time: number;
        planning_options: moveit_msgs.msg.PlanningOptions;
      }
      export interface Place_GoalConstructor {
        new(other?: Place_Goal): Place_Goal;
      }
      export interface Place_Result {
        error_code: moveit_msgs.msg.MoveItErrorCodes;
        trajectory_start: moveit_msgs.msg.RobotState;
        trajectory_stages: moveit_msgs.msg.RobotTrajectory[];
        trajectory_descriptions: string[];
        place_location: moveit_msgs.msg.PlaceLocation;
        planning_time: number;
      }
      export interface Place_ResultConstructor {
        new(other?: Place_Result): Place_Result;
      }
      export interface Place_SendGoalConstructor extends ROSService {
        readonly Request: Place_SendGoal_RequestConstructor;
        readonly Response: Place_SendGoal_ResponseConstructor;
      }
      export interface Place_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: moveit_msgs.action.Place_Goal;
      }
      export interface Place_SendGoal_RequestConstructor {
        new(other?: Place_SendGoal_Request): Place_SendGoal_Request;
      }
      export interface Place_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface Place_SendGoal_ResponseConstructor {
        new(other?: Place_SendGoal_Response): Place_SendGoal_Response;
      }
    }
    namespace msg {
      export interface AllowedCollisionEntry {
        enabled: boolean[];
      }
      export interface AllowedCollisionEntryConstructor {
        new(other?: AllowedCollisionEntry): AllowedCollisionEntry;
      }
      export interface AllowedCollisionMatrix {
        entry_names: string[];
        entry_values: moveit_msgs.msg.AllowedCollisionEntry[];
        default_entry_names: string[];
        default_entry_values: boolean[];
      }
      export interface AllowedCollisionMatrixConstructor {
        new(other?: AllowedCollisionMatrix): AllowedCollisionMatrix;
      }
      export interface AttachedCollisionObject {
        link_name: string;
        object: moveit_msgs.msg.CollisionObject;
        touch_links: string[];
        detach_posture: trajectory_msgs.msg.JointTrajectory;
        weight: number;
      }
      export interface AttachedCollisionObjectConstructor {
        new(other?: AttachedCollisionObject): AttachedCollisionObject;
      }
      export interface BoundingVolume {
        primitives: shape_msgs.msg.SolidPrimitive[];
        primitive_poses: geometry_msgs.msg.Pose[];
        meshes: shape_msgs.msg.Mesh[];
        mesh_poses: geometry_msgs.msg.Pose[];
      }
      export interface BoundingVolumeConstructor {
        new(other?: BoundingVolume): BoundingVolume;
      }
      export interface CartesianPoint {
        pose: geometry_msgs.msg.Pose;
        velocity: geometry_msgs.msg.Twist;
        acceleration: geometry_msgs.msg.Accel;
      }
      export interface CartesianPointConstructor {
        new(other?: CartesianPoint): CartesianPoint;
      }
      export interface CartesianTrajectory {
        header: std_msgs.msg.Header;
        tracked_frame: string;
        points: moveit_msgs.msg.CartesianTrajectoryPoint[];
      }
      export interface CartesianTrajectoryConstructor {
        new(other?: CartesianTrajectory): CartesianTrajectory;
      }
      export interface CartesianTrajectoryPoint {
        point: moveit_msgs.msg.CartesianPoint;
        time_from_start: builtin_interfaces.msg.Duration;
      }
      export interface CartesianTrajectoryPointConstructor {
        new(other?: CartesianTrajectoryPoint): CartesianTrajectoryPoint;
      }
      export interface CollisionObject {
        header: std_msgs.msg.Header;
        pose: geometry_msgs.msg.Pose;
        id: string;
        type: object_recognition_msgs.msg.ObjectType;
        primitives: shape_msgs.msg.SolidPrimitive[];
        primitive_poses: geometry_msgs.msg.Pose[];
        meshes: shape_msgs.msg.Mesh[];
        mesh_poses: geometry_msgs.msg.Pose[];
        planes: shape_msgs.msg.Plane[];
        plane_poses: geometry_msgs.msg.Pose[];
        subframe_names: string[];
        subframe_poses: geometry_msgs.msg.Pose[];
        operation: number;
      }
      export interface CollisionObjectConstructor {
        readonly ADD: number;
        readonly REMOVE: number;
        readonly APPEND: number;
        readonly MOVE: number;
        new(other?: CollisionObject): CollisionObject;
      }
      export interface ConstraintEvalResult {
        result: boolean;
        distance: number;
      }
      export interface ConstraintEvalResultConstructor {
        new(other?: ConstraintEvalResult): ConstraintEvalResult;
      }
      export interface Constraints {
        name: string;
        joint_constraints: moveit_msgs.msg.JointConstraint[];
        position_constraints: moveit_msgs.msg.PositionConstraint[];
        orientation_constraints: moveit_msgs.msg.OrientationConstraint[];
        visibility_constraints: moveit_msgs.msg.VisibilityConstraint[];
      }
      export interface ConstraintsConstructor {
        new(other?: Constraints): Constraints;
      }
      export interface ContactInformation {
        header: std_msgs.msg.Header;
        position: geometry_msgs.msg.Point;
        normal: geometry_msgs.msg.Vector3;
        depth: number;
        contact_body_1: string;
        body_type_1: number;
        contact_body_2: string;
        body_type_2: number;
      }
      export interface ContactInformationConstructor {
        readonly ROBOT_LINK: number;
        readonly WORLD_OBJECT: number;
        readonly ROBOT_ATTACHED: number;
        new(other?: ContactInformation): ContactInformation;
      }
      export interface CostSource {
        cost_density: number;
        aabb_min: geometry_msgs.msg.Vector3;
        aabb_max: geometry_msgs.msg.Vector3;
      }
      export interface CostSourceConstructor {
        new(other?: CostSource): CostSource;
      }
      export interface DisplayRobotState {
        state: moveit_msgs.msg.RobotState;
        highlight_links: moveit_msgs.msg.ObjectColor[];
        hide: boolean;
      }
      export interface DisplayRobotStateConstructor {
        new(other?: DisplayRobotState): DisplayRobotState;
      }
      export interface DisplayTrajectory {
        model_id: string;
        trajectory: moveit_msgs.msg.RobotTrajectory[];
        trajectory_start: moveit_msgs.msg.RobotState;
      }
      export interface DisplayTrajectoryConstructor {
        new(other?: DisplayTrajectory): DisplayTrajectory;
      }
      export interface GenericTrajectory {
        header: std_msgs.msg.Header;
        joint_trajectory: trajectory_msgs.msg.JointTrajectory[];
        cartesian_trajectory: moveit_msgs.msg.CartesianTrajectory[];
      }
      export interface GenericTrajectoryConstructor {
        new(other?: GenericTrajectory): GenericTrajectory;
      }
      export interface Grasp {
        id: string;
        pre_grasp_posture: trajectory_msgs.msg.JointTrajectory;
        grasp_posture: trajectory_msgs.msg.JointTrajectory;
        grasp_pose: geometry_msgs.msg.PoseStamped;
        grasp_quality: number;
        pre_grasp_approach: moveit_msgs.msg.GripperTranslation;
        post_grasp_retreat: moveit_msgs.msg.GripperTranslation;
        post_place_retreat: moveit_msgs.msg.GripperTranslation;
        max_contact_force: number;
        allowed_touch_objects: string[];
      }
      export interface GraspConstructor {
        new(other?: Grasp): Grasp;
      }
      export interface GripperTranslation {
        direction: geometry_msgs.msg.Vector3Stamped;
        desired_distance: number;
        min_distance: number;
      }
      export interface GripperTranslationConstructor {
        new(other?: GripperTranslation): GripperTranslation;
      }
      export interface JointConstraint {
        joint_name: string;
        position: number;
        tolerance_above: number;
        tolerance_below: number;
        weight: number;
      }
      export interface JointConstraintConstructor {
        new(other?: JointConstraint): JointConstraint;
      }
      export interface JointLimits {
        joint_name: string;
        has_position_limits: boolean;
        min_position: number;
        max_position: number;
        has_velocity_limits: boolean;
        max_velocity: number;
        has_acceleration_limits: boolean;
        max_acceleration: number;
        has_jerk_limits: boolean;
        max_jerk: number;
      }
      export interface JointLimitsConstructor {
        new(other?: JointLimits): JointLimits;
      }
      export interface KinematicSolverInfo {
        joint_names: string[];
        limits: moveit_msgs.msg.JointLimits[];
        link_names: string[];
      }
      export interface KinematicSolverInfoConstructor {
        new(other?: KinematicSolverInfo): KinematicSolverInfo;
      }
      export interface LinkPadding {
        link_name: string;
        padding: number;
      }
      export interface LinkPaddingConstructor {
        new(other?: LinkPadding): LinkPadding;
      }
      export interface LinkScale {
        link_name: string;
        scale: number;
      }
      export interface LinkScaleConstructor {
        new(other?: LinkScale): LinkScale;
      }
      export interface MotionPlanDetailedResponse {
        trajectory_start: moveit_msgs.msg.RobotState;
        group_name: string;
        trajectory: moveit_msgs.msg.RobotTrajectory[];
        description: string[];
        processing_time: number[] | Float64Array;
        error_code: moveit_msgs.msg.MoveItErrorCodes;
      }
      export interface MotionPlanDetailedResponseConstructor {
        new(other?: MotionPlanDetailedResponse): MotionPlanDetailedResponse;
      }
      export interface MotionPlanRequest {
        workspace_parameters: moveit_msgs.msg.WorkspaceParameters;
        start_state: moveit_msgs.msg.RobotState;
        goal_constraints: moveit_msgs.msg.Constraints[];
        path_constraints: moveit_msgs.msg.Constraints;
        trajectory_constraints: moveit_msgs.msg.TrajectoryConstraints;
        reference_trajectories: moveit_msgs.msg.GenericTrajectory[];
        pipeline_id: string;
        planner_id: string;
        group_name: string;
        num_planning_attempts: number;
        allowed_planning_time: number;
        max_velocity_scaling_factor: number;
        max_acceleration_scaling_factor: number;
        cartesian_speed_end_effector_link: string;
        max_cartesian_speed: number;
      }
      export interface MotionPlanRequestConstructor {
        new(other?: MotionPlanRequest): MotionPlanRequest;
      }
      export interface MotionPlanResponse {
        trajectory_start: moveit_msgs.msg.RobotState;
        group_name: string;
        trajectory: moveit_msgs.msg.RobotTrajectory;
        planning_time: number;
        error_code: moveit_msgs.msg.MoveItErrorCodes;
      }
      export interface MotionPlanResponseConstructor {
        new(other?: MotionPlanResponse): MotionPlanResponse;
      }
      export interface MotionSequenceItem {
        req: moveit_msgs.msg.MotionPlanRequest;
        blend_radius: number;
      }
      export interface MotionSequenceItemConstructor {
        new(other?: MotionSequenceItem): MotionSequenceItem;
      }
      export interface MotionSequenceRequest {
        items: moveit_msgs.msg.MotionSequenceItem[];
      }
      export interface MotionSequenceRequestConstructor {
        new(other?: MotionSequenceRequest): MotionSequenceRequest;
      }
      export interface MotionSequenceResponse {
        error_code: moveit_msgs.msg.MoveItErrorCodes;
        sequence_start: moveit_msgs.msg.RobotState;
        planned_trajectories: moveit_msgs.msg.RobotTrajectory[];
        planning_time: number;
      }
      export interface MotionSequenceResponseConstructor {
        new(other?: MotionSequenceResponse): MotionSequenceResponse;
      }
      export interface MoveItErrorCodes {
        val: number;
      }
      export interface MoveItErrorCodesConstructor {
        readonly SUCCESS: number;
        readonly FAILURE: number;
        readonly PLANNING_FAILED: number;
        readonly INVALID_MOTION_PLAN: number;
        readonly MOTION_PLAN_INVALIDATED_BY_ENVIRONMENT_CHANGE: number;
        readonly CONTROL_FAILED: number;
        readonly UNABLE_TO_AQUIRE_SENSOR_DATA: number;
        readonly TIMED_OUT: number;
        readonly PREEMPTED: number;
        readonly START_STATE_IN_COLLISION: number;
        readonly START_STATE_VIOLATES_PATH_CONSTRAINTS: number;
        readonly START_STATE_INVALID: number;
        readonly GOAL_IN_COLLISION: number;
        readonly GOAL_VIOLATES_PATH_CONSTRAINTS: number;
        readonly GOAL_CONSTRAINTS_VIOLATED: number;
        readonly GOAL_STATE_INVALID: number;
        readonly UNRECOGNIZED_GOAL_TYPE: number;
        readonly INVALID_GROUP_NAME: number;
        readonly INVALID_GOAL_CONSTRAINTS: number;
        readonly INVALID_ROBOT_STATE: number;
        readonly INVALID_LINK_NAME: number;
        readonly INVALID_OBJECT_NAME: number;
        readonly FRAME_TRANSFORM_FAILURE: number;
        readonly COLLISION_CHECKING_UNAVAILABLE: number;
        readonly ROBOT_STATE_STALE: number;
        readonly SENSOR_INFO_STALE: number;
        readonly COMMUNICATION_FAILURE: number;
        readonly CRASH: number;
        readonly ABORT: number;
        readonly NO_IK_SOLUTION: number;
        new(other?: MoveItErrorCodes): MoveItErrorCodes;
      }
      export interface ObjectColor {
        id: string;
        color: std_msgs.msg.ColorRGBA;
      }
      export interface ObjectColorConstructor {
        new(other?: ObjectColor): ObjectColor;
      }
      export interface OrientationConstraint {
        header: std_msgs.msg.Header;
        orientation: geometry_msgs.msg.Quaternion;
        link_name: string;
        absolute_x_axis_tolerance: number;
        absolute_y_axis_tolerance: number;
        absolute_z_axis_tolerance: number;
        parameterization: number;
        weight: number;
      }
      export interface OrientationConstraintConstructor {
        readonly XYZ_EULER_ANGLES: number;
        readonly ROTATION_VECTOR: number;
        new(other?: OrientationConstraint): OrientationConstraint;
      }
      export interface OrientedBoundingBox {
        pose: geometry_msgs.msg.Pose;
        extents: geometry_msgs.msg.Point32;
      }
      export interface OrientedBoundingBoxConstructor {
        new(other?: OrientedBoundingBox): OrientedBoundingBox;
      }
      export interface PlaceLocation {
        id: string;
        post_place_posture: trajectory_msgs.msg.JointTrajectory;
        place_pose: geometry_msgs.msg.PoseStamped;
        quality: number;
        pre_place_approach: moveit_msgs.msg.GripperTranslation;
        post_place_retreat: moveit_msgs.msg.GripperTranslation;
        allowed_touch_objects: string[];
      }
      export interface PlaceLocationConstructor {
        new(other?: PlaceLocation): PlaceLocation;
      }
      export interface PlannerInterfaceDescription {
        name: string;
        pipeline_id: string;
        planner_ids: string[];
      }
      export interface PlannerInterfaceDescriptionConstructor {
        new(other?: PlannerInterfaceDescription): PlannerInterfaceDescription;
      }
      export interface PlannerParams {
        keys: string[];
        values: string[];
        descriptions: string[];
      }
      export interface PlannerParamsConstructor {
        new(other?: PlannerParams): PlannerParams;
      }
      export interface PlanningOptions {
        planning_scene_diff: moveit_msgs.msg.PlanningScene;
        plan_only: boolean;
        look_around: boolean;
        look_around_attempts: number;
        max_safe_execution_cost: number;
        replan: boolean;
        replan_attempts: number;
        replan_delay: number;
      }
      export interface PlanningOptionsConstructor {
        new(other?: PlanningOptions): PlanningOptions;
      }
      export interface PlanningScene {
        name: string;
        robot_state: moveit_msgs.msg.RobotState;
        robot_model_name: string;
        fixed_frame_transforms: geometry_msgs.msg.TransformStamped[];
        allowed_collision_matrix: moveit_msgs.msg.AllowedCollisionMatrix;
        link_padding: moveit_msgs.msg.LinkPadding[];
        link_scale: moveit_msgs.msg.LinkScale[];
        object_colors: moveit_msgs.msg.ObjectColor[];
        world: moveit_msgs.msg.PlanningSceneWorld;
        is_diff: boolean;
      }
      export interface PlanningSceneConstructor {
        new(other?: PlanningScene): PlanningScene;
      }
      export interface PlanningSceneComponents {
        components: number;
      }
      export interface PlanningSceneComponentsConstructor {
        readonly SCENE_SETTINGS: number;
        readonly ROBOT_STATE: number;
        readonly ROBOT_STATE_ATTACHED_OBJECTS: number;
        readonly WORLD_OBJECT_NAMES: number;
        readonly WORLD_OBJECT_GEOMETRY: number;
        readonly OCTOMAP: number;
        readonly TRANSFORMS: number;
        readonly ALLOWED_COLLISION_MATRIX: number;
        readonly LINK_PADDING_AND_SCALING: number;
        readonly OBJECT_COLORS: number;
        new(other?: PlanningSceneComponents): PlanningSceneComponents;
      }
      export interface PlanningSceneWorld {
        collision_objects: moveit_msgs.msg.CollisionObject[];
        octomap: octomap_msgs.msg.OctomapWithPose;
      }
      export interface PlanningSceneWorldConstructor {
        new(other?: PlanningSceneWorld): PlanningSceneWorld;
      }
      export interface PositionConstraint {
        header: std_msgs.msg.Header;
        link_name: string;
        target_point_offset: geometry_msgs.msg.Vector3;
        constraint_region: moveit_msgs.msg.BoundingVolume;
        weight: number;
      }
      export interface PositionConstraintConstructor {
        new(other?: PositionConstraint): PositionConstraint;
      }
      export interface PositionIKRequest {
        group_name: string;
        robot_state: moveit_msgs.msg.RobotState;
        constraints: moveit_msgs.msg.Constraints;
        avoid_collisions: boolean;
        ik_link_name: string;
        pose_stamped: geometry_msgs.msg.PoseStamped;
        ik_link_names: string[];
        pose_stamped_vector: geometry_msgs.msg.PoseStamped[];
        timeout: builtin_interfaces.msg.Duration;
      }
      export interface PositionIKRequestConstructor {
        new(other?: PositionIKRequest): PositionIKRequest;
      }
      export interface RobotState {
        joint_state: sensor_msgs.msg.JointState;
        multi_dof_joint_state: sensor_msgs.msg.MultiDOFJointState;
        attached_collision_objects: moveit_msgs.msg.AttachedCollisionObject[];
        is_diff: boolean;
      }
      export interface RobotStateConstructor {
        new(other?: RobotState): RobotState;
      }
      export interface RobotTrajectory {
        joint_trajectory: trajectory_msgs.msg.JointTrajectory;
        multi_dof_joint_trajectory: trajectory_msgs.msg.MultiDOFJointTrajectory;
      }
      export interface RobotTrajectoryConstructor {
        new(other?: RobotTrajectory): RobotTrajectory;
      }
      export interface TrajectoryConstraints {
        constraints: moveit_msgs.msg.Constraints[];
      }
      export interface TrajectoryConstraintsConstructor {
        new(other?: TrajectoryConstraints): TrajectoryConstraints;
      }
      export interface VisibilityConstraint {
        target_radius: number;
        target_pose: geometry_msgs.msg.PoseStamped;
        cone_sides: number;
        sensor_pose: geometry_msgs.msg.PoseStamped;
        max_view_angle: number;
        max_range_angle: number;
        sensor_view_direction: number;
        weight: number;
      }
      export interface VisibilityConstraintConstructor {
        readonly SENSOR_Z: number;
        readonly SENSOR_Y: number;
        readonly SENSOR_X: number;
        new(other?: VisibilityConstraint): VisibilityConstraint;
      }
      export interface WorkspaceParameters {
        header: std_msgs.msg.Header;
        min_corner: geometry_msgs.msg.Vector3;
        max_corner: geometry_msgs.msg.Vector3;
      }
      export interface WorkspaceParametersConstructor {
        new(other?: WorkspaceParameters): WorkspaceParameters;
      }
    }
    namespace srv {
      export interface ApplyPlanningSceneConstructor extends ROSService {
        readonly Request: ApplyPlanningScene_RequestConstructor;
        readonly Response: ApplyPlanningScene_ResponseConstructor;
      }
      export interface ApplyPlanningScene_Request {
        scene: moveit_msgs.msg.PlanningScene;
      }
      export interface ApplyPlanningScene_RequestConstructor {
        new(other?: ApplyPlanningScene_Request): ApplyPlanningScene_Request;
      }
      export interface ApplyPlanningScene_Response {
        success: boolean;
      }
      export interface ApplyPlanningScene_ResponseConstructor {
        new(other?: ApplyPlanningScene_Response): ApplyPlanningScene_Response;
      }
      export interface ChangeControlDimensionsConstructor extends ROSService {
        readonly Request: ChangeControlDimensions_RequestConstructor;
        readonly Response: ChangeControlDimensions_ResponseConstructor;
      }
      export interface ChangeControlDimensions_Request {
        control_x_translation: boolean;
        control_y_translation: boolean;
        control_z_translation: boolean;
        control_x_rotation: boolean;
        control_y_rotation: boolean;
        control_z_rotation: boolean;
      }
      export interface ChangeControlDimensions_RequestConstructor {
        new(other?: ChangeControlDimensions_Request): ChangeControlDimensions_Request;
      }
      export interface ChangeControlDimensions_Response {
        success: boolean;
      }
      export interface ChangeControlDimensions_ResponseConstructor {
        new(other?: ChangeControlDimensions_Response): ChangeControlDimensions_Response;
      }
      export interface ChangeDriftDimensionsConstructor extends ROSService {
        readonly Request: ChangeDriftDimensions_RequestConstructor;
        readonly Response: ChangeDriftDimensions_ResponseConstructor;
      }
      export interface ChangeDriftDimensions_Request {
        drift_x_translation: boolean;
        drift_y_translation: boolean;
        drift_z_translation: boolean;
        drift_x_rotation: boolean;
        drift_y_rotation: boolean;
        drift_z_rotation: boolean;
        transform_jog_frame_to_drift_frame: geometry_msgs.msg.Transform;
      }
      export interface ChangeDriftDimensions_RequestConstructor {
        new(other?: ChangeDriftDimensions_Request): ChangeDriftDimensions_Request;
      }
      export interface ChangeDriftDimensions_Response {
        success: boolean;
      }
      export interface ChangeDriftDimensions_ResponseConstructor {
        new(other?: ChangeDriftDimensions_Response): ChangeDriftDimensions_Response;
      }
      export interface CheckIfRobotStateExistsInWarehouseConstructor extends ROSService {
        readonly Request: CheckIfRobotStateExistsInWarehouse_RequestConstructor;
        readonly Response: CheckIfRobotStateExistsInWarehouse_ResponseConstructor;
      }
      export interface CheckIfRobotStateExistsInWarehouse_Request {
        name: string;
        robot: string;
      }
      export interface CheckIfRobotStateExistsInWarehouse_RequestConstructor {
        new(other?: CheckIfRobotStateExistsInWarehouse_Request): CheckIfRobotStateExistsInWarehouse_Request;
      }
      export interface CheckIfRobotStateExistsInWarehouse_Response {
        exists: boolean;
      }
      export interface CheckIfRobotStateExistsInWarehouse_ResponseConstructor {
        new(other?: CheckIfRobotStateExistsInWarehouse_Response): CheckIfRobotStateExistsInWarehouse_Response;
      }
      export interface DeleteRobotStateFromWarehouseConstructor extends ROSService {
        readonly Request: DeleteRobotStateFromWarehouse_RequestConstructor;
        readonly Response: DeleteRobotStateFromWarehouse_ResponseConstructor;
      }
      export interface DeleteRobotStateFromWarehouse_Request {
        name: string;
        robot: string;
      }
      export interface DeleteRobotStateFromWarehouse_RequestConstructor {
        new(other?: DeleteRobotStateFromWarehouse_Request): DeleteRobotStateFromWarehouse_Request;
      }
      export interface DeleteRobotStateFromWarehouse_Response {
      }
      export interface DeleteRobotStateFromWarehouse_ResponseConstructor {
        new(other?: DeleteRobotStateFromWarehouse_Response): DeleteRobotStateFromWarehouse_Response;
      }
      export interface ExecuteKnownTrajectoryConstructor extends ROSService {
        readonly Request: ExecuteKnownTrajectory_RequestConstructor;
        readonly Response: ExecuteKnownTrajectory_ResponseConstructor;
      }
      export interface ExecuteKnownTrajectory_Request {
        trajectory: moveit_msgs.msg.RobotTrajectory;
        wait_for_execution: boolean;
      }
      export interface ExecuteKnownTrajectory_RequestConstructor {
        new(other?: ExecuteKnownTrajectory_Request): ExecuteKnownTrajectory_Request;
      }
      export interface ExecuteKnownTrajectory_Response {
        error_code: moveit_msgs.msg.MoveItErrorCodes;
      }
      export interface ExecuteKnownTrajectory_ResponseConstructor {
        new(other?: ExecuteKnownTrajectory_Response): ExecuteKnownTrajectory_Response;
      }
      export interface GetCartesianPathConstructor extends ROSService {
        readonly Request: GetCartesianPath_RequestConstructor;
        readonly Response: GetCartesianPath_ResponseConstructor;
      }
      export interface GetCartesianPath_Request {
        header: std_msgs.msg.Header;
        start_state: moveit_msgs.msg.RobotState;
        group_name: string;
        link_name: string;
        waypoints: geometry_msgs.msg.Pose[];
        max_step: number;
        jump_threshold: number;
        prismatic_jump_threshold: number;
        revolute_jump_threshold: number;
        avoid_collisions: boolean;
        path_constraints: moveit_msgs.msg.Constraints;
      }
      export interface GetCartesianPath_RequestConstructor {
        new(other?: GetCartesianPath_Request): GetCartesianPath_Request;
      }
      export interface GetCartesianPath_Response {
        start_state: moveit_msgs.msg.RobotState;
        solution: moveit_msgs.msg.RobotTrajectory;
        fraction: number;
        error_code: moveit_msgs.msg.MoveItErrorCodes;
      }
      export interface GetCartesianPath_ResponseConstructor {
        new(other?: GetCartesianPath_Response): GetCartesianPath_Response;
      }
      export interface GetMotionPlanConstructor extends ROSService {
        readonly Request: GetMotionPlan_RequestConstructor;
        readonly Response: GetMotionPlan_ResponseConstructor;
      }
      export interface GetMotionPlan_Request {
        motion_plan_request: moveit_msgs.msg.MotionPlanRequest;
      }
      export interface GetMotionPlan_RequestConstructor {
        new(other?: GetMotionPlan_Request): GetMotionPlan_Request;
      }
      export interface GetMotionPlan_Response {
        motion_plan_response: moveit_msgs.msg.MotionPlanResponse;
      }
      export interface GetMotionPlan_ResponseConstructor {
        new(other?: GetMotionPlan_Response): GetMotionPlan_Response;
      }
      export interface GetMotionSequenceConstructor extends ROSService {
        readonly Request: GetMotionSequence_RequestConstructor;
        readonly Response: GetMotionSequence_ResponseConstructor;
      }
      export interface GetMotionSequence_Request {
        request: moveit_msgs.msg.MotionSequenceRequest;
      }
      export interface GetMotionSequence_RequestConstructor {
        new(other?: GetMotionSequence_Request): GetMotionSequence_Request;
      }
      export interface GetMotionSequence_Response {
        response: moveit_msgs.msg.MotionSequenceResponse;
      }
      export interface GetMotionSequence_ResponseConstructor {
        new(other?: GetMotionSequence_Response): GetMotionSequence_Response;
      }
      export interface GetPlannerParamsConstructor extends ROSService {
        readonly Request: GetPlannerParams_RequestConstructor;
        readonly Response: GetPlannerParams_ResponseConstructor;
      }
      export interface GetPlannerParams_Request {
        pipeline_id: string;
        planner_config: string;
        group: string;
      }
      export interface GetPlannerParams_RequestConstructor {
        new(other?: GetPlannerParams_Request): GetPlannerParams_Request;
      }
      export interface GetPlannerParams_Response {
        params: moveit_msgs.msg.PlannerParams;
      }
      export interface GetPlannerParams_ResponseConstructor {
        new(other?: GetPlannerParams_Response): GetPlannerParams_Response;
      }
      export interface GetPlanningSceneConstructor extends ROSService {
        readonly Request: GetPlanningScene_RequestConstructor;
        readonly Response: GetPlanningScene_ResponseConstructor;
      }
      export interface GetPlanningScene_Request {
        components: moveit_msgs.msg.PlanningSceneComponents;
      }
      export interface GetPlanningScene_RequestConstructor {
        new(other?: GetPlanningScene_Request): GetPlanningScene_Request;
      }
      export interface GetPlanningScene_Response {
        scene: moveit_msgs.msg.PlanningScene;
      }
      export interface GetPlanningScene_ResponseConstructor {
        new(other?: GetPlanningScene_Response): GetPlanningScene_Response;
      }
      export interface GetPositionFKConstructor extends ROSService {
        readonly Request: GetPositionFK_RequestConstructor;
        readonly Response: GetPositionFK_ResponseConstructor;
      }
      export interface GetPositionFK_Request {
        header: std_msgs.msg.Header;
        fk_link_names: string[];
        robot_state: moveit_msgs.msg.RobotState;
      }
      export interface GetPositionFK_RequestConstructor {
        new(other?: GetPositionFK_Request): GetPositionFK_Request;
      }
      export interface GetPositionFK_Response {
        pose_stamped: geometry_msgs.msg.PoseStamped[];
        fk_link_names: string[];
        error_code: moveit_msgs.msg.MoveItErrorCodes;
      }
      export interface GetPositionFK_ResponseConstructor {
        new(other?: GetPositionFK_Response): GetPositionFK_Response;
      }
      export interface GetPositionIKConstructor extends ROSService {
        readonly Request: GetPositionIK_RequestConstructor;
        readonly Response: GetPositionIK_ResponseConstructor;
      }
      export interface GetPositionIK_Request {
        ik_request: moveit_msgs.msg.PositionIKRequest;
      }
      export interface GetPositionIK_RequestConstructor {
        new(other?: GetPositionIK_Request): GetPositionIK_Request;
      }
      export interface GetPositionIK_Response {
        solution: moveit_msgs.msg.RobotState;
        error_code: moveit_msgs.msg.MoveItErrorCodes;
      }
      export interface GetPositionIK_ResponseConstructor {
        new(other?: GetPositionIK_Response): GetPositionIK_Response;
      }
      export interface GetRobotStateFromWarehouseConstructor extends ROSService {
        readonly Request: GetRobotStateFromWarehouse_RequestConstructor;
        readonly Response: GetRobotStateFromWarehouse_ResponseConstructor;
      }
      export interface GetRobotStateFromWarehouse_Request {
        name: string;
        robot: string;
      }
      export interface GetRobotStateFromWarehouse_RequestConstructor {
        new(other?: GetRobotStateFromWarehouse_Request): GetRobotStateFromWarehouse_Request;
      }
      export interface GetRobotStateFromWarehouse_Response {
        state: moveit_msgs.msg.RobotState;
      }
      export interface GetRobotStateFromWarehouse_ResponseConstructor {
        new(other?: GetRobotStateFromWarehouse_Response): GetRobotStateFromWarehouse_Response;
      }
      export interface GetStateValidityConstructor extends ROSService {
        readonly Request: GetStateValidity_RequestConstructor;
        readonly Response: GetStateValidity_ResponseConstructor;
      }
      export interface GetStateValidity_Request {
        robot_state: moveit_msgs.msg.RobotState;
        group_name: string;
        constraints: moveit_msgs.msg.Constraints;
      }
      export interface GetStateValidity_RequestConstructor {
        new(other?: GetStateValidity_Request): GetStateValidity_Request;
      }
      export interface GetStateValidity_Response {
        valid: boolean;
        contacts: moveit_msgs.msg.ContactInformation[];
        cost_sources: moveit_msgs.msg.CostSource[];
        constraint_result: moveit_msgs.msg.ConstraintEvalResult[];
      }
      export interface GetStateValidity_ResponseConstructor {
        new(other?: GetStateValidity_Response): GetStateValidity_Response;
      }
      export interface GraspPlanningConstructor extends ROSService {
        readonly Request: GraspPlanning_RequestConstructor;
        readonly Response: GraspPlanning_ResponseConstructor;
      }
      export interface GraspPlanning_Request {
        group_name: string;
        target: moveit_msgs.msg.CollisionObject;
        support_surfaces: string[];
        candidate_grasps: moveit_msgs.msg.Grasp[];
        movable_obstacles: moveit_msgs.msg.CollisionObject[];
      }
      export interface GraspPlanning_RequestConstructor {
        new(other?: GraspPlanning_Request): GraspPlanning_Request;
      }
      export interface GraspPlanning_Response {
        grasps: moveit_msgs.msg.Grasp[];
        error_code: moveit_msgs.msg.MoveItErrorCodes;
      }
      export interface GraspPlanning_ResponseConstructor {
        new(other?: GraspPlanning_Response): GraspPlanning_Response;
      }
      export interface ListRobotStatesInWarehouseConstructor extends ROSService {
        readonly Request: ListRobotStatesInWarehouse_RequestConstructor;
        readonly Response: ListRobotStatesInWarehouse_ResponseConstructor;
      }
      export interface ListRobotStatesInWarehouse_Request {
        regex: string;
        robot: string;
      }
      export interface ListRobotStatesInWarehouse_RequestConstructor {
        new(other?: ListRobotStatesInWarehouse_Request): ListRobotStatesInWarehouse_Request;
      }
      export interface ListRobotStatesInWarehouse_Response {
        states: string[];
      }
      export interface ListRobotStatesInWarehouse_ResponseConstructor {
        new(other?: ListRobotStatesInWarehouse_Response): ListRobotStatesInWarehouse_Response;
      }
      export interface LoadMapConstructor extends ROSService {
        readonly Request: LoadMap_RequestConstructor;
        readonly Response: LoadMap_ResponseConstructor;
      }
      export interface LoadMap_Request {
        filename: string;
      }
      export interface LoadMap_RequestConstructor {
        new(other?: LoadMap_Request): LoadMap_Request;
      }
      export interface LoadMap_Response {
        success: boolean;
      }
      export interface LoadMap_ResponseConstructor {
        new(other?: LoadMap_Response): LoadMap_Response;
      }
      export interface QueryPlannerInterfacesConstructor extends ROSService {
        readonly Request: QueryPlannerInterfaces_RequestConstructor;
        readonly Response: QueryPlannerInterfaces_ResponseConstructor;
      }
      export interface QueryPlannerInterfaces_Request {
      }
      export interface QueryPlannerInterfaces_RequestConstructor {
        new(other?: QueryPlannerInterfaces_Request): QueryPlannerInterfaces_Request;
      }
      export interface QueryPlannerInterfaces_Response {
        planner_interfaces: moveit_msgs.msg.PlannerInterfaceDescription[];
      }
      export interface QueryPlannerInterfaces_ResponseConstructor {
        new(other?: QueryPlannerInterfaces_Response): QueryPlannerInterfaces_Response;
      }
      export interface RenameRobotStateInWarehouseConstructor extends ROSService {
        readonly Request: RenameRobotStateInWarehouse_RequestConstructor;
        readonly Response: RenameRobotStateInWarehouse_ResponseConstructor;
      }
      export interface RenameRobotStateInWarehouse_Request {
        old_name: string;
        new_name: string;
        robot: string;
      }
      export interface RenameRobotStateInWarehouse_RequestConstructor {
        new(other?: RenameRobotStateInWarehouse_Request): RenameRobotStateInWarehouse_Request;
      }
      export interface RenameRobotStateInWarehouse_Response {
      }
      export interface RenameRobotStateInWarehouse_ResponseConstructor {
        new(other?: RenameRobotStateInWarehouse_Response): RenameRobotStateInWarehouse_Response;
      }
      export interface SaveMapConstructor extends ROSService {
        readonly Request: SaveMap_RequestConstructor;
        readonly Response: SaveMap_ResponseConstructor;
      }
      export interface SaveMap_Request {
        filename: string;
      }
      export interface SaveMap_RequestConstructor {
        new(other?: SaveMap_Request): SaveMap_Request;
      }
      export interface SaveMap_Response {
        success: boolean;
      }
      export interface SaveMap_ResponseConstructor {
        new(other?: SaveMap_Response): SaveMap_Response;
      }
      export interface SaveRobotStateToWarehouseConstructor extends ROSService {
        readonly Request: SaveRobotStateToWarehouse_RequestConstructor;
        readonly Response: SaveRobotStateToWarehouse_ResponseConstructor;
      }
      export interface SaveRobotStateToWarehouse_Request {
        name: string;
        robot: string;
        state: moveit_msgs.msg.RobotState;
      }
      export interface SaveRobotStateToWarehouse_RequestConstructor {
        new(other?: SaveRobotStateToWarehouse_Request): SaveRobotStateToWarehouse_Request;
      }
      export interface SaveRobotStateToWarehouse_Response {
        success: boolean;
      }
      export interface SaveRobotStateToWarehouse_ResponseConstructor {
        new(other?: SaveRobotStateToWarehouse_Response): SaveRobotStateToWarehouse_Response;
      }
      export interface SetPlannerParamsConstructor extends ROSService {
        readonly Request: SetPlannerParams_RequestConstructor;
        readonly Response: SetPlannerParams_ResponseConstructor;
      }
      export interface SetPlannerParams_Request {
        pipeline_id: string;
        planner_config: string;
        group: string;
        params: moveit_msgs.msg.PlannerParams;
        replace: boolean;
      }
      export interface SetPlannerParams_RequestConstructor {
        new(other?: SetPlannerParams_Request): SetPlannerParams_Request;
      }
      export interface SetPlannerParams_Response {
      }
      export interface SetPlannerParams_ResponseConstructor {
        new(other?: SetPlannerParams_Response): SetPlannerParams_Response;
      }
      export interface UpdatePointcloudOctomapConstructor extends ROSService {
        readonly Request: UpdatePointcloudOctomap_RequestConstructor;
        readonly Response: UpdatePointcloudOctomap_ResponseConstructor;
      }
      export interface UpdatePointcloudOctomap_Request {
        cloud: sensor_msgs.msg.PointCloud2;
      }
      export interface UpdatePointcloudOctomap_RequestConstructor {
        new(other?: UpdatePointcloudOctomap_Request): UpdatePointcloudOctomap_Request;
      }
      export interface UpdatePointcloudOctomap_Response {
        success: boolean;
      }
      export interface UpdatePointcloudOctomap_ResponseConstructor {
        new(other?: UpdatePointcloudOctomap_Response): UpdatePointcloudOctomap_Response;
      }
    }
  }

  namespace nav2_msgs {
    namespace action {
      export interface AssistedTeleopConstructor {
        readonly Goal: AssistedTeleop_GoalConstructor;
        readonly Result: AssistedTeleop_ResultConstructor;
        readonly Feedback: AssistedTeleop_FeedbackConstructor;
      }
      export interface AssistedTeleop_Feedback {
        current_teleop_duration: builtin_interfaces.msg.Duration;
      }
      export interface AssistedTeleop_FeedbackConstructor {
        new(other?: AssistedTeleop_Feedback): AssistedTeleop_Feedback;
      }
      export interface AssistedTeleop_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: nav2_msgs.action.AssistedTeleop_Feedback;
      }
      export interface AssistedTeleop_FeedbackMessageConstructor {
        new(other?: AssistedTeleop_FeedbackMessage): AssistedTeleop_FeedbackMessage;
      }
      export interface AssistedTeleop_GetResultConstructor extends ROSService {
        readonly Request: AssistedTeleop_GetResult_RequestConstructor;
        readonly Response: AssistedTeleop_GetResult_ResponseConstructor;
      }
      export interface AssistedTeleop_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface AssistedTeleop_GetResult_RequestConstructor {
        new(other?: AssistedTeleop_GetResult_Request): AssistedTeleop_GetResult_Request;
      }
      export interface AssistedTeleop_GetResult_Response {
        status: number;
        result: nav2_msgs.action.AssistedTeleop_Result;
      }
      export interface AssistedTeleop_GetResult_ResponseConstructor {
        new(other?: AssistedTeleop_GetResult_Response): AssistedTeleop_GetResult_Response;
      }
      export interface AssistedTeleop_Goal {
        time_allowance: builtin_interfaces.msg.Duration;
      }
      export interface AssistedTeleop_GoalConstructor {
        new(other?: AssistedTeleop_Goal): AssistedTeleop_Goal;
      }
      export interface AssistedTeleop_Result {
        total_elapsed_time: builtin_interfaces.msg.Duration;
      }
      export interface AssistedTeleop_ResultConstructor {
        new(other?: AssistedTeleop_Result): AssistedTeleop_Result;
      }
      export interface AssistedTeleop_SendGoalConstructor extends ROSService {
        readonly Request: AssistedTeleop_SendGoal_RequestConstructor;
        readonly Response: AssistedTeleop_SendGoal_ResponseConstructor;
      }
      export interface AssistedTeleop_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: nav2_msgs.action.AssistedTeleop_Goal;
      }
      export interface AssistedTeleop_SendGoal_RequestConstructor {
        new(other?: AssistedTeleop_SendGoal_Request): AssistedTeleop_SendGoal_Request;
      }
      export interface AssistedTeleop_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface AssistedTeleop_SendGoal_ResponseConstructor {
        new(other?: AssistedTeleop_SendGoal_Response): AssistedTeleop_SendGoal_Response;
      }
      export interface BackUpConstructor {
        readonly Goal: BackUp_GoalConstructor;
        readonly Result: BackUp_ResultConstructor;
        readonly Feedback: BackUp_FeedbackConstructor;
      }
      export interface BackUp_Feedback {
        distance_traveled: number;
      }
      export interface BackUp_FeedbackConstructor {
        new(other?: BackUp_Feedback): BackUp_Feedback;
      }
      export interface BackUp_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: nav2_msgs.action.BackUp_Feedback;
      }
      export interface BackUp_FeedbackMessageConstructor {
        new(other?: BackUp_FeedbackMessage): BackUp_FeedbackMessage;
      }
      export interface BackUp_GetResultConstructor extends ROSService {
        readonly Request: BackUp_GetResult_RequestConstructor;
        readonly Response: BackUp_GetResult_ResponseConstructor;
      }
      export interface BackUp_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface BackUp_GetResult_RequestConstructor {
        new(other?: BackUp_GetResult_Request): BackUp_GetResult_Request;
      }
      export interface BackUp_GetResult_Response {
        status: number;
        result: nav2_msgs.action.BackUp_Result;
      }
      export interface BackUp_GetResult_ResponseConstructor {
        new(other?: BackUp_GetResult_Response): BackUp_GetResult_Response;
      }
      export interface BackUp_Goal {
        target: geometry_msgs.msg.Point;
        speed: number;
        time_allowance: builtin_interfaces.msg.Duration;
      }
      export interface BackUp_GoalConstructor {
        new(other?: BackUp_Goal): BackUp_Goal;
      }
      export interface BackUp_Result {
        total_elapsed_time: builtin_interfaces.msg.Duration;
      }
      export interface BackUp_ResultConstructor {
        new(other?: BackUp_Result): BackUp_Result;
      }
      export interface BackUp_SendGoalConstructor extends ROSService {
        readonly Request: BackUp_SendGoal_RequestConstructor;
        readonly Response: BackUp_SendGoal_ResponseConstructor;
      }
      export interface BackUp_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: nav2_msgs.action.BackUp_Goal;
      }
      export interface BackUp_SendGoal_RequestConstructor {
        new(other?: BackUp_SendGoal_Request): BackUp_SendGoal_Request;
      }
      export interface BackUp_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface BackUp_SendGoal_ResponseConstructor {
        new(other?: BackUp_SendGoal_Response): BackUp_SendGoal_Response;
      }
      export interface ComputePathThroughPosesConstructor {
        readonly Goal: ComputePathThroughPoses_GoalConstructor;
        readonly Result: ComputePathThroughPoses_ResultConstructor;
        readonly Feedback: ComputePathThroughPoses_FeedbackConstructor;
      }
      export interface ComputePathThroughPoses_Feedback {
      }
      export interface ComputePathThroughPoses_FeedbackConstructor {
        new(other?: ComputePathThroughPoses_Feedback): ComputePathThroughPoses_Feedback;
      }
      export interface ComputePathThroughPoses_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: nav2_msgs.action.ComputePathThroughPoses_Feedback;
      }
      export interface ComputePathThroughPoses_FeedbackMessageConstructor {
        new(other?: ComputePathThroughPoses_FeedbackMessage): ComputePathThroughPoses_FeedbackMessage;
      }
      export interface ComputePathThroughPoses_GetResultConstructor extends ROSService {
        readonly Request: ComputePathThroughPoses_GetResult_RequestConstructor;
        readonly Response: ComputePathThroughPoses_GetResult_ResponseConstructor;
      }
      export interface ComputePathThroughPoses_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface ComputePathThroughPoses_GetResult_RequestConstructor {
        new(other?: ComputePathThroughPoses_GetResult_Request): ComputePathThroughPoses_GetResult_Request;
      }
      export interface ComputePathThroughPoses_GetResult_Response {
        status: number;
        result: nav2_msgs.action.ComputePathThroughPoses_Result;
      }
      export interface ComputePathThroughPoses_GetResult_ResponseConstructor {
        new(other?: ComputePathThroughPoses_GetResult_Response): ComputePathThroughPoses_GetResult_Response;
      }
      export interface ComputePathThroughPoses_Goal {
        goals: geometry_msgs.msg.PoseStamped[];
        start: geometry_msgs.msg.PoseStamped;
        planner_id: string;
        use_start: boolean;
      }
      export interface ComputePathThroughPoses_GoalConstructor {
        new(other?: ComputePathThroughPoses_Goal): ComputePathThroughPoses_Goal;
      }
      export interface ComputePathThroughPoses_Result {
        path: nav_msgs.msg.Path;
        planning_time: builtin_interfaces.msg.Duration;
      }
      export interface ComputePathThroughPoses_ResultConstructor {
        new(other?: ComputePathThroughPoses_Result): ComputePathThroughPoses_Result;
      }
      export interface ComputePathThroughPoses_SendGoalConstructor extends ROSService {
        readonly Request: ComputePathThroughPoses_SendGoal_RequestConstructor;
        readonly Response: ComputePathThroughPoses_SendGoal_ResponseConstructor;
      }
      export interface ComputePathThroughPoses_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: nav2_msgs.action.ComputePathThroughPoses_Goal;
      }
      export interface ComputePathThroughPoses_SendGoal_RequestConstructor {
        new(other?: ComputePathThroughPoses_SendGoal_Request): ComputePathThroughPoses_SendGoal_Request;
      }
      export interface ComputePathThroughPoses_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface ComputePathThroughPoses_SendGoal_ResponseConstructor {
        new(other?: ComputePathThroughPoses_SendGoal_Response): ComputePathThroughPoses_SendGoal_Response;
      }
      export interface ComputePathToPoseConstructor {
        readonly Goal: ComputePathToPose_GoalConstructor;
        readonly Result: ComputePathToPose_ResultConstructor;
        readonly Feedback: ComputePathToPose_FeedbackConstructor;
      }
      export interface ComputePathToPose_Feedback {
      }
      export interface ComputePathToPose_FeedbackConstructor {
        new(other?: ComputePathToPose_Feedback): ComputePathToPose_Feedback;
      }
      export interface ComputePathToPose_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: nav2_msgs.action.ComputePathToPose_Feedback;
      }
      export interface ComputePathToPose_FeedbackMessageConstructor {
        new(other?: ComputePathToPose_FeedbackMessage): ComputePathToPose_FeedbackMessage;
      }
      export interface ComputePathToPose_GetResultConstructor extends ROSService {
        readonly Request: ComputePathToPose_GetResult_RequestConstructor;
        readonly Response: ComputePathToPose_GetResult_ResponseConstructor;
      }
      export interface ComputePathToPose_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface ComputePathToPose_GetResult_RequestConstructor {
        new(other?: ComputePathToPose_GetResult_Request): ComputePathToPose_GetResult_Request;
      }
      export interface ComputePathToPose_GetResult_Response {
        status: number;
        result: nav2_msgs.action.ComputePathToPose_Result;
      }
      export interface ComputePathToPose_GetResult_ResponseConstructor {
        new(other?: ComputePathToPose_GetResult_Response): ComputePathToPose_GetResult_Response;
      }
      export interface ComputePathToPose_Goal {
        goal: geometry_msgs.msg.PoseStamped;
        start: geometry_msgs.msg.PoseStamped;
        planner_id: string;
        use_start: boolean;
      }
      export interface ComputePathToPose_GoalConstructor {
        new(other?: ComputePathToPose_Goal): ComputePathToPose_Goal;
      }
      export interface ComputePathToPose_Result {
        path: nav_msgs.msg.Path;
        planning_time: builtin_interfaces.msg.Duration;
      }
      export interface ComputePathToPose_ResultConstructor {
        new(other?: ComputePathToPose_Result): ComputePathToPose_Result;
      }
      export interface ComputePathToPose_SendGoalConstructor extends ROSService {
        readonly Request: ComputePathToPose_SendGoal_RequestConstructor;
        readonly Response: ComputePathToPose_SendGoal_ResponseConstructor;
      }
      export interface ComputePathToPose_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: nav2_msgs.action.ComputePathToPose_Goal;
      }
      export interface ComputePathToPose_SendGoal_RequestConstructor {
        new(other?: ComputePathToPose_SendGoal_Request): ComputePathToPose_SendGoal_Request;
      }
      export interface ComputePathToPose_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface ComputePathToPose_SendGoal_ResponseConstructor {
        new(other?: ComputePathToPose_SendGoal_Response): ComputePathToPose_SendGoal_Response;
      }
      export interface DriveOnHeadingConstructor {
        readonly Goal: DriveOnHeading_GoalConstructor;
        readonly Result: DriveOnHeading_ResultConstructor;
        readonly Feedback: DriveOnHeading_FeedbackConstructor;
      }
      export interface DriveOnHeading_Feedback {
        distance_traveled: number;
      }
      export interface DriveOnHeading_FeedbackConstructor {
        new(other?: DriveOnHeading_Feedback): DriveOnHeading_Feedback;
      }
      export interface DriveOnHeading_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: nav2_msgs.action.DriveOnHeading_Feedback;
      }
      export interface DriveOnHeading_FeedbackMessageConstructor {
        new(other?: DriveOnHeading_FeedbackMessage): DriveOnHeading_FeedbackMessage;
      }
      export interface DriveOnHeading_GetResultConstructor extends ROSService {
        readonly Request: DriveOnHeading_GetResult_RequestConstructor;
        readonly Response: DriveOnHeading_GetResult_ResponseConstructor;
      }
      export interface DriveOnHeading_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface DriveOnHeading_GetResult_RequestConstructor {
        new(other?: DriveOnHeading_GetResult_Request): DriveOnHeading_GetResult_Request;
      }
      export interface DriveOnHeading_GetResult_Response {
        status: number;
        result: nav2_msgs.action.DriveOnHeading_Result;
      }
      export interface DriveOnHeading_GetResult_ResponseConstructor {
        new(other?: DriveOnHeading_GetResult_Response): DriveOnHeading_GetResult_Response;
      }
      export interface DriveOnHeading_Goal {
        target: geometry_msgs.msg.Point;
        speed: number;
        time_allowance: builtin_interfaces.msg.Duration;
      }
      export interface DriveOnHeading_GoalConstructor {
        new(other?: DriveOnHeading_Goal): DriveOnHeading_Goal;
      }
      export interface DriveOnHeading_Result {
        total_elapsed_time: builtin_interfaces.msg.Duration;
      }
      export interface DriveOnHeading_ResultConstructor {
        new(other?: DriveOnHeading_Result): DriveOnHeading_Result;
      }
      export interface DriveOnHeading_SendGoalConstructor extends ROSService {
        readonly Request: DriveOnHeading_SendGoal_RequestConstructor;
        readonly Response: DriveOnHeading_SendGoal_ResponseConstructor;
      }
      export interface DriveOnHeading_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: nav2_msgs.action.DriveOnHeading_Goal;
      }
      export interface DriveOnHeading_SendGoal_RequestConstructor {
        new(other?: DriveOnHeading_SendGoal_Request): DriveOnHeading_SendGoal_Request;
      }
      export interface DriveOnHeading_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface DriveOnHeading_SendGoal_ResponseConstructor {
        new(other?: DriveOnHeading_SendGoal_Response): DriveOnHeading_SendGoal_Response;
      }
      export interface DummyBehaviorConstructor {
        readonly Goal: DummyBehavior_GoalConstructor;
        readonly Result: DummyBehavior_ResultConstructor;
        readonly Feedback: DummyBehavior_FeedbackConstructor;
      }
      export interface DummyBehavior_Feedback {
      }
      export interface DummyBehavior_FeedbackConstructor {
        new(other?: DummyBehavior_Feedback): DummyBehavior_Feedback;
      }
      export interface DummyBehavior_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: nav2_msgs.action.DummyBehavior_Feedback;
      }
      export interface DummyBehavior_FeedbackMessageConstructor {
        new(other?: DummyBehavior_FeedbackMessage): DummyBehavior_FeedbackMessage;
      }
      export interface DummyBehavior_GetResultConstructor extends ROSService {
        readonly Request: DummyBehavior_GetResult_RequestConstructor;
        readonly Response: DummyBehavior_GetResult_ResponseConstructor;
      }
      export interface DummyBehavior_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface DummyBehavior_GetResult_RequestConstructor {
        new(other?: DummyBehavior_GetResult_Request): DummyBehavior_GetResult_Request;
      }
      export interface DummyBehavior_GetResult_Response {
        status: number;
        result: nav2_msgs.action.DummyBehavior_Result;
      }
      export interface DummyBehavior_GetResult_ResponseConstructor {
        new(other?: DummyBehavior_GetResult_Response): DummyBehavior_GetResult_Response;
      }
      export interface DummyBehavior_Goal {
        command: std_msgs.msg.String;
      }
      export interface DummyBehavior_GoalConstructor {
        new(other?: DummyBehavior_Goal): DummyBehavior_Goal;
      }
      export interface DummyBehavior_Result {
        total_elapsed_time: builtin_interfaces.msg.Duration;
      }
      export interface DummyBehavior_ResultConstructor {
        new(other?: DummyBehavior_Result): DummyBehavior_Result;
      }
      export interface DummyBehavior_SendGoalConstructor extends ROSService {
        readonly Request: DummyBehavior_SendGoal_RequestConstructor;
        readonly Response: DummyBehavior_SendGoal_ResponseConstructor;
      }
      export interface DummyBehavior_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: nav2_msgs.action.DummyBehavior_Goal;
      }
      export interface DummyBehavior_SendGoal_RequestConstructor {
        new(other?: DummyBehavior_SendGoal_Request): DummyBehavior_SendGoal_Request;
      }
      export interface DummyBehavior_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface DummyBehavior_SendGoal_ResponseConstructor {
        new(other?: DummyBehavior_SendGoal_Response): DummyBehavior_SendGoal_Response;
      }
      export interface FollowPathConstructor {
        readonly Goal: FollowPath_GoalConstructor;
        readonly Result: FollowPath_ResultConstructor;
        readonly Feedback: FollowPath_FeedbackConstructor;
      }
      export interface FollowPath_Feedback {
        distance_to_goal: number;
        speed: number;
      }
      export interface FollowPath_FeedbackConstructor {
        new(other?: FollowPath_Feedback): FollowPath_Feedback;
      }
      export interface FollowPath_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: nav2_msgs.action.FollowPath_Feedback;
      }
      export interface FollowPath_FeedbackMessageConstructor {
        new(other?: FollowPath_FeedbackMessage): FollowPath_FeedbackMessage;
      }
      export interface FollowPath_GetResultConstructor extends ROSService {
        readonly Request: FollowPath_GetResult_RequestConstructor;
        readonly Response: FollowPath_GetResult_ResponseConstructor;
      }
      export interface FollowPath_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface FollowPath_GetResult_RequestConstructor {
        new(other?: FollowPath_GetResult_Request): FollowPath_GetResult_Request;
      }
      export interface FollowPath_GetResult_Response {
        status: number;
        result: nav2_msgs.action.FollowPath_Result;
      }
      export interface FollowPath_GetResult_ResponseConstructor {
        new(other?: FollowPath_GetResult_Response): FollowPath_GetResult_Response;
      }
      export interface FollowPath_Goal {
        path: nav_msgs.msg.Path;
        controller_id: string;
        goal_checker_id: string;
      }
      export interface FollowPath_GoalConstructor {
        new(other?: FollowPath_Goal): FollowPath_Goal;
      }
      export interface FollowPath_Result {
        result: std_msgs.msg.Empty;
      }
      export interface FollowPath_ResultConstructor {
        new(other?: FollowPath_Result): FollowPath_Result;
      }
      export interface FollowPath_SendGoalConstructor extends ROSService {
        readonly Request: FollowPath_SendGoal_RequestConstructor;
        readonly Response: FollowPath_SendGoal_ResponseConstructor;
      }
      export interface FollowPath_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: nav2_msgs.action.FollowPath_Goal;
      }
      export interface FollowPath_SendGoal_RequestConstructor {
        new(other?: FollowPath_SendGoal_Request): FollowPath_SendGoal_Request;
      }
      export interface FollowPath_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface FollowPath_SendGoal_ResponseConstructor {
        new(other?: FollowPath_SendGoal_Response): FollowPath_SendGoal_Response;
      }
      export interface FollowWaypointsConstructor {
        readonly Goal: FollowWaypoints_GoalConstructor;
        readonly Result: FollowWaypoints_ResultConstructor;
        readonly Feedback: FollowWaypoints_FeedbackConstructor;
      }
      export interface FollowWaypoints_Feedback {
        current_waypoint: number;
      }
      export interface FollowWaypoints_FeedbackConstructor {
        new(other?: FollowWaypoints_Feedback): FollowWaypoints_Feedback;
      }
      export interface FollowWaypoints_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: nav2_msgs.action.FollowWaypoints_Feedback;
      }
      export interface FollowWaypoints_FeedbackMessageConstructor {
        new(other?: FollowWaypoints_FeedbackMessage): FollowWaypoints_FeedbackMessage;
      }
      export interface FollowWaypoints_GetResultConstructor extends ROSService {
        readonly Request: FollowWaypoints_GetResult_RequestConstructor;
        readonly Response: FollowWaypoints_GetResult_ResponseConstructor;
      }
      export interface FollowWaypoints_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface FollowWaypoints_GetResult_RequestConstructor {
        new(other?: FollowWaypoints_GetResult_Request): FollowWaypoints_GetResult_Request;
      }
      export interface FollowWaypoints_GetResult_Response {
        status: number;
        result: nav2_msgs.action.FollowWaypoints_Result;
      }
      export interface FollowWaypoints_GetResult_ResponseConstructor {
        new(other?: FollowWaypoints_GetResult_Response): FollowWaypoints_GetResult_Response;
      }
      export interface FollowWaypoints_Goal {
        poses: geometry_msgs.msg.PoseStamped[];
      }
      export interface FollowWaypoints_GoalConstructor {
        new(other?: FollowWaypoints_Goal): FollowWaypoints_Goal;
      }
      export interface FollowWaypoints_Result {
        missed_waypoints: number[] | Int32Array;
      }
      export interface FollowWaypoints_ResultConstructor {
        new(other?: FollowWaypoints_Result): FollowWaypoints_Result;
      }
      export interface FollowWaypoints_SendGoalConstructor extends ROSService {
        readonly Request: FollowWaypoints_SendGoal_RequestConstructor;
        readonly Response: FollowWaypoints_SendGoal_ResponseConstructor;
      }
      export interface FollowWaypoints_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: nav2_msgs.action.FollowWaypoints_Goal;
      }
      export interface FollowWaypoints_SendGoal_RequestConstructor {
        new(other?: FollowWaypoints_SendGoal_Request): FollowWaypoints_SendGoal_Request;
      }
      export interface FollowWaypoints_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface FollowWaypoints_SendGoal_ResponseConstructor {
        new(other?: FollowWaypoints_SendGoal_Response): FollowWaypoints_SendGoal_Response;
      }
      export interface NavigateThroughPosesConstructor {
        readonly Goal: NavigateThroughPoses_GoalConstructor;
        readonly Result: NavigateThroughPoses_ResultConstructor;
        readonly Feedback: NavigateThroughPoses_FeedbackConstructor;
      }
      export interface NavigateThroughPoses_Feedback {
        current_pose: geometry_msgs.msg.PoseStamped;
        navigation_time: builtin_interfaces.msg.Duration;
        estimated_time_remaining: builtin_interfaces.msg.Duration;
        number_of_recoveries: number;
        distance_remaining: number;
        number_of_poses_remaining: number;
      }
      export interface NavigateThroughPoses_FeedbackConstructor {
        new(other?: NavigateThroughPoses_Feedback): NavigateThroughPoses_Feedback;
      }
      export interface NavigateThroughPoses_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: nav2_msgs.action.NavigateThroughPoses_Feedback;
      }
      export interface NavigateThroughPoses_FeedbackMessageConstructor {
        new(other?: NavigateThroughPoses_FeedbackMessage): NavigateThroughPoses_FeedbackMessage;
      }
      export interface NavigateThroughPoses_GetResultConstructor extends ROSService {
        readonly Request: NavigateThroughPoses_GetResult_RequestConstructor;
        readonly Response: NavigateThroughPoses_GetResult_ResponseConstructor;
      }
      export interface NavigateThroughPoses_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface NavigateThroughPoses_GetResult_RequestConstructor {
        new(other?: NavigateThroughPoses_GetResult_Request): NavigateThroughPoses_GetResult_Request;
      }
      export interface NavigateThroughPoses_GetResult_Response {
        status: number;
        result: nav2_msgs.action.NavigateThroughPoses_Result;
      }
      export interface NavigateThroughPoses_GetResult_ResponseConstructor {
        new(other?: NavigateThroughPoses_GetResult_Response): NavigateThroughPoses_GetResult_Response;
      }
      export interface NavigateThroughPoses_Goal {
        poses: geometry_msgs.msg.PoseStamped[];
        behavior_tree: string;
      }
      export interface NavigateThroughPoses_GoalConstructor {
        new(other?: NavigateThroughPoses_Goal): NavigateThroughPoses_Goal;
      }
      export interface NavigateThroughPoses_Result {
        result: std_msgs.msg.Empty;
      }
      export interface NavigateThroughPoses_ResultConstructor {
        new(other?: NavigateThroughPoses_Result): NavigateThroughPoses_Result;
      }
      export interface NavigateThroughPoses_SendGoalConstructor extends ROSService {
        readonly Request: NavigateThroughPoses_SendGoal_RequestConstructor;
        readonly Response: NavigateThroughPoses_SendGoal_ResponseConstructor;
      }
      export interface NavigateThroughPoses_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: nav2_msgs.action.NavigateThroughPoses_Goal;
      }
      export interface NavigateThroughPoses_SendGoal_RequestConstructor {
        new(other?: NavigateThroughPoses_SendGoal_Request): NavigateThroughPoses_SendGoal_Request;
      }
      export interface NavigateThroughPoses_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface NavigateThroughPoses_SendGoal_ResponseConstructor {
        new(other?: NavigateThroughPoses_SendGoal_Response): NavigateThroughPoses_SendGoal_Response;
      }
      export interface NavigateToPoseConstructor {
        readonly Goal: NavigateToPose_GoalConstructor;
        readonly Result: NavigateToPose_ResultConstructor;
        readonly Feedback: NavigateToPose_FeedbackConstructor;
      }
      export interface NavigateToPose_Feedback {
        current_pose: geometry_msgs.msg.PoseStamped;
        navigation_time: builtin_interfaces.msg.Duration;
        estimated_time_remaining: builtin_interfaces.msg.Duration;
        number_of_recoveries: number;
        distance_remaining: number;
      }
      export interface NavigateToPose_FeedbackConstructor {
        new(other?: NavigateToPose_Feedback): NavigateToPose_Feedback;
      }
      export interface NavigateToPose_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: nav2_msgs.action.NavigateToPose_Feedback;
      }
      export interface NavigateToPose_FeedbackMessageConstructor {
        new(other?: NavigateToPose_FeedbackMessage): NavigateToPose_FeedbackMessage;
      }
      export interface NavigateToPose_GetResultConstructor extends ROSService {
        readonly Request: NavigateToPose_GetResult_RequestConstructor;
        readonly Response: NavigateToPose_GetResult_ResponseConstructor;
      }
      export interface NavigateToPose_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface NavigateToPose_GetResult_RequestConstructor {
        new(other?: NavigateToPose_GetResult_Request): NavigateToPose_GetResult_Request;
      }
      export interface NavigateToPose_GetResult_Response {
        status: number;
        result: nav2_msgs.action.NavigateToPose_Result;
      }
      export interface NavigateToPose_GetResult_ResponseConstructor {
        new(other?: NavigateToPose_GetResult_Response): NavigateToPose_GetResult_Response;
      }
      export interface NavigateToPose_Goal {
        pose: geometry_msgs.msg.PoseStamped;
        behavior_tree: string;
      }
      export interface NavigateToPose_GoalConstructor {
        new(other?: NavigateToPose_Goal): NavigateToPose_Goal;
      }
      export interface NavigateToPose_Result {
        result: std_msgs.msg.Empty;
      }
      export interface NavigateToPose_ResultConstructor {
        new(other?: NavigateToPose_Result): NavigateToPose_Result;
      }
      export interface NavigateToPose_SendGoalConstructor extends ROSService {
        readonly Request: NavigateToPose_SendGoal_RequestConstructor;
        readonly Response: NavigateToPose_SendGoal_ResponseConstructor;
      }
      export interface NavigateToPose_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: nav2_msgs.action.NavigateToPose_Goal;
      }
      export interface NavigateToPose_SendGoal_RequestConstructor {
        new(other?: NavigateToPose_SendGoal_Request): NavigateToPose_SendGoal_Request;
      }
      export interface NavigateToPose_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface NavigateToPose_SendGoal_ResponseConstructor {
        new(other?: NavigateToPose_SendGoal_Response): NavigateToPose_SendGoal_Response;
      }
      export interface SmoothPathConstructor {
        readonly Goal: SmoothPath_GoalConstructor;
        readonly Result: SmoothPath_ResultConstructor;
        readonly Feedback: SmoothPath_FeedbackConstructor;
      }
      export interface SmoothPath_Feedback {
      }
      export interface SmoothPath_FeedbackConstructor {
        new(other?: SmoothPath_Feedback): SmoothPath_Feedback;
      }
      export interface SmoothPath_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: nav2_msgs.action.SmoothPath_Feedback;
      }
      export interface SmoothPath_FeedbackMessageConstructor {
        new(other?: SmoothPath_FeedbackMessage): SmoothPath_FeedbackMessage;
      }
      export interface SmoothPath_GetResultConstructor extends ROSService {
        readonly Request: SmoothPath_GetResult_RequestConstructor;
        readonly Response: SmoothPath_GetResult_ResponseConstructor;
      }
      export interface SmoothPath_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface SmoothPath_GetResult_RequestConstructor {
        new(other?: SmoothPath_GetResult_Request): SmoothPath_GetResult_Request;
      }
      export interface SmoothPath_GetResult_Response {
        status: number;
        result: nav2_msgs.action.SmoothPath_Result;
      }
      export interface SmoothPath_GetResult_ResponseConstructor {
        new(other?: SmoothPath_GetResult_Response): SmoothPath_GetResult_Response;
      }
      export interface SmoothPath_Goal {
        path: nav_msgs.msg.Path;
        smoother_id: string;
        max_smoothing_duration: builtin_interfaces.msg.Duration;
        check_for_collisions: boolean;
      }
      export interface SmoothPath_GoalConstructor {
        new(other?: SmoothPath_Goal): SmoothPath_Goal;
      }
      export interface SmoothPath_Result {
        path: nav_msgs.msg.Path;
        smoothing_duration: builtin_interfaces.msg.Duration;
        was_completed: boolean;
      }
      export interface SmoothPath_ResultConstructor {
        new(other?: SmoothPath_Result): SmoothPath_Result;
      }
      export interface SmoothPath_SendGoalConstructor extends ROSService {
        readonly Request: SmoothPath_SendGoal_RequestConstructor;
        readonly Response: SmoothPath_SendGoal_ResponseConstructor;
      }
      export interface SmoothPath_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: nav2_msgs.action.SmoothPath_Goal;
      }
      export interface SmoothPath_SendGoal_RequestConstructor {
        new(other?: SmoothPath_SendGoal_Request): SmoothPath_SendGoal_Request;
      }
      export interface SmoothPath_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface SmoothPath_SendGoal_ResponseConstructor {
        new(other?: SmoothPath_SendGoal_Response): SmoothPath_SendGoal_Response;
      }
      export interface SpinConstructor {
        readonly Goal: Spin_GoalConstructor;
        readonly Result: Spin_ResultConstructor;
        readonly Feedback: Spin_FeedbackConstructor;
      }
      export interface Spin_Feedback {
        angular_distance_traveled: number;
      }
      export interface Spin_FeedbackConstructor {
        new(other?: Spin_Feedback): Spin_Feedback;
      }
      export interface Spin_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: nav2_msgs.action.Spin_Feedback;
      }
      export interface Spin_FeedbackMessageConstructor {
        new(other?: Spin_FeedbackMessage): Spin_FeedbackMessage;
      }
      export interface Spin_GetResultConstructor extends ROSService {
        readonly Request: Spin_GetResult_RequestConstructor;
        readonly Response: Spin_GetResult_ResponseConstructor;
      }
      export interface Spin_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface Spin_GetResult_RequestConstructor {
        new(other?: Spin_GetResult_Request): Spin_GetResult_Request;
      }
      export interface Spin_GetResult_Response {
        status: number;
        result: nav2_msgs.action.Spin_Result;
      }
      export interface Spin_GetResult_ResponseConstructor {
        new(other?: Spin_GetResult_Response): Spin_GetResult_Response;
      }
      export interface Spin_Goal {
        target_yaw: number;
        time_allowance: builtin_interfaces.msg.Duration;
      }
      export interface Spin_GoalConstructor {
        new(other?: Spin_Goal): Spin_Goal;
      }
      export interface Spin_Result {
        total_elapsed_time: builtin_interfaces.msg.Duration;
      }
      export interface Spin_ResultConstructor {
        new(other?: Spin_Result): Spin_Result;
      }
      export interface Spin_SendGoalConstructor extends ROSService {
        readonly Request: Spin_SendGoal_RequestConstructor;
        readonly Response: Spin_SendGoal_ResponseConstructor;
      }
      export interface Spin_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: nav2_msgs.action.Spin_Goal;
      }
      export interface Spin_SendGoal_RequestConstructor {
        new(other?: Spin_SendGoal_Request): Spin_SendGoal_Request;
      }
      export interface Spin_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface Spin_SendGoal_ResponseConstructor {
        new(other?: Spin_SendGoal_Response): Spin_SendGoal_Response;
      }
      export interface WaitConstructor {
        readonly Goal: Wait_GoalConstructor;
        readonly Result: Wait_ResultConstructor;
        readonly Feedback: Wait_FeedbackConstructor;
      }
      export interface Wait_Feedback {
        time_left: builtin_interfaces.msg.Duration;
      }
      export interface Wait_FeedbackConstructor {
        new(other?: Wait_Feedback): Wait_Feedback;
      }
      export interface Wait_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: nav2_msgs.action.Wait_Feedback;
      }
      export interface Wait_FeedbackMessageConstructor {
        new(other?: Wait_FeedbackMessage): Wait_FeedbackMessage;
      }
      export interface Wait_GetResultConstructor extends ROSService {
        readonly Request: Wait_GetResult_RequestConstructor;
        readonly Response: Wait_GetResult_ResponseConstructor;
      }
      export interface Wait_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface Wait_GetResult_RequestConstructor {
        new(other?: Wait_GetResult_Request): Wait_GetResult_Request;
      }
      export interface Wait_GetResult_Response {
        status: number;
        result: nav2_msgs.action.Wait_Result;
      }
      export interface Wait_GetResult_ResponseConstructor {
        new(other?: Wait_GetResult_Response): Wait_GetResult_Response;
      }
      export interface Wait_Goal {
        time: builtin_interfaces.msg.Duration;
      }
      export interface Wait_GoalConstructor {
        new(other?: Wait_Goal): Wait_Goal;
      }
      export interface Wait_Result {
        total_elapsed_time: builtin_interfaces.msg.Duration;
      }
      export interface Wait_ResultConstructor {
        new(other?: Wait_Result): Wait_Result;
      }
      export interface Wait_SendGoalConstructor extends ROSService {
        readonly Request: Wait_SendGoal_RequestConstructor;
        readonly Response: Wait_SendGoal_ResponseConstructor;
      }
      export interface Wait_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: nav2_msgs.action.Wait_Goal;
      }
      export interface Wait_SendGoal_RequestConstructor {
        new(other?: Wait_SendGoal_Request): Wait_SendGoal_Request;
      }
      export interface Wait_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface Wait_SendGoal_ResponseConstructor {
        new(other?: Wait_SendGoal_Response): Wait_SendGoal_Response;
      }
    }
    namespace msg {
      export interface BehaviorTreeLog {
        timestamp: builtin_interfaces.msg.Time;
        event_log: nav2_msgs.msg.BehaviorTreeStatusChange[];
      }
      export interface BehaviorTreeLogConstructor {
        new(other?: BehaviorTreeLog): BehaviorTreeLog;
      }
      export interface BehaviorTreeStatusChange {
        timestamp: builtin_interfaces.msg.Time;
        node_name: string;
        previous_status: string;
        current_status: string;
      }
      export interface BehaviorTreeStatusChangeConstructor {
        new(other?: BehaviorTreeStatusChange): BehaviorTreeStatusChange;
      }
      export interface Costmap {
        header: std_msgs.msg.Header;
        metadata: nav2_msgs.msg.CostmapMetaData;
        data: number[] | Uint8Array;
      }
      export interface CostmapConstructor {
        new(other?: Costmap): Costmap;
      }
      export interface CostmapFilterInfo {
        header: std_msgs.msg.Header;
        type: number;
        filter_mask_topic: string;
        base: number;
        multiplier: number;
      }
      export interface CostmapFilterInfoConstructor {
        new(other?: CostmapFilterInfo): CostmapFilterInfo;
      }
      export interface CostmapMetaData {
        map_load_time: builtin_interfaces.msg.Time;
        update_time: builtin_interfaces.msg.Time;
        layer: string;
        resolution: number;
        size_x: number;
        size_y: number;
        origin: geometry_msgs.msg.Pose;
      }
      export interface CostmapMetaDataConstructor {
        new(other?: CostmapMetaData): CostmapMetaData;
      }
      export interface Particle {
        pose: geometry_msgs.msg.Pose;
        weight: number;
      }
      export interface ParticleConstructor {
        new(other?: Particle): Particle;
      }
      export interface ParticleCloud {
        header: std_msgs.msg.Header;
        particles: nav2_msgs.msg.Particle[];
      }
      export interface ParticleCloudConstructor {
        new(other?: ParticleCloud): ParticleCloud;
      }
      export interface SpeedLimit {
        header: std_msgs.msg.Header;
        percentage: boolean;
        speed_limit: number;
      }
      export interface SpeedLimitConstructor {
        new(other?: SpeedLimit): SpeedLimit;
      }
      export interface VoxelGrid {
        header: std_msgs.msg.Header;
        data: number[] | Uint32Array;
        origin: geometry_msgs.msg.Point32;
        resolutions: geometry_msgs.msg.Vector3;
        size_x: number;
        size_y: number;
        size_z: number;
      }
      export interface VoxelGridConstructor {
        new(other?: VoxelGrid): VoxelGrid;
      }
    }
    namespace srv {
      export interface ClearCostmapAroundRobotConstructor extends ROSService {
        readonly Request: ClearCostmapAroundRobot_RequestConstructor;
        readonly Response: ClearCostmapAroundRobot_ResponseConstructor;
      }
      export interface ClearCostmapAroundRobot_Request {
        reset_distance: number;
      }
      export interface ClearCostmapAroundRobot_RequestConstructor {
        new(other?: ClearCostmapAroundRobot_Request): ClearCostmapAroundRobot_Request;
      }
      export interface ClearCostmapAroundRobot_Response {
        response: std_msgs.msg.Empty;
      }
      export interface ClearCostmapAroundRobot_ResponseConstructor {
        new(other?: ClearCostmapAroundRobot_Response): ClearCostmapAroundRobot_Response;
      }
      export interface ClearCostmapExceptRegionConstructor extends ROSService {
        readonly Request: ClearCostmapExceptRegion_RequestConstructor;
        readonly Response: ClearCostmapExceptRegion_ResponseConstructor;
      }
      export interface ClearCostmapExceptRegion_Request {
        reset_distance: number;
      }
      export interface ClearCostmapExceptRegion_RequestConstructor {
        new(other?: ClearCostmapExceptRegion_Request): ClearCostmapExceptRegion_Request;
      }
      export interface ClearCostmapExceptRegion_Response {
        response: std_msgs.msg.Empty;
      }
      export interface ClearCostmapExceptRegion_ResponseConstructor {
        new(other?: ClearCostmapExceptRegion_Response): ClearCostmapExceptRegion_Response;
      }
      export interface ClearEntireCostmapConstructor extends ROSService {
        readonly Request: ClearEntireCostmap_RequestConstructor;
        readonly Response: ClearEntireCostmap_ResponseConstructor;
      }
      export interface ClearEntireCostmap_Request {
        request: std_msgs.msg.Empty;
      }
      export interface ClearEntireCostmap_RequestConstructor {
        new(other?: ClearEntireCostmap_Request): ClearEntireCostmap_Request;
      }
      export interface ClearEntireCostmap_Response {
        response: std_msgs.msg.Empty;
      }
      export interface ClearEntireCostmap_ResponseConstructor {
        new(other?: ClearEntireCostmap_Response): ClearEntireCostmap_Response;
      }
      export interface GetCostmapConstructor extends ROSService {
        readonly Request: GetCostmap_RequestConstructor;
        readonly Response: GetCostmap_ResponseConstructor;
      }
      export interface GetCostmap_Request {
        specs: nav2_msgs.msg.CostmapMetaData;
      }
      export interface GetCostmap_RequestConstructor {
        new(other?: GetCostmap_Request): GetCostmap_Request;
      }
      export interface GetCostmap_Response {
        map: nav2_msgs.msg.Costmap;
      }
      export interface GetCostmap_ResponseConstructor {
        new(other?: GetCostmap_Response): GetCostmap_Response;
      }
      export interface IsPathValidConstructor extends ROSService {
        readonly Request: IsPathValid_RequestConstructor;
        readonly Response: IsPathValid_ResponseConstructor;
      }
      export interface IsPathValid_Request {
        path: nav_msgs.msg.Path;
      }
      export interface IsPathValid_RequestConstructor {
        new(other?: IsPathValid_Request): IsPathValid_Request;
      }
      export interface IsPathValid_Response {
        is_valid: boolean;
        invalid_pose_indices: number[] | Int32Array;
      }
      export interface IsPathValid_ResponseConstructor {
        new(other?: IsPathValid_Response): IsPathValid_Response;
      }
      export interface LoadMapConstructor extends ROSService {
        readonly Request: LoadMap_RequestConstructor;
        readonly Response: LoadMap_ResponseConstructor;
      }
      export interface LoadMap_Request {
        map_url: string;
      }
      export interface LoadMap_RequestConstructor {
        new(other?: LoadMap_Request): LoadMap_Request;
      }
      export interface LoadMap_Response {
        map: nav_msgs.msg.OccupancyGrid;
        result: number;
      }
      export interface LoadMap_ResponseConstructor {
        readonly RESULT_SUCCESS: number;
        readonly RESULT_MAP_DOES_NOT_EXIST: number;
        readonly RESULT_INVALID_MAP_DATA: number;
        readonly RESULT_INVALID_MAP_METADATA: number;
        readonly RESULT_UNDEFINED_FAILURE: number;
        new(other?: LoadMap_Response): LoadMap_Response;
      }
      export interface ManageLifecycleNodesConstructor extends ROSService {
        readonly Request: ManageLifecycleNodes_RequestConstructor;
        readonly Response: ManageLifecycleNodes_ResponseConstructor;
      }
      export interface ManageLifecycleNodes_Request {
        command: number;
      }
      export interface ManageLifecycleNodes_RequestConstructor {
        readonly STARTUP: number;
        readonly PAUSE: number;
        readonly RESUME: number;
        readonly RESET: number;
        readonly SHUTDOWN: number;
        new(other?: ManageLifecycleNodes_Request): ManageLifecycleNodes_Request;
      }
      export interface ManageLifecycleNodes_Response {
        success: boolean;
      }
      export interface ManageLifecycleNodes_ResponseConstructor {
        new(other?: ManageLifecycleNodes_Response): ManageLifecycleNodes_Response;
      }
      export interface SaveMapConstructor extends ROSService {
        readonly Request: SaveMap_RequestConstructor;
        readonly Response: SaveMap_ResponseConstructor;
      }
      export interface SaveMap_Request {
        map_topic: string;
        map_url: string;
        image_format: string;
        map_mode: string;
        free_thresh: number;
        occupied_thresh: number;
      }
      export interface SaveMap_RequestConstructor {
        new(other?: SaveMap_Request): SaveMap_Request;
      }
      export interface SaveMap_Response {
        result: boolean;
      }
      export interface SaveMap_ResponseConstructor {
        new(other?: SaveMap_Response): SaveMap_Response;
      }
      export interface SetInitialPoseConstructor extends ROSService {
        readonly Request: SetInitialPose_RequestConstructor;
        readonly Response: SetInitialPose_ResponseConstructor;
      }
      export interface SetInitialPose_Request {
        pose: geometry_msgs.msg.PoseWithCovarianceStamped;
      }
      export interface SetInitialPose_RequestConstructor {
        new(other?: SetInitialPose_Request): SetInitialPose_Request;
      }
      export interface SetInitialPose_Response {
      }
      export interface SetInitialPose_ResponseConstructor {
        new(other?: SetInitialPose_Response): SetInitialPose_Response;
      }
    }
  }

  namespace nav_2d_msgs {
    namespace msg {
      export interface Path2D {
        header: std_msgs.msg.Header;
        poses: geometry_msgs.msg.Pose2D[];
      }
      export interface Path2DConstructor {
        new(other?: Path2D): Path2D;
      }
      export interface Pose2D32 {
        x: number;
        y: number;
        theta: number;
      }
      export interface Pose2D32Constructor {
        new(other?: Pose2D32): Pose2D32;
      }
      export interface Pose2DStamped {
        header: std_msgs.msg.Header;
        pose: geometry_msgs.msg.Pose2D;
      }
      export interface Pose2DStampedConstructor {
        new(other?: Pose2DStamped): Pose2DStamped;
      }
      export interface Twist2D {
        x: number;
        y: number;
        theta: number;
      }
      export interface Twist2DConstructor {
        new(other?: Twist2D): Twist2D;
      }
      export interface Twist2D32 {
        x: number;
        y: number;
        theta: number;
      }
      export interface Twist2D32Constructor {
        new(other?: Twist2D32): Twist2D32;
      }
      export interface Twist2DStamped {
        header: std_msgs.msg.Header;
        velocity: nav_2d_msgs.msg.Twist2D;
      }
      export interface Twist2DStampedConstructor {
        new(other?: Twist2DStamped): Twist2DStamped;
      }
    }
  }

  namespace nav_msgs {
    namespace msg {
      export interface GridCells {
        header: std_msgs.msg.Header;
        cell_width: number;
        cell_height: number;
        cells: geometry_msgs.msg.Point[];
      }
      export interface GridCellsConstructor {
        new(other?: GridCells): GridCells;
      }
      export interface MapMetaData {
        map_load_time: builtin_interfaces.msg.Time;
        resolution: number;
        width: number;
        height: number;
        origin: geometry_msgs.msg.Pose;
      }
      export interface MapMetaDataConstructor {
        new(other?: MapMetaData): MapMetaData;
      }
      export interface OccupancyGrid {
        header: std_msgs.msg.Header;
        info: nav_msgs.msg.MapMetaData;
        data: number[] | Int8Array;
      }
      export interface OccupancyGridConstructor {
        new(other?: OccupancyGrid): OccupancyGrid;
      }
      export interface Odometry {
        header: std_msgs.msg.Header;
        child_frame_id: string;
        pose: geometry_msgs.msg.PoseWithCovariance;
        twist: geometry_msgs.msg.TwistWithCovariance;
      }
      export interface OdometryConstructor {
        new(other?: Odometry): Odometry;
      }
      export interface Path {
        header: std_msgs.msg.Header;
        poses: geometry_msgs.msg.PoseStamped[];
      }
      export interface PathConstructor {
        new(other?: Path): Path;
      }
    }
    namespace srv {
      export interface GetMapConstructor extends ROSService {
        readonly Request: GetMap_RequestConstructor;
        readonly Response: GetMap_ResponseConstructor;
      }
      export interface GetMap_Request {
      }
      export interface GetMap_RequestConstructor {
        new(other?: GetMap_Request): GetMap_Request;
      }
      export interface GetMap_Response {
        map: nav_msgs.msg.OccupancyGrid;
      }
      export interface GetMap_ResponseConstructor {
        new(other?: GetMap_Response): GetMap_Response;
      }
      export interface GetPlanConstructor extends ROSService {
        readonly Request: GetPlan_RequestConstructor;
        readonly Response: GetPlan_ResponseConstructor;
      }
      export interface GetPlan_Request {
        start: geometry_msgs.msg.PoseStamped;
        goal: geometry_msgs.msg.PoseStamped;
        tolerance: number;
      }
      export interface GetPlan_RequestConstructor {
        new(other?: GetPlan_Request): GetPlan_Request;
      }
      export interface GetPlan_Response {
        plan: nav_msgs.msg.Path;
      }
      export interface GetPlan_ResponseConstructor {
        new(other?: GetPlan_Response): GetPlan_Response;
      }
      export interface LoadMapConstructor extends ROSService {
        readonly Request: LoadMap_RequestConstructor;
        readonly Response: LoadMap_ResponseConstructor;
      }
      export interface LoadMap_Request {
        map_url: string;
      }
      export interface LoadMap_RequestConstructor {
        new(other?: LoadMap_Request): LoadMap_Request;
      }
      export interface LoadMap_Response {
        map: nav_msgs.msg.OccupancyGrid;
        result: number;
      }
      export interface LoadMap_ResponseConstructor {
        readonly RESULT_SUCCESS: number;
        readonly RESULT_MAP_DOES_NOT_EXIST: number;
        readonly RESULT_INVALID_MAP_DATA: number;
        readonly RESULT_INVALID_MAP_METADATA: number;
        readonly RESULT_UNDEFINED_FAILURE: number;
        new(other?: LoadMap_Response): LoadMap_Response;
      }
      export interface SetMapConstructor extends ROSService {
        readonly Request: SetMap_RequestConstructor;
        readonly Response: SetMap_ResponseConstructor;
      }
      export interface SetMap_Request {
        map: nav_msgs.msg.OccupancyGrid;
        initial_pose: geometry_msgs.msg.PoseWithCovarianceStamped;
      }
      export interface SetMap_RequestConstructor {
        new(other?: SetMap_Request): SetMap_Request;
      }
      export interface SetMap_Response {
        success: boolean;
      }
      export interface SetMap_ResponseConstructor {
        new(other?: SetMap_Response): SetMap_Response;
      }
    }
  }

  namespace object_recognition_msgs {
    namespace action {
      export interface ObjectRecognitionConstructor {
        readonly Goal: ObjectRecognition_GoalConstructor;
        readonly Result: ObjectRecognition_ResultConstructor;
        readonly Feedback: ObjectRecognition_FeedbackConstructor;
      }
      export interface ObjectRecognition_Feedback {
      }
      export interface ObjectRecognition_FeedbackConstructor {
        new(other?: ObjectRecognition_Feedback): ObjectRecognition_Feedback;
      }
      export interface ObjectRecognition_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: object_recognition_msgs.action.ObjectRecognition_Feedback;
      }
      export interface ObjectRecognition_FeedbackMessageConstructor {
        new(other?: ObjectRecognition_FeedbackMessage): ObjectRecognition_FeedbackMessage;
      }
      export interface ObjectRecognition_GetResultConstructor extends ROSService {
        readonly Request: ObjectRecognition_GetResult_RequestConstructor;
        readonly Response: ObjectRecognition_GetResult_ResponseConstructor;
      }
      export interface ObjectRecognition_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface ObjectRecognition_GetResult_RequestConstructor {
        new(other?: ObjectRecognition_GetResult_Request): ObjectRecognition_GetResult_Request;
      }
      export interface ObjectRecognition_GetResult_Response {
        status: number;
        result: object_recognition_msgs.action.ObjectRecognition_Result;
      }
      export interface ObjectRecognition_GetResult_ResponseConstructor {
        new(other?: ObjectRecognition_GetResult_Response): ObjectRecognition_GetResult_Response;
      }
      export interface ObjectRecognition_Goal {
        use_roi: boolean;
        filter_limits: number[] | Float32Array;
      }
      export interface ObjectRecognition_GoalConstructor {
        new(other?: ObjectRecognition_Goal): ObjectRecognition_Goal;
      }
      export interface ObjectRecognition_Result {
        recognized_objects: object_recognition_msgs.msg.RecognizedObjectArray;
      }
      export interface ObjectRecognition_ResultConstructor {
        new(other?: ObjectRecognition_Result): ObjectRecognition_Result;
      }
      export interface ObjectRecognition_SendGoalConstructor extends ROSService {
        readonly Request: ObjectRecognition_SendGoal_RequestConstructor;
        readonly Response: ObjectRecognition_SendGoal_ResponseConstructor;
      }
      export interface ObjectRecognition_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: object_recognition_msgs.action.ObjectRecognition_Goal;
      }
      export interface ObjectRecognition_SendGoal_RequestConstructor {
        new(other?: ObjectRecognition_SendGoal_Request): ObjectRecognition_SendGoal_Request;
      }
      export interface ObjectRecognition_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface ObjectRecognition_SendGoal_ResponseConstructor {
        new(other?: ObjectRecognition_SendGoal_Response): ObjectRecognition_SendGoal_Response;
      }
    }
    namespace msg {
      export interface ObjectInformation {
        name: string;
        ground_truth_mesh: shape_msgs.msg.Mesh;
        ground_truth_point_cloud: sensor_msgs.msg.PointCloud2;
      }
      export interface ObjectInformationConstructor {
        new(other?: ObjectInformation): ObjectInformation;
      }
      export interface ObjectType {
        key: string;
        db: string;
      }
      export interface ObjectTypeConstructor {
        new(other?: ObjectType): ObjectType;
      }
      export interface RecognizedObject {
        header: std_msgs.msg.Header;
        type: object_recognition_msgs.msg.ObjectType;
        confidence: number;
        point_clouds: sensor_msgs.msg.PointCloud2[];
        bounding_mesh: shape_msgs.msg.Mesh;
        bounding_contours: geometry_msgs.msg.Point[];
        pose: geometry_msgs.msg.PoseWithCovarianceStamped;
      }
      export interface RecognizedObjectConstructor {
        new(other?: RecognizedObject): RecognizedObject;
      }
      export interface RecognizedObjectArray {
        header: std_msgs.msg.Header;
        objects: object_recognition_msgs.msg.RecognizedObject[];
        cooccurrence: number[] | Float32Array;
      }
      export interface RecognizedObjectArrayConstructor {
        new(other?: RecognizedObjectArray): RecognizedObjectArray;
      }
      export interface Table {
        header: std_msgs.msg.Header;
        pose: geometry_msgs.msg.Pose;
        convex_hull: geometry_msgs.msg.Point[];
      }
      export interface TableConstructor {
        new(other?: Table): Table;
      }
      export interface TableArray {
        header: std_msgs.msg.Header;
        tables: object_recognition_msgs.msg.Table[];
      }
      export interface TableArrayConstructor {
        new(other?: TableArray): TableArray;
      }
    }
    namespace srv {
      export interface GetObjectInformationConstructor extends ROSService {
        readonly Request: GetObjectInformation_RequestConstructor;
        readonly Response: GetObjectInformation_ResponseConstructor;
      }
      export interface GetObjectInformation_Request {
        type: object_recognition_msgs.msg.ObjectType;
      }
      export interface GetObjectInformation_RequestConstructor {
        new(other?: GetObjectInformation_Request): GetObjectInformation_Request;
      }
      export interface GetObjectInformation_Response {
        information: object_recognition_msgs.msg.ObjectInformation;
      }
      export interface GetObjectInformation_ResponseConstructor {
        new(other?: GetObjectInformation_Response): GetObjectInformation_Response;
      }
    }
  }

  namespace octomap_msgs {
    namespace msg {
      export interface Octomap {
        header: std_msgs.msg.Header;
        binary: boolean;
        id: string;
        resolution: number;
        data: number[] | Int8Array;
      }
      export interface OctomapConstructor {
        new(other?: Octomap): Octomap;
      }
      export interface OctomapWithPose {
        header: std_msgs.msg.Header;
        origin: geometry_msgs.msg.Pose;
        octomap: octomap_msgs.msg.Octomap;
      }
      export interface OctomapWithPoseConstructor {
        new(other?: OctomapWithPose): OctomapWithPose;
      }
    }
    namespace srv {
      export interface BoundingBoxQueryConstructor extends ROSService {
        readonly Request: BoundingBoxQuery_RequestConstructor;
        readonly Response: BoundingBoxQuery_ResponseConstructor;
      }
      export interface BoundingBoxQuery_Request {
        min: geometry_msgs.msg.Point;
        max: geometry_msgs.msg.Point;
      }
      export interface BoundingBoxQuery_RequestConstructor {
        new(other?: BoundingBoxQuery_Request): BoundingBoxQuery_Request;
      }
      export interface BoundingBoxQuery_Response {
      }
      export interface BoundingBoxQuery_ResponseConstructor {
        new(other?: BoundingBoxQuery_Response): BoundingBoxQuery_Response;
      }
      export interface GetOctomapConstructor extends ROSService {
        readonly Request: GetOctomap_RequestConstructor;
        readonly Response: GetOctomap_ResponseConstructor;
      }
      export interface GetOctomap_Request {
      }
      export interface GetOctomap_RequestConstructor {
        new(other?: GetOctomap_Request): GetOctomap_Request;
      }
      export interface GetOctomap_Response {
        map: octomap_msgs.msg.Octomap;
      }
      export interface GetOctomap_ResponseConstructor {
        new(other?: GetOctomap_Response): GetOctomap_Response;
      }
    }
  }

  namespace pcl_msgs {
    namespace msg {
      export interface ModelCoefficients {
        header: std_msgs.msg.Header;
        values: number[] | Float32Array;
      }
      export interface ModelCoefficientsConstructor {
        new(other?: ModelCoefficients): ModelCoefficients;
      }
      export interface PointIndices {
        header: std_msgs.msg.Header;
        indices: number[] | Int32Array;
      }
      export interface PointIndicesConstructor {
        new(other?: PointIndices): PointIndices;
      }
      export interface PolygonMesh {
        header: std_msgs.msg.Header;
        cloud: sensor_msgs.msg.PointCloud2;
        polygons: pcl_msgs.msg.Vertices[];
      }
      export interface PolygonMeshConstructor {
        new(other?: PolygonMesh): PolygonMesh;
      }
      export interface Vertices {
        vertices: number[] | Uint32Array;
      }
      export interface VerticesConstructor {
        new(other?: Vertices): Vertices;
      }
    }
    namespace srv {
      export interface UpdateFilenameConstructor extends ROSService {
        readonly Request: UpdateFilename_RequestConstructor;
        readonly Response: UpdateFilename_ResponseConstructor;
      }
      export interface UpdateFilename_Request {
        filename: string;
      }
      export interface UpdateFilename_RequestConstructor {
        new(other?: UpdateFilename_Request): UpdateFilename_Request;
      }
      export interface UpdateFilename_Response {
        success: boolean;
      }
      export interface UpdateFilename_ResponseConstructor {
        new(other?: UpdateFilename_Response): UpdateFilename_Response;
      }
    }
  }

  namespace rcl_interfaces {
    namespace msg {
      export interface FloatingPointRange {
        from_value: number;
        to_value: number;
        step: number;
      }
      export interface FloatingPointRangeConstructor {
        new(other?: FloatingPointRange): FloatingPointRange;
      }
      export interface IntegerRange {
        from_value: number;
        to_value: number;
        step: number;
      }
      export interface IntegerRangeConstructor {
        new(other?: IntegerRange): IntegerRange;
      }
      export interface ListParametersResult {
        names: string[];
        prefixes: string[];
      }
      export interface ListParametersResultConstructor {
        new(other?: ListParametersResult): ListParametersResult;
      }
      export interface Log {
        stamp: builtin_interfaces.msg.Time;
        level: number;
        name: string;
        msg: string;
        file: string;
        function: string;
        line: number;
      }
      export interface LogConstructor {
        readonly DEBUG: number;
        readonly INFO: number;
        readonly WARN: number;
        readonly ERROR: number;
        readonly FATAL: number;
        new(other?: Log): Log;
      }
      export interface Parameter {
        name: string;
        value: rcl_interfaces.msg.ParameterValue;
      }
      export interface ParameterConstructor {
        new(other?: Parameter): Parameter;
      }
      export interface ParameterDescriptor {
        name: string;
        type: number;
        description: string;
        additional_constraints: string;
        read_only: boolean;
        dynamic_typing: boolean;
        floating_point_range: rcl_interfaces.msg.FloatingPointRange[];
        integer_range: rcl_interfaces.msg.IntegerRange[];
      }
      export interface ParameterDescriptorConstructor {
        new(other?: ParameterDescriptor): ParameterDescriptor;
      }
      export interface ParameterEvent {
        stamp: builtin_interfaces.msg.Time;
        node: string;
        new_parameters: rcl_interfaces.msg.Parameter[];
        changed_parameters: rcl_interfaces.msg.Parameter[];
        deleted_parameters: rcl_interfaces.msg.Parameter[];
      }
      export interface ParameterEventConstructor {
        new(other?: ParameterEvent): ParameterEvent;
      }
      export interface ParameterEventDescriptors {
        new_parameters: rcl_interfaces.msg.ParameterDescriptor[];
        changed_parameters: rcl_interfaces.msg.ParameterDescriptor[];
        deleted_parameters: rcl_interfaces.msg.ParameterDescriptor[];
      }
      export interface ParameterEventDescriptorsConstructor {
        new(other?: ParameterEventDescriptors): ParameterEventDescriptors;
      }
      export interface ParameterType {
      }
      export interface ParameterTypeConstructor {
        readonly PARAMETER_NOT_SET: number;
        readonly PARAMETER_BOOL: number;
        readonly PARAMETER_INTEGER: number;
        readonly PARAMETER_DOUBLE: number;
        readonly PARAMETER_STRING: number;
        readonly PARAMETER_BYTE_ARRAY: number;
        readonly PARAMETER_BOOL_ARRAY: number;
        readonly PARAMETER_INTEGER_ARRAY: number;
        readonly PARAMETER_DOUBLE_ARRAY: number;
        readonly PARAMETER_STRING_ARRAY: number;
        new(other?: ParameterType): ParameterType;
      }
      export interface ParameterValue {
        type: number;
        bool_value: boolean;
        integer_value: number;
        double_value: number;
        string_value: string;
        byte_array_value: number[] | Uint8Array;
        bool_array_value: boolean[];
        integer_array_value: number[];
        double_array_value: number[] | Float64Array;
        string_array_value: string[];
      }
      export interface ParameterValueConstructor {
        new(other?: ParameterValue): ParameterValue;
      }
      export interface SetParametersResult {
        successful: boolean;
        reason: string;
      }
      export interface SetParametersResultConstructor {
        new(other?: SetParametersResult): SetParametersResult;
      }
    }
    namespace srv {
      export interface DescribeParametersConstructor extends ROSService {
        readonly Request: DescribeParameters_RequestConstructor;
        readonly Response: DescribeParameters_ResponseConstructor;
      }
      export interface DescribeParameters_Request {
        names: string[];
      }
      export interface DescribeParameters_RequestConstructor {
        new(other?: DescribeParameters_Request): DescribeParameters_Request;
      }
      export interface DescribeParameters_Response {
        descriptors: rcl_interfaces.msg.ParameterDescriptor[];
      }
      export interface DescribeParameters_ResponseConstructor {
        new(other?: DescribeParameters_Response): DescribeParameters_Response;
      }
      export interface GetParameterTypesConstructor extends ROSService {
        readonly Request: GetParameterTypes_RequestConstructor;
        readonly Response: GetParameterTypes_ResponseConstructor;
      }
      export interface GetParameterTypes_Request {
        names: string[];
      }
      export interface GetParameterTypes_RequestConstructor {
        new(other?: GetParameterTypes_Request): GetParameterTypes_Request;
      }
      export interface GetParameterTypes_Response {
        types: number[] | Uint8Array;
      }
      export interface GetParameterTypes_ResponseConstructor {
        new(other?: GetParameterTypes_Response): GetParameterTypes_Response;
      }
      export interface GetParametersConstructor extends ROSService {
        readonly Request: GetParameters_RequestConstructor;
        readonly Response: GetParameters_ResponseConstructor;
      }
      export interface GetParameters_Request {
        names: string[];
      }
      export interface GetParameters_RequestConstructor {
        new(other?: GetParameters_Request): GetParameters_Request;
      }
      export interface GetParameters_Response {
        values: rcl_interfaces.msg.ParameterValue[];
      }
      export interface GetParameters_ResponseConstructor {
        new(other?: GetParameters_Response): GetParameters_Response;
      }
      export interface ListParametersConstructor extends ROSService {
        readonly Request: ListParameters_RequestConstructor;
        readonly Response: ListParameters_ResponseConstructor;
      }
      export interface ListParameters_Request {
        prefixes: string[];
        depth: number;
      }
      export interface ListParameters_RequestConstructor {
        readonly DEPTH_RECURSIVE: number;
        new(other?: ListParameters_Request): ListParameters_Request;
      }
      export interface ListParameters_Response {
        result: rcl_interfaces.msg.ListParametersResult;
      }
      export interface ListParameters_ResponseConstructor {
        new(other?: ListParameters_Response): ListParameters_Response;
      }
      export interface SetParametersConstructor extends ROSService {
        readonly Request: SetParameters_RequestConstructor;
        readonly Response: SetParameters_ResponseConstructor;
      }
      export interface SetParametersAtomicallyConstructor extends ROSService {
        readonly Request: SetParametersAtomically_RequestConstructor;
        readonly Response: SetParametersAtomically_ResponseConstructor;
      }
      export interface SetParametersAtomically_Request {
        parameters: rcl_interfaces.msg.Parameter[];
      }
      export interface SetParametersAtomically_RequestConstructor {
        new(other?: SetParametersAtomically_Request): SetParametersAtomically_Request;
      }
      export interface SetParametersAtomically_Response {
        result: rcl_interfaces.msg.SetParametersResult;
      }
      export interface SetParametersAtomically_ResponseConstructor {
        new(other?: SetParametersAtomically_Response): SetParametersAtomically_Response;
      }
      export interface SetParameters_Request {
        parameters: rcl_interfaces.msg.Parameter[];
      }
      export interface SetParameters_RequestConstructor {
        new(other?: SetParameters_Request): SetParameters_Request;
      }
      export interface SetParameters_Response {
        results: rcl_interfaces.msg.SetParametersResult[];
      }
      export interface SetParameters_ResponseConstructor {
        new(other?: SetParameters_Response): SetParameters_Response;
      }
    }
  }

  namespace realsense2_camera_msgs {
    namespace msg {
      export interface Extrinsics {
        rotation: number[] | Float64Array;
        translation: number[] | Float64Array;
      }
      export interface ExtrinsicsConstructor {
        new(other?: Extrinsics): Extrinsics;
      }
      export interface IMUInfo {
        header: std_msgs.msg.Header;
        data: number[] | Float64Array;
        noise_variances: number[] | Float64Array;
        bias_variances: number[] | Float64Array;
      }
      export interface IMUInfoConstructor {
        new(other?: IMUInfo): IMUInfo;
      }
      export interface Metadata {
        header: std_msgs.msg.Header;
        json_data: string;
      }
      export interface MetadataConstructor {
        new(other?: Metadata): Metadata;
      }
      export interface RGBD {
        header: std_msgs.msg.Header;
        rgb_camera_info: sensor_msgs.msg.CameraInfo;
        depth_camera_info: sensor_msgs.msg.CameraInfo;
        rgb: sensor_msgs.msg.Image;
        depth: sensor_msgs.msg.Image;
      }
      export interface RGBDConstructor {
        new(other?: RGBD): RGBD;
      }
    }
    namespace srv {
      export interface DeviceInfoConstructor extends ROSService {
        readonly Request: DeviceInfo_RequestConstructor;
        readonly Response: DeviceInfo_ResponseConstructor;
      }
      export interface DeviceInfo_Request {
      }
      export interface DeviceInfo_RequestConstructor {
        new(other?: DeviceInfo_Request): DeviceInfo_Request;
      }
      export interface DeviceInfo_Response {
        device_name: string;
        serial_number: string;
        firmware_version: string;
        usb_type_descriptor: string;
        firmware_update_id: string;
        sensors: string;
        physical_port: string;
      }
      export interface DeviceInfo_ResponseConstructor {
        new(other?: DeviceInfo_Response): DeviceInfo_Response;
      }
    }
  }

  namespace rmw_dds_common {
    namespace msg {
      export interface Gid {
        data: number[] | Int8Array;
      }
      export interface GidConstructor {
        new(other?: Gid): Gid;
      }
      export interface NodeEntitiesInfo {
        node_namespace: string;
        node_name: string;
        reader_gid_seq: rmw_dds_common.msg.Gid[];
        writer_gid_seq: rmw_dds_common.msg.Gid[];
      }
      export interface NodeEntitiesInfoConstructor {
        new(other?: NodeEntitiesInfo): NodeEntitiesInfo;
      }
      export interface ParticipantEntitiesInfo {
        gid: rmw_dds_common.msg.Gid;
        node_entities_info_seq: rmw_dds_common.msg.NodeEntitiesInfo[];
      }
      export interface ParticipantEntitiesInfoConstructor {
        new(other?: ParticipantEntitiesInfo): ParticipantEntitiesInfo;
      }
    }
  }

  namespace ros_gz_interfaces {
    namespace msg {
      export interface Altimeter {
        header: std_msgs.msg.Header;
        vertical_position: number;
        vertical_velocity: number;
        vertical_reference: number;
      }
      export interface AltimeterConstructor {
        new(other?: Altimeter): Altimeter;
      }
      export interface Contact {
        collision1: ros_gz_interfaces.msg.Entity;
        collision2: ros_gz_interfaces.msg.Entity;
        positions: geometry_msgs.msg.Vector3[];
        normals: geometry_msgs.msg.Vector3[];
        depths: number[] | Float64Array;
        wrenches: ros_gz_interfaces.msg.JointWrench[];
      }
      export interface ContactConstructor {
        new(other?: Contact): Contact;
      }
      export interface Contacts {
        header: std_msgs.msg.Header;
        contacts: ros_gz_interfaces.msg.Contact[];
      }
      export interface ContactsConstructor {
        new(other?: Contacts): Contacts;
      }
      export interface Dataframe {
        header: std_msgs.msg.Header;
        src_address: string;
        dst_address: string;
        data: number[] | Uint8Array;
        rssi: number;
      }
      export interface DataframeConstructor {
        new(other?: Dataframe): Dataframe;
      }
      export interface Entity {
        id: number;
        name: string;
        type: number;
      }
      export interface EntityConstructor {
        readonly NONE: number;
        readonly LIGHT: number;
        readonly MODEL: number;
        readonly LINK: number;
        readonly VISUAL: number;
        readonly COLLISION: number;
        readonly SENSOR: number;
        readonly JOINT: number;
        new(other?: Entity): Entity;
      }
      export interface EntityFactory {
        name: string;
        allow_renaming: boolean;
        sdf: string;
        sdf_filename: string;
        clone_name: string;
        pose: geometry_msgs.msg.Pose;
        relative_to: string;
      }
      export interface EntityFactoryConstructor {
        new(other?: EntityFactory): EntityFactory;
      }
      export interface Float32Array {
        data: number[] | Float32Array;
      }
      export interface Float32ArrayConstructor {
        new(other?: Float32Array): Float32Array;
      }
      export interface GuiCamera {
        header: std_msgs.msg.Header;
        name: string;
        view_controller: string;
        pose: geometry_msgs.msg.Pose;
        track: ros_gz_interfaces.msg.TrackVisual;
        projection_type: string;
      }
      export interface GuiCameraConstructor {
        new(other?: GuiCamera): GuiCamera;
      }
      export interface JointWrench {
        header: std_msgs.msg.Header;
        body_1_name: std_msgs.msg.String;
        body_1_id: std_msgs.msg.UInt32;
        body_2_name: std_msgs.msg.String;
        body_2_id: std_msgs.msg.UInt32;
        body_1_wrench: geometry_msgs.msg.Wrench;
        body_2_wrench: geometry_msgs.msg.Wrench;
      }
      export interface JointWrenchConstructor {
        new(other?: JointWrench): JointWrench;
      }
      export interface Light {
        header: std_msgs.msg.Header;
        name: string;
        type: number;
        pose: geometry_msgs.msg.Pose;
        diffuse: std_msgs.msg.ColorRGBA;
        specular: std_msgs.msg.ColorRGBA;
        attenuation_constant: number;
        attenuation_linear: number;
        attenuation_quadratic: number;
        direction: geometry_msgs.msg.Vector3;
        range: number;
        cast_shadows: boolean;
        spot_inner_angle: number;
        spot_outer_angle: number;
        spot_falloff: number;
        id: number;
        parent_id: number;
        intensity: number;
      }
      export interface LightConstructor {
        readonly POINT: number;
        readonly SPOT: number;
        readonly DIRECTIONAL: number;
        new(other?: Light): Light;
      }
      export interface MaterialColor {
        header: std_msgs.msg.Header;
        entity: ros_gz_interfaces.msg.Entity;
        ambient: std_msgs.msg.ColorRGBA;
        diffuse: std_msgs.msg.ColorRGBA;
        specular: std_msgs.msg.ColorRGBA;
        emissive: std_msgs.msg.ColorRGBA;
        shininess: number;
        entity_match: number;
      }
      export interface MaterialColorConstructor {
        readonly FIRST: number;
        readonly ALL: number;
        new(other?: MaterialColor): MaterialColor;
      }
      export interface ParamVec {
        header: std_msgs.msg.Header;
        params: rcl_interfaces.msg.Parameter[];
      }
      export interface ParamVecConstructor {
        new(other?: ParamVec): ParamVec;
      }
      export interface SensorNoise {
        header: std_msgs.msg.Header;
        type: number;
        mean: number;
        stddev: number;
        bias_mean: number;
        bias_stddev: number;
        precision: number;
        dynamic_bias_stddev: number;
        dynamic_bias_correlation_time: number;
      }
      export interface SensorNoiseConstructor {
        readonly NONE: number;
        readonly GAUSSIAN: number;
        readonly GAUSSIAN_QUANTIZED: number;
        new(other?: SensorNoise): SensorNoise;
      }
      export interface StringVec {
        header: std_msgs.msg.Header;
        data: string[];
      }
      export interface StringVecConstructor {
        new(other?: StringVec): StringVec;
      }
      export interface TrackVisual {
        header: std_msgs.msg.Header;
        name: string;
        id: number;
        inherit_orientation: boolean;
        min_dist: number;
        max_dist: number;
        is_static: boolean;
        use_model_frame: boolean;
        xyz: geometry_msgs.msg.Vector3;
        inherit_yaw: boolean;
      }
      export interface TrackVisualConstructor {
        new(other?: TrackVisual): TrackVisual;
      }
      export interface VideoRecord {
        header: std_msgs.msg.Header;
        start: boolean;
        stop: boolean;
        format: string;
        save_filename: string;
      }
      export interface VideoRecordConstructor {
        new(other?: VideoRecord): VideoRecord;
      }
      export interface WorldControl {
        pause: boolean;
        step: boolean;
        multi_step: number;
        reset: ros_gz_interfaces.msg.WorldReset;
        seed: number;
        run_to_sim_time: builtin_interfaces.msg.Time;
      }
      export interface WorldControlConstructor {
        new(other?: WorldControl): WorldControl;
      }
      export interface WorldReset {
        all: boolean;
        time_only: boolean;
        model_only: boolean;
      }
      export interface WorldResetConstructor {
        new(other?: WorldReset): WorldReset;
      }
    }
    namespace srv {
      export interface ControlWorldConstructor extends ROSService {
        readonly Request: ControlWorld_RequestConstructor;
        readonly Response: ControlWorld_ResponseConstructor;
      }
      export interface ControlWorld_Request {
        world_control: ros_gz_interfaces.msg.WorldControl;
      }
      export interface ControlWorld_RequestConstructor {
        new(other?: ControlWorld_Request): ControlWorld_Request;
      }
      export interface ControlWorld_Response {
        success: boolean;
      }
      export interface ControlWorld_ResponseConstructor {
        new(other?: ControlWorld_Response): ControlWorld_Response;
      }
      export interface DeleteEntityConstructor extends ROSService {
        readonly Request: DeleteEntity_RequestConstructor;
        readonly Response: DeleteEntity_ResponseConstructor;
      }
      export interface DeleteEntity_Request {
        entity: ros_gz_interfaces.msg.Entity;
      }
      export interface DeleteEntity_RequestConstructor {
        new(other?: DeleteEntity_Request): DeleteEntity_Request;
      }
      export interface DeleteEntity_Response {
        success: boolean;
      }
      export interface DeleteEntity_ResponseConstructor {
        new(other?: DeleteEntity_Response): DeleteEntity_Response;
      }
      export interface SetEntityPoseConstructor extends ROSService {
        readonly Request: SetEntityPose_RequestConstructor;
        readonly Response: SetEntityPose_ResponseConstructor;
      }
      export interface SetEntityPose_Request {
        entity: ros_gz_interfaces.msg.Entity;
        pose: geometry_msgs.msg.Pose;
      }
      export interface SetEntityPose_RequestConstructor {
        new(other?: SetEntityPose_Request): SetEntityPose_Request;
      }
      export interface SetEntityPose_Response {
        success: boolean;
      }
      export interface SetEntityPose_ResponseConstructor {
        new(other?: SetEntityPose_Response): SetEntityPose_Response;
      }
      export interface SpawnEntityConstructor extends ROSService {
        readonly Request: SpawnEntity_RequestConstructor;
        readonly Response: SpawnEntity_ResponseConstructor;
      }
      export interface SpawnEntity_Request {
        entity_factory: ros_gz_interfaces.msg.EntityFactory;
      }
      export interface SpawnEntity_RequestConstructor {
        new(other?: SpawnEntity_Request): SpawnEntity_Request;
      }
      export interface SpawnEntity_Response {
        success: boolean;
      }
      export interface SpawnEntity_ResponseConstructor {
        new(other?: SpawnEntity_Response): SpawnEntity_Response;
      }
    }
  }

  namespace ros_ign_interfaces {
    namespace msg {
      export interface Contact {
        collision1: ros_gz_interfaces.msg.Entity;
        collision2: ros_gz_interfaces.msg.Entity;
        positions: geometry_msgs.msg.Vector3[];
        normals: geometry_msgs.msg.Vector3[];
        depths: number[] | Float64Array;
        wrenches: ros_gz_interfaces.msg.JointWrench[];
      }
      export interface ContactConstructor {
        new(other?: Contact): Contact;
      }
      export interface Contacts {
        header: std_msgs.msg.Header;
        contacts: ros_gz_interfaces.msg.Contact[];
      }
      export interface ContactsConstructor {
        new(other?: Contacts): Contacts;
      }
      export interface Entity {
        id: number;
        name: string;
        type: number;
      }
      export interface EntityConstructor {
        readonly NONE: number;
        readonly LIGHT: number;
        readonly MODEL: number;
        readonly LINK: number;
        readonly VISUAL: number;
        readonly COLLISION: number;
        readonly SENSOR: number;
        readonly JOINT: number;
        new(other?: Entity): Entity;
      }
      export interface EntityFactory {
        name: string;
        allow_renaming: boolean;
        sdf: string;
        sdf_filename: string;
        clone_name: string;
        pose: geometry_msgs.msg.Pose;
        relative_to: string;
      }
      export interface EntityFactoryConstructor {
        new(other?: EntityFactory): EntityFactory;
      }
      export interface GuiCamera {
        header: std_msgs.msg.Header;
        name: string;
        view_controller: string;
        pose: geometry_msgs.msg.Pose;
        track: ros_ign_interfaces.msg.TrackVisual;
        projection_type: string;
      }
      export interface GuiCameraConstructor {
        new(other?: GuiCamera): GuiCamera;
      }
      export interface JointWrench {
        header: std_msgs.msg.Header;
        body_1_name: std_msgs.msg.String;
        body_1_id: std_msgs.msg.UInt32;
        body_2_name: std_msgs.msg.String;
        body_2_id: std_msgs.msg.UInt32;
        body_1_wrench: geometry_msgs.msg.Wrench;
        body_2_wrench: geometry_msgs.msg.Wrench;
      }
      export interface JointWrenchConstructor {
        new(other?: JointWrench): JointWrench;
      }
      export interface Light {
        header: std_msgs.msg.Header;
        name: string;
        type: number;
        pose: geometry_msgs.msg.Pose;
        diffuse: std_msgs.msg.ColorRGBA;
        specular: std_msgs.msg.ColorRGBA;
        attenuation_constant: number;
        attenuation_linear: number;
        attenuation_quadratic: number;
        direction: geometry_msgs.msg.Vector3;
        range: number;
        cast_shadows: boolean;
        spot_inner_angle: number;
        spot_outer_angle: number;
        spot_falloff: number;
        id: number;
        parent_id: number;
        intensity: number;
      }
      export interface LightConstructor {
        readonly POINT: number;
        readonly SPOT: number;
        readonly DIRECTIONAL: number;
        new(other?: Light): Light;
      }
      export interface StringVec {
        header: std_msgs.msg.Header;
        data: string[];
      }
      export interface StringVecConstructor {
        new(other?: StringVec): StringVec;
      }
      export interface TrackVisual {
        header: std_msgs.msg.Header;
        name: string;
        id: number;
        inherit_orientation: boolean;
        min_dist: number;
        max_dist: number;
        is_static: boolean;
        use_model_frame: boolean;
        xyz: geometry_msgs.msg.Vector3;
        inherit_yaw: boolean;
      }
      export interface TrackVisualConstructor {
        new(other?: TrackVisual): TrackVisual;
      }
      export interface VideoRecord {
        header: std_msgs.msg.Header;
        start: boolean;
        stop: boolean;
        format: string;
        save_filename: string;
      }
      export interface VideoRecordConstructor {
        new(other?: VideoRecord): VideoRecord;
      }
      export interface WorldControl {
        pause: boolean;
        step: boolean;
        multi_step: number;
        reset: ros_gz_interfaces.msg.WorldReset;
        seed: number;
        run_to_sim_time: builtin_interfaces.msg.Time;
      }
      export interface WorldControlConstructor {
        new(other?: WorldControl): WorldControl;
      }
      export interface WorldReset {
        all: boolean;
        time_only: boolean;
        model_only: boolean;
      }
      export interface WorldResetConstructor {
        new(other?: WorldReset): WorldReset;
      }
    }
    namespace srv {
      export interface ControlWorldConstructor extends ROSService {
        readonly Request: ControlWorld_RequestConstructor;
        readonly Response: ControlWorld_ResponseConstructor;
      }
      export interface ControlWorld_Request {
        world_control: ros_gz_interfaces.msg.WorldControl;
      }
      export interface ControlWorld_RequestConstructor {
        new(other?: ControlWorld_Request): ControlWorld_Request;
      }
      export interface ControlWorld_Response {
        success: boolean;
      }
      export interface ControlWorld_ResponseConstructor {
        new(other?: ControlWorld_Response): ControlWorld_Response;
      }
      export interface DeleteEntityConstructor extends ROSService {
        readonly Request: DeleteEntity_RequestConstructor;
        readonly Response: DeleteEntity_ResponseConstructor;
      }
      export interface DeleteEntity_Request {
        entity: ros_gz_interfaces.msg.Entity;
      }
      export interface DeleteEntity_RequestConstructor {
        new(other?: DeleteEntity_Request): DeleteEntity_Request;
      }
      export interface DeleteEntity_Response {
        success: boolean;
      }
      export interface DeleteEntity_ResponseConstructor {
        new(other?: DeleteEntity_Response): DeleteEntity_Response;
      }
      export interface SetEntityPoseConstructor extends ROSService {
        readonly Request: SetEntityPose_RequestConstructor;
        readonly Response: SetEntityPose_ResponseConstructor;
      }
      export interface SetEntityPose_Request {
        entity: ros_gz_interfaces.msg.Entity;
        pose: geometry_msgs.msg.Pose;
      }
      export interface SetEntityPose_RequestConstructor {
        new(other?: SetEntityPose_Request): SetEntityPose_Request;
      }
      export interface SetEntityPose_Response {
        success: boolean;
      }
      export interface SetEntityPose_ResponseConstructor {
        new(other?: SetEntityPose_Response): SetEntityPose_Response;
      }
      export interface SpawnEntityConstructor extends ROSService {
        readonly Request: SpawnEntity_RequestConstructor;
        readonly Response: SpawnEntity_ResponseConstructor;
      }
      export interface SpawnEntity_Request {
        entity_factory: ros_gz_interfaces.msg.EntityFactory;
      }
      export interface SpawnEntity_RequestConstructor {
        new(other?: SpawnEntity_Request): SpawnEntity_Request;
      }
      export interface SpawnEntity_Response {
        success: boolean;
      }
      export interface SpawnEntity_ResponseConstructor {
        new(other?: SpawnEntity_Response): SpawnEntity_Response;
      }
    }
  }

  namespace rosbag2_interfaces {
    namespace msg {
      export interface ReadSplitEvent {
        closed_file: string;
        opened_file: string;
      }
      export interface ReadSplitEventConstructor {
        new(other?: ReadSplitEvent): ReadSplitEvent;
      }
      export interface WriteSplitEvent {
        closed_file: string;
        opened_file: string;
      }
      export interface WriteSplitEventConstructor {
        new(other?: WriteSplitEvent): WriteSplitEvent;
      }
    }
    namespace srv {
      export interface BurstConstructor extends ROSService {
        readonly Request: Burst_RequestConstructor;
        readonly Response: Burst_ResponseConstructor;
      }
      export interface Burst_Request {
        num_messages: number;
      }
      export interface Burst_RequestConstructor {
        new(other?: Burst_Request): Burst_Request;
      }
      export interface Burst_Response {
        actually_burst: number;
      }
      export interface Burst_ResponseConstructor {
        new(other?: Burst_Response): Burst_Response;
      }
      export interface GetRateConstructor extends ROSService {
        readonly Request: GetRate_RequestConstructor;
        readonly Response: GetRate_ResponseConstructor;
      }
      export interface GetRate_Request {
      }
      export interface GetRate_RequestConstructor {
        new(other?: GetRate_Request): GetRate_Request;
      }
      export interface GetRate_Response {
        rate: number;
      }
      export interface GetRate_ResponseConstructor {
        new(other?: GetRate_Response): GetRate_Response;
      }
      export interface IsPausedConstructor extends ROSService {
        readonly Request: IsPaused_RequestConstructor;
        readonly Response: IsPaused_ResponseConstructor;
      }
      export interface IsPaused_Request {
      }
      export interface IsPaused_RequestConstructor {
        new(other?: IsPaused_Request): IsPaused_Request;
      }
      export interface IsPaused_Response {
        paused: boolean;
      }
      export interface IsPaused_ResponseConstructor {
        new(other?: IsPaused_Response): IsPaused_Response;
      }
      export interface PauseConstructor extends ROSService {
        readonly Request: Pause_RequestConstructor;
        readonly Response: Pause_ResponseConstructor;
      }
      export interface Pause_Request {
      }
      export interface Pause_RequestConstructor {
        new(other?: Pause_Request): Pause_Request;
      }
      export interface Pause_Response {
      }
      export interface Pause_ResponseConstructor {
        new(other?: Pause_Response): Pause_Response;
      }
      export interface PlayNextConstructor extends ROSService {
        readonly Request: PlayNext_RequestConstructor;
        readonly Response: PlayNext_ResponseConstructor;
      }
      export interface PlayNext_Request {
      }
      export interface PlayNext_RequestConstructor {
        new(other?: PlayNext_Request): PlayNext_Request;
      }
      export interface PlayNext_Response {
        success: boolean;
      }
      export interface PlayNext_ResponseConstructor {
        new(other?: PlayNext_Response): PlayNext_Response;
      }
      export interface ResumeConstructor extends ROSService {
        readonly Request: Resume_RequestConstructor;
        readonly Response: Resume_ResponseConstructor;
      }
      export interface Resume_Request {
      }
      export interface Resume_RequestConstructor {
        new(other?: Resume_Request): Resume_Request;
      }
      export interface Resume_Response {
      }
      export interface Resume_ResponseConstructor {
        new(other?: Resume_Response): Resume_Response;
      }
      export interface SeekConstructor extends ROSService {
        readonly Request: Seek_RequestConstructor;
        readonly Response: Seek_ResponseConstructor;
      }
      export interface Seek_Request {
        time: builtin_interfaces.msg.Time;
      }
      export interface Seek_RequestConstructor {
        new(other?: Seek_Request): Seek_Request;
      }
      export interface Seek_Response {
        success: boolean;
      }
      export interface Seek_ResponseConstructor {
        new(other?: Seek_Response): Seek_Response;
      }
      export interface SetRateConstructor extends ROSService {
        readonly Request: SetRate_RequestConstructor;
        readonly Response: SetRate_ResponseConstructor;
      }
      export interface SetRate_Request {
        rate: number;
      }
      export interface SetRate_RequestConstructor {
        new(other?: SetRate_Request): SetRate_Request;
      }
      export interface SetRate_Response {
        success: boolean;
      }
      export interface SetRate_ResponseConstructor {
        new(other?: SetRate_Response): SetRate_Response;
      }
      export interface SnapshotConstructor extends ROSService {
        readonly Request: Snapshot_RequestConstructor;
        readonly Response: Snapshot_ResponseConstructor;
      }
      export interface Snapshot_Request {
      }
      export interface Snapshot_RequestConstructor {
        new(other?: Snapshot_Request): Snapshot_Request;
      }
      export interface Snapshot_Response {
        success: boolean;
      }
      export interface Snapshot_ResponseConstructor {
        new(other?: Snapshot_Response): Snapshot_Response;
      }
      export interface TogglePausedConstructor extends ROSService {
        readonly Request: TogglePaused_RequestConstructor;
        readonly Response: TogglePaused_ResponseConstructor;
      }
      export interface TogglePaused_Request {
      }
      export interface TogglePaused_RequestConstructor {
        new(other?: TogglePaused_Request): TogglePaused_Request;
      }
      export interface TogglePaused_Response {
      }
      export interface TogglePaused_ResponseConstructor {
        new(other?: TogglePaused_Response): TogglePaused_Response;
      }
    }
  }

  namespace rosgraph_msgs {
    namespace msg {
      export interface Clock {
        clock: builtin_interfaces.msg.Time;
      }
      export interface ClockConstructor {
        new(other?: Clock): Clock;
      }
    }
  }

  namespace sensor_msgs {
    namespace msg {
      export interface BatteryState {
        header: std_msgs.msg.Header;
        voltage: number;
        temperature: number;
        current: number;
        charge: number;
        capacity: number;
        design_capacity: number;
        percentage: number;
        power_supply_status: number;
        power_supply_health: number;
        power_supply_technology: number;
        present: boolean;
        cell_voltage: number[] | Float32Array;
        cell_temperature: number[] | Float32Array;
        location: string;
        serial_number: string;
      }
      export interface BatteryStateConstructor {
        readonly POWER_SUPPLY_STATUS_UNKNOWN: number;
        readonly POWER_SUPPLY_STATUS_CHARGING: number;
        readonly POWER_SUPPLY_STATUS_DISCHARGING: number;
        readonly POWER_SUPPLY_STATUS_NOT_CHARGING: number;
        readonly POWER_SUPPLY_STATUS_FULL: number;
        readonly POWER_SUPPLY_HEALTH_UNKNOWN: number;
        readonly POWER_SUPPLY_HEALTH_GOOD: number;
        readonly POWER_SUPPLY_HEALTH_OVERHEAT: number;
        readonly POWER_SUPPLY_HEALTH_DEAD: number;
        readonly POWER_SUPPLY_HEALTH_OVERVOLTAGE: number;
        readonly POWER_SUPPLY_HEALTH_UNSPEC_FAILURE: number;
        readonly POWER_SUPPLY_HEALTH_COLD: number;
        readonly POWER_SUPPLY_HEALTH_WATCHDOG_TIMER_EXPIRE: number;
        readonly POWER_SUPPLY_HEALTH_SAFETY_TIMER_EXPIRE: number;
        readonly POWER_SUPPLY_TECHNOLOGY_UNKNOWN: number;
        readonly POWER_SUPPLY_TECHNOLOGY_NIMH: number;
        readonly POWER_SUPPLY_TECHNOLOGY_LION: number;
        readonly POWER_SUPPLY_TECHNOLOGY_LIPO: number;
        readonly POWER_SUPPLY_TECHNOLOGY_LIFE: number;
        readonly POWER_SUPPLY_TECHNOLOGY_NICD: number;
        readonly POWER_SUPPLY_TECHNOLOGY_LIMN: number;
        new(other?: BatteryState): BatteryState;
      }
      export interface CameraInfo {
        header: std_msgs.msg.Header;
        height: number;
        width: number;
        distortion_model: string;
        d: number[] | Float64Array;
        k: number[] | Float64Array;
        r: number[] | Float64Array;
        p: number[] | Float64Array;
        binning_x: number;
        binning_y: number;
        roi: sensor_msgs.msg.RegionOfInterest;
      }
      export interface CameraInfoConstructor {
        new(other?: CameraInfo): CameraInfo;
      }
      export interface ChannelFloat32 {
        name: string;
        values: number[] | Float32Array;
      }
      export interface ChannelFloat32Constructor {
        new(other?: ChannelFloat32): ChannelFloat32;
      }
      export interface CompressedImage {
        header: std_msgs.msg.Header;
        format: string;
        data: number[] | Uint8Array;
      }
      export interface CompressedImageConstructor {
        new(other?: CompressedImage): CompressedImage;
      }
      export interface FluidPressure {
        header: std_msgs.msg.Header;
        fluid_pressure: number;
        variance: number;
      }
      export interface FluidPressureConstructor {
        new(other?: FluidPressure): FluidPressure;
      }
      export interface Illuminance {
        header: std_msgs.msg.Header;
        illuminance: number;
        variance: number;
      }
      export interface IlluminanceConstructor {
        new(other?: Illuminance): Illuminance;
      }
      export interface Image {
        header: std_msgs.msg.Header;
        height: number;
        width: number;
        encoding: string;
        is_bigendian: number;
        step: number;
        data: number[] | Uint8Array;
      }
      export interface ImageConstructor {
        new(other?: Image): Image;
      }
      export interface Imu {
        header: std_msgs.msg.Header;
        orientation: geometry_msgs.msg.Quaternion;
        orientation_covariance: number[] | Float64Array;
        angular_velocity: geometry_msgs.msg.Vector3;
        angular_velocity_covariance: number[] | Float64Array;
        linear_acceleration: geometry_msgs.msg.Vector3;
        linear_acceleration_covariance: number[] | Float64Array;
      }
      export interface ImuConstructor {
        new(other?: Imu): Imu;
      }
      export interface JointState {
        header: std_msgs.msg.Header;
        name: string[];
        position: number[] | Float64Array;
        velocity: number[] | Float64Array;
        effort: number[] | Float64Array;
      }
      export interface JointStateConstructor {
        new(other?: JointState): JointState;
      }
      export interface Joy {
        header: std_msgs.msg.Header;
        axes: number[] | Float32Array;
        buttons: number[] | Int32Array;
      }
      export interface JoyConstructor {
        new(other?: Joy): Joy;
      }
      export interface JoyFeedback {
        type: number;
        id: number;
        intensity: number;
      }
      export interface JoyFeedbackConstructor {
        readonly TYPE_LED: number;
        readonly TYPE_RUMBLE: number;
        readonly TYPE_BUZZER: number;
        new(other?: JoyFeedback): JoyFeedback;
      }
      export interface JoyFeedbackArray {
        array: sensor_msgs.msg.JoyFeedback[];
      }
      export interface JoyFeedbackArrayConstructor {
        new(other?: JoyFeedbackArray): JoyFeedbackArray;
      }
      export interface LaserEcho {
        echoes: number[] | Float32Array;
      }
      export interface LaserEchoConstructor {
        new(other?: LaserEcho): LaserEcho;
      }
      export interface LaserScan {
        header: std_msgs.msg.Header;
        angle_min: number;
        angle_max: number;
        angle_increment: number;
        time_increment: number;
        scan_time: number;
        range_min: number;
        range_max: number;
        ranges: number[] | Float32Array;
        intensities: number[] | Float32Array;
      }
      export interface LaserScanConstructor {
        new(other?: LaserScan): LaserScan;
      }
      export interface MagneticField {
        header: std_msgs.msg.Header;
        magnetic_field: geometry_msgs.msg.Vector3;
        magnetic_field_covariance: number[] | Float64Array;
      }
      export interface MagneticFieldConstructor {
        new(other?: MagneticField): MagneticField;
      }
      export interface MultiDOFJointState {
        header: std_msgs.msg.Header;
        joint_names: string[];
        transforms: geometry_msgs.msg.Transform[];
        twist: geometry_msgs.msg.Twist[];
        wrench: geometry_msgs.msg.Wrench[];
      }
      export interface MultiDOFJointStateConstructor {
        new(other?: MultiDOFJointState): MultiDOFJointState;
      }
      export interface MultiEchoLaserScan {
        header: std_msgs.msg.Header;
        angle_min: number;
        angle_max: number;
        angle_increment: number;
        time_increment: number;
        scan_time: number;
        range_min: number;
        range_max: number;
        ranges: sensor_msgs.msg.LaserEcho[];
        intensities: sensor_msgs.msg.LaserEcho[];
      }
      export interface MultiEchoLaserScanConstructor {
        new(other?: MultiEchoLaserScan): MultiEchoLaserScan;
      }
      export interface NavSatFix {
        header: std_msgs.msg.Header;
        status: sensor_msgs.msg.NavSatStatus;
        latitude: number;
        longitude: number;
        altitude: number;
        position_covariance: number[] | Float64Array;
        position_covariance_type: number;
      }
      export interface NavSatFixConstructor {
        readonly COVARIANCE_TYPE_UNKNOWN: number;
        readonly COVARIANCE_TYPE_APPROXIMATED: number;
        readonly COVARIANCE_TYPE_DIAGONAL_KNOWN: number;
        readonly COVARIANCE_TYPE_KNOWN: number;
        new(other?: NavSatFix): NavSatFix;
      }
      export interface NavSatStatus {
        status: number;
        service: number;
      }
      export interface NavSatStatusConstructor {
        readonly STATUS_NO_FIX: number;
        readonly STATUS_FIX: number;
        readonly STATUS_SBAS_FIX: number;
        readonly STATUS_GBAS_FIX: number;
        readonly SERVICE_GPS: number;
        readonly SERVICE_GLONASS: number;
        readonly SERVICE_COMPASS: number;
        readonly SERVICE_GALILEO: number;
        new(other?: NavSatStatus): NavSatStatus;
      }
      export interface PointCloud {
        header: std_msgs.msg.Header;
        points: geometry_msgs.msg.Point32[];
        channels: sensor_msgs.msg.ChannelFloat32[];
      }
      export interface PointCloudConstructor {
        new(other?: PointCloud): PointCloud;
      }
      export interface PointCloud2 {
        header: std_msgs.msg.Header;
        height: number;
        width: number;
        fields: sensor_msgs.msg.PointField[];
        is_bigendian: boolean;
        point_step: number;
        row_step: number;
        data: number[] | Uint8Array;
        is_dense: boolean;
      }
      export interface PointCloud2Constructor {
        new(other?: PointCloud2): PointCloud2;
      }
      export interface PointField {
        name: string;
        offset: number;
        datatype: number;
        count: number;
      }
      export interface PointFieldConstructor {
        readonly INT8: number;
        readonly UINT8: number;
        readonly INT16: number;
        readonly UINT16: number;
        readonly INT32: number;
        readonly UINT32: number;
        readonly FLOAT32: number;
        readonly FLOAT64: number;
        new(other?: PointField): PointField;
      }
      export interface Range {
        header: std_msgs.msg.Header;
        radiation_type: number;
        field_of_view: number;
        min_range: number;
        max_range: number;
        range: number;
      }
      export interface RangeConstructor {
        readonly ULTRASOUND: number;
        readonly INFRARED: number;
        new(other?: Range): Range;
      }
      export interface RegionOfInterest {
        x_offset: number;
        y_offset: number;
        height: number;
        width: number;
        do_rectify: boolean;
      }
      export interface RegionOfInterestConstructor {
        new(other?: RegionOfInterest): RegionOfInterest;
      }
      export interface RelativeHumidity {
        header: std_msgs.msg.Header;
        relative_humidity: number;
        variance: number;
      }
      export interface RelativeHumidityConstructor {
        new(other?: RelativeHumidity): RelativeHumidity;
      }
      export interface Temperature {
        header: std_msgs.msg.Header;
        temperature: number;
        variance: number;
      }
      export interface TemperatureConstructor {
        new(other?: Temperature): Temperature;
      }
      export interface TimeReference {
        header: std_msgs.msg.Header;
        time_ref: builtin_interfaces.msg.Time;
        source: string;
      }
      export interface TimeReferenceConstructor {
        new(other?: TimeReference): TimeReference;
      }
    }
    namespace srv {
      export interface SetCameraInfoConstructor extends ROSService {
        readonly Request: SetCameraInfo_RequestConstructor;
        readonly Response: SetCameraInfo_ResponseConstructor;
      }
      export interface SetCameraInfo_Request {
        camera_info: sensor_msgs.msg.CameraInfo;
      }
      export interface SetCameraInfo_RequestConstructor {
        new(other?: SetCameraInfo_Request): SetCameraInfo_Request;
      }
      export interface SetCameraInfo_Response {
        success: boolean;
        status_message: string;
      }
      export interface SetCameraInfo_ResponseConstructor {
        new(other?: SetCameraInfo_Response): SetCameraInfo_Response;
      }
    }
  }

  namespace shape_msgs {
    namespace msg {
      export interface Mesh {
        triangles: shape_msgs.msg.MeshTriangle[];
        vertices: geometry_msgs.msg.Point[];
      }
      export interface MeshConstructor {
        new(other?: Mesh): Mesh;
      }
      export interface MeshTriangle {
        vertex_indices: number[] | Uint32Array;
      }
      export interface MeshTriangleConstructor {
        new(other?: MeshTriangle): MeshTriangle;
      }
      export interface Plane {
        coef: number[] | Float64Array;
      }
      export interface PlaneConstructor {
        new(other?: Plane): Plane;
      }
      export interface SolidPrimitive {
        type: number;
        dimensions: number[] | Float64Array;
        polygon: geometry_msgs.msg.Polygon;
      }
      export interface SolidPrimitiveConstructor {
        readonly BOX: number;
        readonly SPHERE: number;
        readonly CYLINDER: number;
        readonly CONE: number;
        readonly PRISM: number;
        readonly BOX_X: number;
        readonly BOX_Y: number;
        readonly BOX_Z: number;
        readonly SPHERE_RADIUS: number;
        readonly CYLINDER_HEIGHT: number;
        readonly CYLINDER_RADIUS: number;
        readonly CONE_HEIGHT: number;
        readonly CONE_RADIUS: number;
        readonly PRISM_HEIGHT: number;
        new(other?: SolidPrimitive): SolidPrimitive;
      }
    }
  }

  namespace slam_toolbox {
    namespace srvs {
      export interface AddSubmapConstructor extends ROSService {
        readonly Request: AddSubmap_RequestConstructor;
        readonly Response: AddSubmap_ResponseConstructor;
      }
      export interface AddSubmap_Request {
        filename: string;
      }
      export interface AddSubmap_RequestConstructor {
        new(other?: AddSubmap_Request): AddSubmap_Request;
      }
      export interface AddSubmap_Response {
      }
      export interface AddSubmap_ResponseConstructor {
        new(other?: AddSubmap_Response): AddSubmap_Response;
      }
      export interface ClearConstructor extends ROSService {
        readonly Request: Clear_RequestConstructor;
        readonly Response: Clear_ResponseConstructor;
      }
      export interface ClearQueueConstructor extends ROSService {
        readonly Request: ClearQueue_RequestConstructor;
        readonly Response: ClearQueue_ResponseConstructor;
      }
      export interface ClearQueue_Request {
      }
      export interface ClearQueue_RequestConstructor {
        new(other?: ClearQueue_Request): ClearQueue_Request;
      }
      export interface ClearQueue_Response {
        status: boolean;
      }
      export interface ClearQueue_ResponseConstructor {
        new(other?: ClearQueue_Response): ClearQueue_Response;
      }
      export interface Clear_Request {
      }
      export interface Clear_RequestConstructor {
        new(other?: Clear_Request): Clear_Request;
      }
      export interface Clear_Response {
      }
      export interface Clear_ResponseConstructor {
        new(other?: Clear_Response): Clear_Response;
      }
      export interface DeserializePoseGraphConstructor extends ROSService {
        readonly Request: DeserializePoseGraph_RequestConstructor;
        readonly Response: DeserializePoseGraph_ResponseConstructor;
      }
      export interface DeserializePoseGraph_Request {
        filename: string;
        match_type: number;
        initial_pose: geometry_msgs.msg.Pose2D;
      }
      export interface DeserializePoseGraph_RequestConstructor {
        readonly UNSET: number;
        readonly START_AT_FIRST_NODE: number;
        readonly START_AT_GIVEN_POSE: number;
        readonly LOCALIZE_AT_POSE: number;
        new(other?: DeserializePoseGraph_Request): DeserializePoseGraph_Request;
      }
      export interface DeserializePoseGraph_Response {
      }
      export interface DeserializePoseGraph_ResponseConstructor {
        new(other?: DeserializePoseGraph_Response): DeserializePoseGraph_Response;
      }
      export interface LoopClosureConstructor extends ROSService {
        readonly Request: LoopClosure_RequestConstructor;
        readonly Response: LoopClosure_ResponseConstructor;
      }
      export interface LoopClosure_Request {
      }
      export interface LoopClosure_RequestConstructor {
        new(other?: LoopClosure_Request): LoopClosure_Request;
      }
      export interface LoopClosure_Response {
      }
      export interface LoopClosure_ResponseConstructor {
        new(other?: LoopClosure_Response): LoopClosure_Response;
      }
      export interface MergeMapsConstructor extends ROSService {
        readonly Request: MergeMaps_RequestConstructor;
        readonly Response: MergeMaps_ResponseConstructor;
      }
      export interface MergeMaps_Request {
      }
      export interface MergeMaps_RequestConstructor {
        new(other?: MergeMaps_Request): MergeMaps_Request;
      }
      export interface MergeMaps_Response {
      }
      export interface MergeMaps_ResponseConstructor {
        new(other?: MergeMaps_Response): MergeMaps_Response;
      }
      export interface PauseConstructor extends ROSService {
        readonly Request: Pause_RequestConstructor;
        readonly Response: Pause_ResponseConstructor;
      }
      export interface Pause_Request {
      }
      export interface Pause_RequestConstructor {
        new(other?: Pause_Request): Pause_Request;
      }
      export interface Pause_Response {
        status: boolean;
      }
      export interface Pause_ResponseConstructor {
        new(other?: Pause_Response): Pause_Response;
      }
      export interface SaveMapConstructor extends ROSService {
        readonly Request: SaveMap_RequestConstructor;
        readonly Response: SaveMap_ResponseConstructor;
      }
      export interface SaveMap_Request {
        name: std_msgs.msg.String;
      }
      export interface SaveMap_RequestConstructor {
        new(other?: SaveMap_Request): SaveMap_Request;
      }
      export interface SaveMap_Response {
        result: number;
      }
      export interface SaveMap_ResponseConstructor {
        readonly RESULT_SUCCESS: number;
        readonly RESULT_NO_MAP_RECEIEVD: number;
        readonly RESULT_UNDEFINED_FAILURE: number;
        new(other?: SaveMap_Response): SaveMap_Response;
      }
      export interface SerializePoseGraphConstructor extends ROSService {
        readonly Request: SerializePoseGraph_RequestConstructor;
        readonly Response: SerializePoseGraph_ResponseConstructor;
      }
      export interface SerializePoseGraph_Request {
        filename: string;
      }
      export interface SerializePoseGraph_RequestConstructor {
        new(other?: SerializePoseGraph_Request): SerializePoseGraph_Request;
      }
      export interface SerializePoseGraph_Response {
        result: number;
      }
      export interface SerializePoseGraph_ResponseConstructor {
        readonly RESULT_SUCCESS: number;
        readonly RESULT_FAILED_TO_WRITE_FILE: number;
        new(other?: SerializePoseGraph_Response): SerializePoseGraph_Response;
      }
      export interface ToggleInteractiveConstructor extends ROSService {
        readonly Request: ToggleInteractive_RequestConstructor;
        readonly Response: ToggleInteractive_ResponseConstructor;
      }
      export interface ToggleInteractive_Request {
      }
      export interface ToggleInteractive_RequestConstructor {
        new(other?: ToggleInteractive_Request): ToggleInteractive_Request;
      }
      export interface ToggleInteractive_Response {
      }
      export interface ToggleInteractive_ResponseConstructor {
        new(other?: ToggleInteractive_Response): ToggleInteractive_Response;
      }
    }
  }

  namespace statistics_msgs {
    namespace msg {
      export interface MetricsMessage {
        measurement_source_name: string;
        metrics_source: string;
        unit: string;
        window_start: builtin_interfaces.msg.Time;
        window_stop: builtin_interfaces.msg.Time;
        statistics: statistics_msgs.msg.StatisticDataPoint[];
      }
      export interface MetricsMessageConstructor {
        new(other?: MetricsMessage): MetricsMessage;
      }
      export interface StatisticDataPoint {
        data_type: number;
        data: number;
      }
      export interface StatisticDataPointConstructor {
        new(other?: StatisticDataPoint): StatisticDataPoint;
      }
      export interface StatisticDataType {
      }
      export interface StatisticDataTypeConstructor {
        readonly STATISTICS_DATA_TYPE_UNINITIALIZED: number;
        readonly STATISTICS_DATA_TYPE_AVERAGE: number;
        readonly STATISTICS_DATA_TYPE_MINIMUM: number;
        readonly STATISTICS_DATA_TYPE_MAXIMUM: number;
        readonly STATISTICS_DATA_TYPE_STDDEV: number;
        readonly STATISTICS_DATA_TYPE_SAMPLE_COUNT: number;
        new(other?: StatisticDataType): StatisticDataType;
      }
    }
  }

  namespace std_msgs {
    namespace msg {
      export interface Bool {
        data: boolean;
      }
      export interface BoolConstructor {
        new(other?: Bool): Bool;
      }
      export interface Byte {
        data: number;
      }
      export interface ByteConstructor {
        new(other?: Byte): Byte;
      }
      export interface ByteMultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[] | Uint8Array;
      }
      export interface ByteMultiArrayConstructor {
        new(other?: ByteMultiArray): ByteMultiArray;
      }
      export interface Char {
        data: number;
      }
      export interface CharConstructor {
        new(other?: Char): Char;
      }
      export interface ColorRGBA {
        r: number;
        g: number;
        b: number;
        a: number;
      }
      export interface ColorRGBAConstructor {
        new(other?: ColorRGBA): ColorRGBA;
      }
      export interface Empty {
      }
      export interface EmptyConstructor {
        new(other?: Empty): Empty;
      }
      export interface Float32 {
        data: number;
      }
      export interface Float32Constructor {
        new(other?: Float32): Float32;
      }
      export interface Float32MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[] | Float32Array;
      }
      export interface Float32MultiArrayConstructor {
        new(other?: Float32MultiArray): Float32MultiArray;
      }
      export interface Float64 {
        data: number;
      }
      export interface Float64Constructor {
        new(other?: Float64): Float64;
      }
      export interface Float64MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[] | Float64Array;
      }
      export interface Float64MultiArrayConstructor {
        new(other?: Float64MultiArray): Float64MultiArray;
      }
      export interface Header {
        stamp: builtin_interfaces.msg.Time;
        frame_id: string;
      }
      export interface HeaderConstructor {
        new(other?: Header): Header;
      }
      export interface Int16 {
        data: number;
      }
      export interface Int16Constructor {
        new(other?: Int16): Int16;
      }
      export interface Int16MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[] | Int16Array;
      }
      export interface Int16MultiArrayConstructor {
        new(other?: Int16MultiArray): Int16MultiArray;
      }
      export interface Int32 {
        data: number;
      }
      export interface Int32Constructor {
        new(other?: Int32): Int32;
      }
      export interface Int32MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[] | Int32Array;
      }
      export interface Int32MultiArrayConstructor {
        new(other?: Int32MultiArray): Int32MultiArray;
      }
      export interface Int64 {
        data: number;
      }
      export interface Int64Constructor {
        new(other?: Int64): Int64;
      }
      export interface Int64MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[];
      }
      export interface Int64MultiArrayConstructor {
        new(other?: Int64MultiArray): Int64MultiArray;
      }
      export interface Int8 {
        data: number;
      }
      export interface Int8Constructor {
        new(other?: Int8): Int8;
      }
      export interface Int8MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[] | Int8Array;
      }
      export interface Int8MultiArrayConstructor {
        new(other?: Int8MultiArray): Int8MultiArray;
      }
      export interface MultiArrayDimension {
        label: string;
        size: number;
        stride: number;
      }
      export interface MultiArrayDimensionConstructor {
        new(other?: MultiArrayDimension): MultiArrayDimension;
      }
      export interface MultiArrayLayout {
        dim: std_msgs.msg.MultiArrayDimension[];
        data_offset: number;
      }
      export interface MultiArrayLayoutConstructor {
        new(other?: MultiArrayLayout): MultiArrayLayout;
      }
      export interface String {
        data: string;
      }
      export interface StringConstructor {
        new(other?: String): String;
      }
      export interface UInt16 {
        data: number;
      }
      export interface UInt16Constructor {
        new(other?: UInt16): UInt16;
      }
      export interface UInt16MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[] | Uint16Array;
      }
      export interface UInt16MultiArrayConstructor {
        new(other?: UInt16MultiArray): UInt16MultiArray;
      }
      export interface UInt32 {
        data: number;
      }
      export interface UInt32Constructor {
        new(other?: UInt32): UInt32;
      }
      export interface UInt32MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[] | Uint32Array;
      }
      export interface UInt32MultiArrayConstructor {
        new(other?: UInt32MultiArray): UInt32MultiArray;
      }
      export interface UInt64 {
        data: number;
      }
      export interface UInt64Constructor {
        new(other?: UInt64): UInt64;
      }
      export interface UInt64MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[];
      }
      export interface UInt64MultiArrayConstructor {
        new(other?: UInt64MultiArray): UInt64MultiArray;
      }
      export interface UInt8 {
        data: number;
      }
      export interface UInt8Constructor {
        new(other?: UInt8): UInt8;
      }
      export interface UInt8MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[] | Uint8Array;
      }
      export interface UInt8MultiArrayConstructor {
        new(other?: UInt8MultiArray): UInt8MultiArray;
      }
    }
  }

  namespace std_srvs {
    namespace srv {
      export interface EmptyConstructor extends ROSService {
        readonly Request: Empty_RequestConstructor;
        readonly Response: Empty_ResponseConstructor;
      }
      export interface Empty_Request {
      }
      export interface Empty_RequestConstructor {
        new(other?: Empty_Request): Empty_Request;
      }
      export interface Empty_Response {
      }
      export interface Empty_ResponseConstructor {
        new(other?: Empty_Response): Empty_Response;
      }
      export interface SetBoolConstructor extends ROSService {
        readonly Request: SetBool_RequestConstructor;
        readonly Response: SetBool_ResponseConstructor;
      }
      export interface SetBool_Request {
        data: boolean;
      }
      export interface SetBool_RequestConstructor {
        new(other?: SetBool_Request): SetBool_Request;
      }
      export interface SetBool_Response {
        success: boolean;
        message: string;
      }
      export interface SetBool_ResponseConstructor {
        new(other?: SetBool_Response): SetBool_Response;
      }
      export interface TriggerConstructor extends ROSService {
        readonly Request: Trigger_RequestConstructor;
        readonly Response: Trigger_ResponseConstructor;
      }
      export interface Trigger_Request {
      }
      export interface Trigger_RequestConstructor {
        new(other?: Trigger_Request): Trigger_Request;
      }
      export interface Trigger_Response {
        success: boolean;
        message: string;
      }
      export interface Trigger_ResponseConstructor {
        new(other?: Trigger_Response): Trigger_Response;
      }
    }
  }

  namespace stereo_msgs {
    namespace msg {
      export interface DisparityImage {
        header: std_msgs.msg.Header;
        image: sensor_msgs.msg.Image;
        f: number;
        t: number;
        valid_window: sensor_msgs.msg.RegionOfInterest;
        min_disparity: number;
        max_disparity: number;
        delta_d: number;
      }
      export interface DisparityImageConstructor {
        new(other?: DisparityImage): DisparityImage;
      }
    }
  }

  namespace tf2_msgs {
    namespace action {
      export interface LookupTransformConstructor {
        readonly Goal: LookupTransform_GoalConstructor;
        readonly Result: LookupTransform_ResultConstructor;
        readonly Feedback: LookupTransform_FeedbackConstructor;
      }
      export interface LookupTransform_Feedback {
      }
      export interface LookupTransform_FeedbackConstructor {
        new(other?: LookupTransform_Feedback): LookupTransform_Feedback;
      }
      export interface LookupTransform_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: tf2_msgs.action.LookupTransform_Feedback;
      }
      export interface LookupTransform_FeedbackMessageConstructor {
        new(other?: LookupTransform_FeedbackMessage): LookupTransform_FeedbackMessage;
      }
      export interface LookupTransform_GetResultConstructor extends ROSService {
        readonly Request: LookupTransform_GetResult_RequestConstructor;
        readonly Response: LookupTransform_GetResult_ResponseConstructor;
      }
      export interface LookupTransform_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface LookupTransform_GetResult_RequestConstructor {
        new(other?: LookupTransform_GetResult_Request): LookupTransform_GetResult_Request;
      }
      export interface LookupTransform_GetResult_Response {
        status: number;
        result: tf2_msgs.action.LookupTransform_Result;
      }
      export interface LookupTransform_GetResult_ResponseConstructor {
        new(other?: LookupTransform_GetResult_Response): LookupTransform_GetResult_Response;
      }
      export interface LookupTransform_Goal {
        target_frame: string;
        source_frame: string;
        source_time: builtin_interfaces.msg.Time;
        timeout: builtin_interfaces.msg.Duration;
        target_time: builtin_interfaces.msg.Time;
        fixed_frame: string;
        advanced: boolean;
      }
      export interface LookupTransform_GoalConstructor {
        new(other?: LookupTransform_Goal): LookupTransform_Goal;
      }
      export interface LookupTransform_Result {
        transform: geometry_msgs.msg.TransformStamped;
        error: tf2_msgs.msg.TF2Error;
      }
      export interface LookupTransform_ResultConstructor {
        new(other?: LookupTransform_Result): LookupTransform_Result;
      }
      export interface LookupTransform_SendGoalConstructor extends ROSService {
        readonly Request: LookupTransform_SendGoal_RequestConstructor;
        readonly Response: LookupTransform_SendGoal_ResponseConstructor;
      }
      export interface LookupTransform_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: tf2_msgs.action.LookupTransform_Goal;
      }
      export interface LookupTransform_SendGoal_RequestConstructor {
        new(other?: LookupTransform_SendGoal_Request): LookupTransform_SendGoal_Request;
      }
      export interface LookupTransform_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface LookupTransform_SendGoal_ResponseConstructor {
        new(other?: LookupTransform_SendGoal_Response): LookupTransform_SendGoal_Response;
      }
    }
    namespace msg {
      export interface TF2Error {
        error: number;
        error_string: string;
      }
      export interface TF2ErrorConstructor {
        readonly NO_ERROR: number;
        readonly LOOKUP_ERROR: number;
        readonly CONNECTIVITY_ERROR: number;
        readonly EXTRAPOLATION_ERROR: number;
        readonly INVALID_ARGUMENT_ERROR: number;
        readonly TIMEOUT_ERROR: number;
        readonly TRANSFORM_ERROR: number;
        new(other?: TF2Error): TF2Error;
      }
      export interface TFMessage {
        transforms: geometry_msgs.msg.TransformStamped[];
      }
      export interface TFMessageConstructor {
        new(other?: TFMessage): TFMessage;
      }
    }
    namespace srv {
      export interface FrameGraphConstructor extends ROSService {
        readonly Request: FrameGraph_RequestConstructor;
        readonly Response: FrameGraph_ResponseConstructor;
      }
      export interface FrameGraph_Request {
      }
      export interface FrameGraph_RequestConstructor {
        new(other?: FrameGraph_Request): FrameGraph_Request;
      }
      export interface FrameGraph_Response {
        frame_yaml: string;
      }
      export interface FrameGraph_ResponseConstructor {
        new(other?: FrameGraph_Response): FrameGraph_Response;
      }
    }
  }

  namespace theora_image_transport {
    namespace msg {
      export interface Packet {
        header: std_msgs.msg.Header;
        data: number[] | Uint8Array;
        b_o_s: number;
        e_o_s: number;
        granulepos: number;
        packetno: number;
      }
      export interface PacketConstructor {
        new(other?: Packet): Packet;
      }
    }
  }

  namespace trajectory_msgs {
    namespace msg {
      export interface JointTrajectory {
        header: std_msgs.msg.Header;
        joint_names: string[];
        points: trajectory_msgs.msg.JointTrajectoryPoint[];
      }
      export interface JointTrajectoryConstructor {
        new(other?: JointTrajectory): JointTrajectory;
      }
      export interface JointTrajectoryPoint {
        positions: number[] | Float64Array;
        velocities: number[] | Float64Array;
        accelerations: number[] | Float64Array;
        effort: number[] | Float64Array;
        time_from_start: builtin_interfaces.msg.Duration;
      }
      export interface JointTrajectoryPointConstructor {
        new(other?: JointTrajectoryPoint): JointTrajectoryPoint;
      }
      export interface MultiDOFJointTrajectory {
        header: std_msgs.msg.Header;
        joint_names: string[];
        points: trajectory_msgs.msg.MultiDOFJointTrajectoryPoint[];
      }
      export interface MultiDOFJointTrajectoryConstructor {
        new(other?: MultiDOFJointTrajectory): MultiDOFJointTrajectory;
      }
      export interface MultiDOFJointTrajectoryPoint {
        transforms: geometry_msgs.msg.Transform[];
        velocities: geometry_msgs.msg.Twist[];
        accelerations: geometry_msgs.msg.Twist[];
        time_from_start: builtin_interfaces.msg.Duration;
      }
      export interface MultiDOFJointTrajectoryPointConstructor {
        new(other?: MultiDOFJointTrajectoryPoint): MultiDOFJointTrajectoryPoint;
      }
    }
  }

  namespace turtlebot3_msgs {
    namespace action {
      export interface PatrolConstructor {
        readonly Goal: Patrol_GoalConstructor;
        readonly Result: Patrol_ResultConstructor;
        readonly Feedback: Patrol_FeedbackConstructor;
      }
      export interface Patrol_Feedback {
        left_time: number;
      }
      export interface Patrol_FeedbackConstructor {
        new(other?: Patrol_Feedback): Patrol_Feedback;
      }
      export interface Patrol_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: turtlebot3_msgs.action.Patrol_Feedback;
      }
      export interface Patrol_FeedbackMessageConstructor {
        new(other?: Patrol_FeedbackMessage): Patrol_FeedbackMessage;
      }
      export interface Patrol_GetResultConstructor extends ROSService {
        readonly Request: Patrol_GetResult_RequestConstructor;
        readonly Response: Patrol_GetResult_ResponseConstructor;
      }
      export interface Patrol_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface Patrol_GetResult_RequestConstructor {
        new(other?: Patrol_GetResult_Request): Patrol_GetResult_Request;
      }
      export interface Patrol_GetResult_Response {
        status: number;
        result: turtlebot3_msgs.action.Patrol_Result;
      }
      export interface Patrol_GetResult_ResponseConstructor {
        new(other?: Patrol_GetResult_Response): Patrol_GetResult_Response;
      }
      export interface Patrol_Goal {
        radius: number;
      }
      export interface Patrol_GoalConstructor {
        new(other?: Patrol_Goal): Patrol_Goal;
      }
      export interface Patrol_Result {
        success: boolean;
      }
      export interface Patrol_ResultConstructor {
        new(other?: Patrol_Result): Patrol_Result;
      }
      export interface Patrol_SendGoalConstructor extends ROSService {
        readonly Request: Patrol_SendGoal_RequestConstructor;
        readonly Response: Patrol_SendGoal_ResponseConstructor;
      }
      export interface Patrol_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: turtlebot3_msgs.action.Patrol_Goal;
      }
      export interface Patrol_SendGoal_RequestConstructor {
        new(other?: Patrol_SendGoal_Request): Patrol_SendGoal_Request;
      }
      export interface Patrol_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface Patrol_SendGoal_ResponseConstructor {
        new(other?: Patrol_SendGoal_Response): Patrol_SendGoal_Response;
      }
    }
    namespace msg {
      export interface SensorState {
        header: std_msgs.msg.Header;
        bumper: number;
        cliff: number;
        sonar: number;
        illumination: number;
        led: number;
        button: number;
        torque: boolean;
        left_encoder: number;
        right_encoder: number;
        battery: number;
      }
      export interface SensorStateConstructor {
        readonly BUMPER_FORWARD: number;
        readonly BUMPER_BACKWARD: number;
        readonly CLIFF: number;
        readonly SONAR: number;
        readonly ILLUMINATION: number;
        readonly BUTTON0: number;
        readonly BUTTON1: number;
        readonly ERROR_LEFT_MOTOR: number;
        readonly ERROR_RIGHT_MOTOR: number;
        readonly TORQUE_ON: number;
        readonly TORQUE_OFF: number;
        new(other?: SensorState): SensorState;
      }
      export interface Sound {
        value: number;
      }
      export interface SoundConstructor {
        readonly OFF: number;
        readonly ON: number;
        readonly LOW_BATTERY: number;
        readonly ERROR: number;
        readonly BUTTON1: number;
        readonly BUTTON2: number;
        new(other?: Sound): Sound;
      }
      export interface VersionInfo {
        hardware: string;
        firmware: string;
        software: string;
      }
      export interface VersionInfoConstructor {
        new(other?: VersionInfo): VersionInfo;
      }
    }
    namespace srv {
      export interface DqnConstructor extends ROSService {
        readonly Request: Dqn_RequestConstructor;
        readonly Response: Dqn_ResponseConstructor;
      }
      export interface Dqn_Request {
        action: number;
        init: boolean;
      }
      export interface Dqn_RequestConstructor {
        new(other?: Dqn_Request): Dqn_Request;
      }
      export interface Dqn_Response {
        state: number[] | Float32Array;
        reward: number;
        done: boolean;
      }
      export interface Dqn_ResponseConstructor {
        new(other?: Dqn_Response): Dqn_Response;
      }
      export interface SoundConstructor extends ROSService {
        readonly Request: Sound_RequestConstructor;
        readonly Response: Sound_ResponseConstructor;
      }
      export interface Sound_Request {
        value: number;
      }
      export interface Sound_RequestConstructor {
        new(other?: Sound_Request): Sound_Request;
      }
      export interface Sound_Response {
        success: boolean;
        message: string;
      }
      export interface Sound_ResponseConstructor {
        new(other?: Sound_Response): Sound_Response;
      }
    }
  }

  namespace turtlebot4_msgs {
    namespace msg {
      export interface UserButton {
        button: boolean[];
      }
      export interface UserButtonConstructor {
        new(other?: UserButton): UserButton;
      }
      export interface UserDisplay {
        ip: string;
        battery: string;
        entries: string[];
        selected_entry: number;
      }
      export interface UserDisplayConstructor {
        new(other?: UserDisplay): UserDisplay;
      }
      export interface UserLed {
        led: number;
        color: number;
        blink_period: number;
        duty_cycle: number;
      }
      export interface UserLedConstructor {
        readonly USER_LED_1: number;
        readonly USER_LED_2: number;
        readonly COLOR_OFF: number;
        readonly COLOR_GREEN: number;
        readonly COLOR_RED: number;
        readonly COLOR_YELLOW: number;
        new(other?: UserLed): UserLed;
      }
    }
  }

  namespace turtlesim {
    namespace action {
      export interface RotateAbsoluteConstructor {
        readonly Goal: RotateAbsolute_GoalConstructor;
        readonly Result: RotateAbsolute_ResultConstructor;
        readonly Feedback: RotateAbsolute_FeedbackConstructor;
      }
      export interface RotateAbsolute_Feedback {
        remaining: number;
      }
      export interface RotateAbsolute_FeedbackConstructor {
        new(other?: RotateAbsolute_Feedback): RotateAbsolute_Feedback;
      }
      export interface RotateAbsolute_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: turtlesim.action.RotateAbsolute_Feedback;
      }
      export interface RotateAbsolute_FeedbackMessageConstructor {
        new(other?: RotateAbsolute_FeedbackMessage): RotateAbsolute_FeedbackMessage;
      }
      export interface RotateAbsolute_GetResultConstructor extends ROSService {
        readonly Request: RotateAbsolute_GetResult_RequestConstructor;
        readonly Response: RotateAbsolute_GetResult_ResponseConstructor;
      }
      export interface RotateAbsolute_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface RotateAbsolute_GetResult_RequestConstructor {
        new(other?: RotateAbsolute_GetResult_Request): RotateAbsolute_GetResult_Request;
      }
      export interface RotateAbsolute_GetResult_Response {
        status: number;
        result: turtlesim.action.RotateAbsolute_Result;
      }
      export interface RotateAbsolute_GetResult_ResponseConstructor {
        new(other?: RotateAbsolute_GetResult_Response): RotateAbsolute_GetResult_Response;
      }
      export interface RotateAbsolute_Goal {
        theta: number;
      }
      export interface RotateAbsolute_GoalConstructor {
        new(other?: RotateAbsolute_Goal): RotateAbsolute_Goal;
      }
      export interface RotateAbsolute_Result {
        delta: number;
      }
      export interface RotateAbsolute_ResultConstructor {
        new(other?: RotateAbsolute_Result): RotateAbsolute_Result;
      }
      export interface RotateAbsolute_SendGoalConstructor extends ROSService {
        readonly Request: RotateAbsolute_SendGoal_RequestConstructor;
        readonly Response: RotateAbsolute_SendGoal_ResponseConstructor;
      }
      export interface RotateAbsolute_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: turtlesim.action.RotateAbsolute_Goal;
      }
      export interface RotateAbsolute_SendGoal_RequestConstructor {
        new(other?: RotateAbsolute_SendGoal_Request): RotateAbsolute_SendGoal_Request;
      }
      export interface RotateAbsolute_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface RotateAbsolute_SendGoal_ResponseConstructor {
        new(other?: RotateAbsolute_SendGoal_Response): RotateAbsolute_SendGoal_Response;
      }
    }
    namespace msg {
      export interface Color {
        r: number;
        g: number;
        b: number;
      }
      export interface ColorConstructor {
        new(other?: Color): Color;
      }
      export interface Pose {
        x: number;
        y: number;
        theta: number;
        linear_velocity: number;
        angular_velocity: number;
      }
      export interface PoseConstructor {
        new(other?: Pose): Pose;
      }
    }
    namespace srv {
      export interface KillConstructor extends ROSService {
        readonly Request: Kill_RequestConstructor;
        readonly Response: Kill_ResponseConstructor;
      }
      export interface Kill_Request {
        name: string;
      }
      export interface Kill_RequestConstructor {
        new(other?: Kill_Request): Kill_Request;
      }
      export interface Kill_Response {
      }
      export interface Kill_ResponseConstructor {
        new(other?: Kill_Response): Kill_Response;
      }
      export interface SetPenConstructor extends ROSService {
        readonly Request: SetPen_RequestConstructor;
        readonly Response: SetPen_ResponseConstructor;
      }
      export interface SetPen_Request {
        r: number;
        g: number;
        b: number;
        width: number;
        off: number;
      }
      export interface SetPen_RequestConstructor {
        new(other?: SetPen_Request): SetPen_Request;
      }
      export interface SetPen_Response {
      }
      export interface SetPen_ResponseConstructor {
        new(other?: SetPen_Response): SetPen_Response;
      }
      export interface SpawnConstructor extends ROSService {
        readonly Request: Spawn_RequestConstructor;
        readonly Response: Spawn_ResponseConstructor;
      }
      export interface Spawn_Request {
        x: number;
        y: number;
        theta: number;
        name: string;
      }
      export interface Spawn_RequestConstructor {
        new(other?: Spawn_Request): Spawn_Request;
      }
      export interface Spawn_Response {
        name: string;
      }
      export interface Spawn_ResponseConstructor {
        new(other?: Spawn_Response): Spawn_Response;
      }
      export interface TeleportAbsoluteConstructor extends ROSService {
        readonly Request: TeleportAbsolute_RequestConstructor;
        readonly Response: TeleportAbsolute_ResponseConstructor;
      }
      export interface TeleportAbsolute_Request {
        x: number;
        y: number;
        theta: number;
      }
      export interface TeleportAbsolute_RequestConstructor {
        new(other?: TeleportAbsolute_Request): TeleportAbsolute_Request;
      }
      export interface TeleportAbsolute_Response {
      }
      export interface TeleportAbsolute_ResponseConstructor {
        new(other?: TeleportAbsolute_Response): TeleportAbsolute_Response;
      }
      export interface TeleportRelativeConstructor extends ROSService {
        readonly Request: TeleportRelative_RequestConstructor;
        readonly Response: TeleportRelative_ResponseConstructor;
      }
      export interface TeleportRelative_Request {
        linear: number;
        angular: number;
      }
      export interface TeleportRelative_RequestConstructor {
        new(other?: TeleportRelative_Request): TeleportRelative_Request;
      }
      export interface TeleportRelative_Response {
      }
      export interface TeleportRelative_ResponseConstructor {
        new(other?: TeleportRelative_Response): TeleportRelative_Response;
      }
    }
  }

  namespace unique_identifier_msgs {
    namespace msg {
      export interface UUID {
        uuid: number[] | Uint8Array;
      }
      export interface UUIDConstructor {
        new(other?: UUID): UUID;
      }
    }
  }

  namespace vision_msgs {
    namespace msg {
      export interface BoundingBox2D {
        center: vision_msgs.msg.Pose2D;
        size_x: number;
        size_y: number;
      }
      export interface BoundingBox2DConstructor {
        new(other?: BoundingBox2D): BoundingBox2D;
      }
      export interface BoundingBox2DArray {
        header: std_msgs.msg.Header;
        boxes: vision_msgs.msg.BoundingBox2D[];
      }
      export interface BoundingBox2DArrayConstructor {
        new(other?: BoundingBox2DArray): BoundingBox2DArray;
      }
      export interface BoundingBox3D {
        center: geometry_msgs.msg.Pose;
        size: geometry_msgs.msg.Vector3;
      }
      export interface BoundingBox3DConstructor {
        new(other?: BoundingBox3D): BoundingBox3D;
      }
      export interface BoundingBox3DArray {
        header: std_msgs.msg.Header;
        boxes: vision_msgs.msg.BoundingBox3D[];
      }
      export interface BoundingBox3DArrayConstructor {
        new(other?: BoundingBox3DArray): BoundingBox3DArray;
      }
      export interface Classification {
        header: std_msgs.msg.Header;
        results: vision_msgs.msg.ObjectHypothesis[];
      }
      export interface ClassificationConstructor {
        new(other?: Classification): Classification;
      }
      export interface Detection2D {
        header: std_msgs.msg.Header;
        results: vision_msgs.msg.ObjectHypothesisWithPose[];
        bbox: vision_msgs.msg.BoundingBox2D;
        id: string;
      }
      export interface Detection2DConstructor {
        new(other?: Detection2D): Detection2D;
      }
      export interface Detection2DArray {
        header: std_msgs.msg.Header;
        detections: vision_msgs.msg.Detection2D[];
      }
      export interface Detection2DArrayConstructor {
        new(other?: Detection2DArray): Detection2DArray;
      }
      export interface Detection3D {
        header: std_msgs.msg.Header;
        results: vision_msgs.msg.ObjectHypothesisWithPose[];
        bbox: vision_msgs.msg.BoundingBox3D;
        id: string;
      }
      export interface Detection3DConstructor {
        new(other?: Detection3D): Detection3D;
      }
      export interface Detection3DArray {
        header: std_msgs.msg.Header;
        detections: vision_msgs.msg.Detection3D[];
      }
      export interface Detection3DArrayConstructor {
        new(other?: Detection3DArray): Detection3DArray;
      }
      export interface LabelInfo {
        header: std_msgs.msg.Header;
        class_map: vision_msgs.msg.VisionClass[];
        threshold: number;
      }
      export interface LabelInfoConstructor {
        new(other?: LabelInfo): LabelInfo;
      }
      export interface ObjectHypothesis {
        class_id: string;
        score: number;
      }
      export interface ObjectHypothesisConstructor {
        new(other?: ObjectHypothesis): ObjectHypothesis;
      }
      export interface ObjectHypothesisWithPose {
        hypothesis: vision_msgs.msg.ObjectHypothesis;
        pose: geometry_msgs.msg.PoseWithCovariance;
      }
      export interface ObjectHypothesisWithPoseConstructor {
        new(other?: ObjectHypothesisWithPose): ObjectHypothesisWithPose;
      }
      export interface Point2D {
        x: number;
        y: number;
      }
      export interface Point2DConstructor {
        new(other?: Point2D): Point2D;
      }
      export interface Pose2D {
        position: vision_msgs.msg.Point2D;
        theta: number;
      }
      export interface Pose2DConstructor {
        new(other?: Pose2D): Pose2D;
      }
      export interface VisionClass {
        class_id: number;
        class_name: string;
      }
      export interface VisionClassConstructor {
        new(other?: VisionClass): VisionClass;
      }
      export interface VisionInfo {
        header: std_msgs.msg.Header;
        method: string;
        database_location: string;
        database_version: number;
      }
      export interface VisionInfoConstructor {
        new(other?: VisionInfo): VisionInfo;
      }
    }
  }

  namespace visualization_msgs {
    namespace msg {
      export interface ImageMarker {
        header: std_msgs.msg.Header;
        ns: string;
        id: number;
        type: number;
        action: number;
        position: geometry_msgs.msg.Point;
        scale: number;
        outline_color: std_msgs.msg.ColorRGBA;
        filled: number;
        fill_color: std_msgs.msg.ColorRGBA;
        lifetime: builtin_interfaces.msg.Duration;
        points: geometry_msgs.msg.Point[];
        outline_colors: std_msgs.msg.ColorRGBA[];
      }
      export interface ImageMarkerConstructor {
        readonly CIRCLE: number;
        readonly LINE_STRIP: number;
        readonly LINE_LIST: number;
        readonly POLYGON: number;
        readonly POINTS: number;
        readonly ADD: number;
        readonly REMOVE: number;
        new(other?: ImageMarker): ImageMarker;
      }
      export interface InteractiveMarker {
        header: std_msgs.msg.Header;
        pose: geometry_msgs.msg.Pose;
        name: string;
        description: string;
        scale: number;
        menu_entries: visualization_msgs.msg.MenuEntry[];
        controls: visualization_msgs.msg.InteractiveMarkerControl[];
      }
      export interface InteractiveMarkerConstructor {
        new(other?: InteractiveMarker): InteractiveMarker;
      }
      export interface InteractiveMarkerControl {
        name: string;
        orientation: geometry_msgs.msg.Quaternion;
        orientation_mode: number;
        interaction_mode: number;
        always_visible: boolean;
        markers: visualization_msgs.msg.Marker[];
        independent_marker_orientation: boolean;
        description: string;
      }
      export interface InteractiveMarkerControlConstructor {
        readonly INHERIT: number;
        readonly FIXED: number;
        readonly VIEW_FACING: number;
        readonly NONE: number;
        readonly MENU: number;
        readonly BUTTON: number;
        readonly MOVE_AXIS: number;
        readonly MOVE_PLANE: number;
        readonly ROTATE_AXIS: number;
        readonly MOVE_ROTATE: number;
        readonly MOVE_3D: number;
        readonly ROTATE_3D: number;
        readonly MOVE_ROTATE_3D: number;
        new(other?: InteractiveMarkerControl): InteractiveMarkerControl;
      }
      export interface InteractiveMarkerFeedback {
        header: std_msgs.msg.Header;
        client_id: string;
        marker_name: string;
        control_name: string;
        event_type: number;
        pose: geometry_msgs.msg.Pose;
        menu_entry_id: number;
        mouse_point: geometry_msgs.msg.Point;
        mouse_point_valid: boolean;
      }
      export interface InteractiveMarkerFeedbackConstructor {
        readonly KEEP_ALIVE: number;
        readonly POSE_UPDATE: number;
        readonly MENU_SELECT: number;
        readonly BUTTON_CLICK: number;
        readonly MOUSE_DOWN: number;
        readonly MOUSE_UP: number;
        new(other?: InteractiveMarkerFeedback): InteractiveMarkerFeedback;
      }
      export interface InteractiveMarkerInit {
        server_id: string;
        seq_num: number;
        markers: visualization_msgs.msg.InteractiveMarker[];
      }
      export interface InteractiveMarkerInitConstructor {
        new(other?: InteractiveMarkerInit): InteractiveMarkerInit;
      }
      export interface InteractiveMarkerPose {
        header: std_msgs.msg.Header;
        pose: geometry_msgs.msg.Pose;
        name: string;
      }
      export interface InteractiveMarkerPoseConstructor {
        new(other?: InteractiveMarkerPose): InteractiveMarkerPose;
      }
      export interface InteractiveMarkerUpdate {
        server_id: string;
        seq_num: number;
        type: number;
        markers: visualization_msgs.msg.InteractiveMarker[];
        poses: visualization_msgs.msg.InteractiveMarkerPose[];
        erases: string[];
      }
      export interface InteractiveMarkerUpdateConstructor {
        readonly KEEP_ALIVE: number;
        readonly UPDATE: number;
        new(other?: InteractiveMarkerUpdate): InteractiveMarkerUpdate;
      }
      export interface Marker {
        header: std_msgs.msg.Header;
        ns: string;
        id: number;
        type: number;
        action: number;
        pose: geometry_msgs.msg.Pose;
        scale: geometry_msgs.msg.Vector3;
        color: std_msgs.msg.ColorRGBA;
        lifetime: builtin_interfaces.msg.Duration;
        frame_locked: boolean;
        points: geometry_msgs.msg.Point[];
        colors: std_msgs.msg.ColorRGBA[];
        texture_resource: string;
        texture: sensor_msgs.msg.CompressedImage;
        uv_coordinates: visualization_msgs.msg.UVCoordinate[];
        text: string;
        mesh_resource: string;
        mesh_file: visualization_msgs.msg.MeshFile;
        mesh_use_embedded_materials: boolean;
      }
      export interface MarkerConstructor {
        readonly ARROW: number;
        readonly CUBE: number;
        readonly SPHERE: number;
        readonly CYLINDER: number;
        readonly LINE_STRIP: number;
        readonly LINE_LIST: number;
        readonly CUBE_LIST: number;
        readonly SPHERE_LIST: number;
        readonly POINTS: number;
        readonly TEXT_VIEW_FACING: number;
        readonly MESH_RESOURCE: number;
        readonly TRIANGLE_LIST: number;
        readonly ADD: number;
        readonly MODIFY: number;
        readonly DELETE: number;
        readonly DELETEALL: number;
        new(other?: Marker): Marker;
      }
      export interface MarkerArray {
        markers: visualization_msgs.msg.Marker[];
      }
      export interface MarkerArrayConstructor {
        new(other?: MarkerArray): MarkerArray;
      }
      export interface MenuEntry {
        id: number;
        parent_id: number;
        title: string;
        command: string;
        command_type: number;
      }
      export interface MenuEntryConstructor {
        readonly FEEDBACK: number;
        readonly ROSRUN: number;
        readonly ROSLAUNCH: number;
        new(other?: MenuEntry): MenuEntry;
      }
      export interface MeshFile {
        filename: string;
        data: number[] | Uint8Array;
      }
      export interface MeshFileConstructor {
        new(other?: MeshFile): MeshFile;
      }
      export interface UVCoordinate {
        u: number;
        v: number;
      }
      export interface UVCoordinateConstructor {
        new(other?: UVCoordinate): UVCoordinate;
      }
    }
    namespace srv {
      export interface GetInteractiveMarkersConstructor extends ROSService {
        readonly Request: GetInteractiveMarkers_RequestConstructor;
        readonly Response: GetInteractiveMarkers_ResponseConstructor;
      }
      export interface GetInteractiveMarkers_Request {
      }
      export interface GetInteractiveMarkers_RequestConstructor {
        new(other?: GetInteractiveMarkers_Request): GetInteractiveMarkers_Request;
      }
      export interface GetInteractiveMarkers_Response {
        sequence_number: number;
        markers: visualization_msgs.msg.InteractiveMarker[];
      }
      export interface GetInteractiveMarkers_ResponseConstructor {
        new(other?: GetInteractiveMarkers_Response): GetInteractiveMarkers_Response;
      }
    }
  }

  type MessagesMap = {
    'string': string,
    'ackermann_msgs/msg/AckermannDrive': ackermann_msgs.msg.AckermannDrive,
    'ackermann_msgs/msg/AckermannDriveStamped': ackermann_msgs.msg.AckermannDriveStamped,
    'action_msgs/msg/GoalInfo': action_msgs.msg.GoalInfo,
    'action_msgs/msg/GoalStatus': action_msgs.msg.GoalStatus,
    'action_msgs/msg/GoalStatusArray': action_msgs.msg.GoalStatusArray,
    'action_msgs/srv/CancelGoal_Request': action_msgs.srv.CancelGoal_Request,
    'action_msgs/srv/CancelGoal_Response': action_msgs.srv.CancelGoal_Response,
    'actionlib_msgs/msg/GoalID': actionlib_msgs.msg.GoalID,
    'actionlib_msgs/msg/GoalStatus': actionlib_msgs.msg.GoalStatus,
    'actionlib_msgs/msg/GoalStatusArray': actionlib_msgs.msg.GoalStatusArray,
    'actuator_msgs/msg/Actuators': actuator_msgs.msg.Actuators,
    'actuator_msgs/msg/ActuatorsAngularPosition': actuator_msgs.msg.ActuatorsAngularPosition,
    'actuator_msgs/msg/ActuatorsAngularVelocity': actuator_msgs.msg.ActuatorsAngularVelocity,
    'actuator_msgs/msg/ActuatorsLinearPosition': actuator_msgs.msg.ActuatorsLinearPosition,
    'actuator_msgs/msg/ActuatorsLinearVelocity': actuator_msgs.msg.ActuatorsLinearVelocity,
    'actuator_msgs/msg/ActuatorsNormalized': actuator_msgs.msg.ActuatorsNormalized,
    'actuator_msgs/msg/ActuatorsPosition': actuator_msgs.msg.ActuatorsPosition,
    'actuator_msgs/msg/ActuatorsVelocity': actuator_msgs.msg.ActuatorsVelocity,
    'bond/msg/Constants': bond.msg.Constants,
    'bond/msg/Status': bond.msg.Status,
    'builtin_interfaces/msg/Duration': builtin_interfaces.msg.Duration,
    'builtin_interfaces/msg/Time': builtin_interfaces.msg.Time,
    'cartographer_ros_msgs/msg/BagfileProgress': cartographer_ros_msgs.msg.BagfileProgress,
    'cartographer_ros_msgs/msg/HistogramBucket': cartographer_ros_msgs.msg.HistogramBucket,
    'cartographer_ros_msgs/msg/LandmarkEntry': cartographer_ros_msgs.msg.LandmarkEntry,
    'cartographer_ros_msgs/msg/LandmarkList': cartographer_ros_msgs.msg.LandmarkList,
    'cartographer_ros_msgs/msg/Metric': cartographer_ros_msgs.msg.Metric,
    'cartographer_ros_msgs/msg/MetricFamily': cartographer_ros_msgs.msg.MetricFamily,
    'cartographer_ros_msgs/msg/MetricLabel': cartographer_ros_msgs.msg.MetricLabel,
    'cartographer_ros_msgs/msg/StatusCode': cartographer_ros_msgs.msg.StatusCode,
    'cartographer_ros_msgs/msg/StatusResponse': cartographer_ros_msgs.msg.StatusResponse,
    'cartographer_ros_msgs/msg/SubmapEntry': cartographer_ros_msgs.msg.SubmapEntry,
    'cartographer_ros_msgs/msg/SubmapList': cartographer_ros_msgs.msg.SubmapList,
    'cartographer_ros_msgs/msg/SubmapTexture': cartographer_ros_msgs.msg.SubmapTexture,
    'cartographer_ros_msgs/msg/TrajectoryStates': cartographer_ros_msgs.msg.TrajectoryStates,
    'cartographer_ros_msgs/srv/FinishTrajectory_Request': cartographer_ros_msgs.srv.FinishTrajectory_Request,
    'cartographer_ros_msgs/srv/FinishTrajectory_Response': cartographer_ros_msgs.srv.FinishTrajectory_Response,
    'cartographer_ros_msgs/srv/GetTrajectoryStates_Request': cartographer_ros_msgs.srv.GetTrajectoryStates_Request,
    'cartographer_ros_msgs/srv/GetTrajectoryStates_Response': cartographer_ros_msgs.srv.GetTrajectoryStates_Response,
    'cartographer_ros_msgs/srv/ReadMetrics_Request': cartographer_ros_msgs.srv.ReadMetrics_Request,
    'cartographer_ros_msgs/srv/ReadMetrics_Response': cartographer_ros_msgs.srv.ReadMetrics_Response,
    'cartographer_ros_msgs/srv/StartTrajectory_Request': cartographer_ros_msgs.srv.StartTrajectory_Request,
    'cartographer_ros_msgs/srv/StartTrajectory_Response': cartographer_ros_msgs.srv.StartTrajectory_Response,
    'cartographer_ros_msgs/srv/SubmapQuery_Request': cartographer_ros_msgs.srv.SubmapQuery_Request,
    'cartographer_ros_msgs/srv/SubmapQuery_Response': cartographer_ros_msgs.srv.SubmapQuery_Response,
    'cartographer_ros_msgs/srv/TrajectoryQuery_Request': cartographer_ros_msgs.srv.TrajectoryQuery_Request,
    'cartographer_ros_msgs/srv/TrajectoryQuery_Response': cartographer_ros_msgs.srv.TrajectoryQuery_Response,
    'cartographer_ros_msgs/srv/WriteState_Request': cartographer_ros_msgs.srv.WriteState_Request,
    'cartographer_ros_msgs/srv/WriteState_Response': cartographer_ros_msgs.srv.WriteState_Response,
    'composition_interfaces/srv/ListNodes_Request': composition_interfaces.srv.ListNodes_Request,
    'composition_interfaces/srv/ListNodes_Response': composition_interfaces.srv.ListNodes_Response,
    'composition_interfaces/srv/LoadNode_Request': composition_interfaces.srv.LoadNode_Request,
    'composition_interfaces/srv/LoadNode_Response': composition_interfaces.srv.LoadNode_Response,
    'composition_interfaces/srv/UnloadNode_Request': composition_interfaces.srv.UnloadNode_Request,
    'composition_interfaces/srv/UnloadNode_Response': composition_interfaces.srv.UnloadNode_Response,
    'control_msgs/action/FollowJointTrajectory_Feedback': control_msgs.action.FollowJointTrajectory_Feedback,
    'control_msgs/action/FollowJointTrajectory_FeedbackMessage': control_msgs.action.FollowJointTrajectory_FeedbackMessage,
    'control_msgs/action/FollowJointTrajectory_GetResult_Request': control_msgs.action.FollowJointTrajectory_GetResult_Request,
    'control_msgs/action/FollowJointTrajectory_GetResult_Response': control_msgs.action.FollowJointTrajectory_GetResult_Response,
    'control_msgs/action/FollowJointTrajectory_Goal': control_msgs.action.FollowJointTrajectory_Goal,
    'control_msgs/action/FollowJointTrajectory_Result': control_msgs.action.FollowJointTrajectory_Result,
    'control_msgs/action/FollowJointTrajectory_SendGoal_Request': control_msgs.action.FollowJointTrajectory_SendGoal_Request,
    'control_msgs/action/FollowJointTrajectory_SendGoal_Response': control_msgs.action.FollowJointTrajectory_SendGoal_Response,
    'control_msgs/action/GripperCommand_Feedback': control_msgs.action.GripperCommand_Feedback,
    'control_msgs/action/GripperCommand_FeedbackMessage': control_msgs.action.GripperCommand_FeedbackMessage,
    'control_msgs/action/GripperCommand_GetResult_Request': control_msgs.action.GripperCommand_GetResult_Request,
    'control_msgs/action/GripperCommand_GetResult_Response': control_msgs.action.GripperCommand_GetResult_Response,
    'control_msgs/action/GripperCommand_Goal': control_msgs.action.GripperCommand_Goal,
    'control_msgs/action/GripperCommand_Result': control_msgs.action.GripperCommand_Result,
    'control_msgs/action/GripperCommand_SendGoal_Request': control_msgs.action.GripperCommand_SendGoal_Request,
    'control_msgs/action/GripperCommand_SendGoal_Response': control_msgs.action.GripperCommand_SendGoal_Response,
    'control_msgs/action/JointTrajectory_Feedback': control_msgs.action.JointTrajectory_Feedback,
    'control_msgs/action/JointTrajectory_FeedbackMessage': control_msgs.action.JointTrajectory_FeedbackMessage,
    'control_msgs/action/JointTrajectory_GetResult_Request': control_msgs.action.JointTrajectory_GetResult_Request,
    'control_msgs/action/JointTrajectory_GetResult_Response': control_msgs.action.JointTrajectory_GetResult_Response,
    'control_msgs/action/JointTrajectory_Goal': control_msgs.action.JointTrajectory_Goal,
    'control_msgs/action/JointTrajectory_Result': control_msgs.action.JointTrajectory_Result,
    'control_msgs/action/JointTrajectory_SendGoal_Request': control_msgs.action.JointTrajectory_SendGoal_Request,
    'control_msgs/action/JointTrajectory_SendGoal_Response': control_msgs.action.JointTrajectory_SendGoal_Response,
    'control_msgs/action/ParallelGripperCommand_Feedback': control_msgs.action.ParallelGripperCommand_Feedback,
    'control_msgs/action/ParallelGripperCommand_FeedbackMessage': control_msgs.action.ParallelGripperCommand_FeedbackMessage,
    'control_msgs/action/ParallelGripperCommand_GetResult_Request': control_msgs.action.ParallelGripperCommand_GetResult_Request,
    'control_msgs/action/ParallelGripperCommand_GetResult_Response': control_msgs.action.ParallelGripperCommand_GetResult_Response,
    'control_msgs/action/ParallelGripperCommand_Goal': control_msgs.action.ParallelGripperCommand_Goal,
    'control_msgs/action/ParallelGripperCommand_Result': control_msgs.action.ParallelGripperCommand_Result,
    'control_msgs/action/ParallelGripperCommand_SendGoal_Request': control_msgs.action.ParallelGripperCommand_SendGoal_Request,
    'control_msgs/action/ParallelGripperCommand_SendGoal_Response': control_msgs.action.ParallelGripperCommand_SendGoal_Response,
    'control_msgs/action/PointHead_Feedback': control_msgs.action.PointHead_Feedback,
    'control_msgs/action/PointHead_FeedbackMessage': control_msgs.action.PointHead_FeedbackMessage,
    'control_msgs/action/PointHead_GetResult_Request': control_msgs.action.PointHead_GetResult_Request,
    'control_msgs/action/PointHead_GetResult_Response': control_msgs.action.PointHead_GetResult_Response,
    'control_msgs/action/PointHead_Goal': control_msgs.action.PointHead_Goal,
    'control_msgs/action/PointHead_Result': control_msgs.action.PointHead_Result,
    'control_msgs/action/PointHead_SendGoal_Request': control_msgs.action.PointHead_SendGoal_Request,
    'control_msgs/action/PointHead_SendGoal_Response': control_msgs.action.PointHead_SendGoal_Response,
    'control_msgs/action/SingleJointPosition_Feedback': control_msgs.action.SingleJointPosition_Feedback,
    'control_msgs/action/SingleJointPosition_FeedbackMessage': control_msgs.action.SingleJointPosition_FeedbackMessage,
    'control_msgs/action/SingleJointPosition_GetResult_Request': control_msgs.action.SingleJointPosition_GetResult_Request,
    'control_msgs/action/SingleJointPosition_GetResult_Response': control_msgs.action.SingleJointPosition_GetResult_Response,
    'control_msgs/action/SingleJointPosition_Goal': control_msgs.action.SingleJointPosition_Goal,
    'control_msgs/action/SingleJointPosition_Result': control_msgs.action.SingleJointPosition_Result,
    'control_msgs/action/SingleJointPosition_SendGoal_Request': control_msgs.action.SingleJointPosition_SendGoal_Request,
    'control_msgs/action/SingleJointPosition_SendGoal_Response': control_msgs.action.SingleJointPosition_SendGoal_Response,
    'control_msgs/msg/AdmittanceControllerState': control_msgs.msg.AdmittanceControllerState,
    'control_msgs/msg/DynamicJointState': control_msgs.msg.DynamicJointState,
    'control_msgs/msg/GripperCommand': control_msgs.msg.GripperCommand,
    'control_msgs/msg/InterfaceValue': control_msgs.msg.InterfaceValue,
    'control_msgs/msg/JointComponentTolerance': control_msgs.msg.JointComponentTolerance,
    'control_msgs/msg/JointControllerState': control_msgs.msg.JointControllerState,
    'control_msgs/msg/JointJog': control_msgs.msg.JointJog,
    'control_msgs/msg/JointTolerance': control_msgs.msg.JointTolerance,
    'control_msgs/msg/JointTrajectoryControllerState': control_msgs.msg.JointTrajectoryControllerState,
    'control_msgs/msg/MecanumDriveControllerState': control_msgs.msg.MecanumDriveControllerState,
    'control_msgs/msg/MultiDOFCommand': control_msgs.msg.MultiDOFCommand,
    'control_msgs/msg/MultiDOFStateStamped': control_msgs.msg.MultiDOFStateStamped,
    'control_msgs/msg/PidState': control_msgs.msg.PidState,
    'control_msgs/msg/SingleDOFState': control_msgs.msg.SingleDOFState,
    'control_msgs/msg/SingleDOFStateStamped': control_msgs.msg.SingleDOFStateStamped,
    'control_msgs/msg/SteeringControllerStatus': control_msgs.msg.SteeringControllerStatus,
    'control_msgs/srv/QueryCalibrationState_Request': control_msgs.srv.QueryCalibrationState_Request,
    'control_msgs/srv/QueryCalibrationState_Response': control_msgs.srv.QueryCalibrationState_Response,
    'control_msgs/srv/QueryTrajectoryState_Request': control_msgs.srv.QueryTrajectoryState_Request,
    'control_msgs/srv/QueryTrajectoryState_Response': control_msgs.srv.QueryTrajectoryState_Response,
    'controller_manager_msgs/msg/ChainConnection': controller_manager_msgs.msg.ChainConnection,
    'controller_manager_msgs/msg/ControllerState': controller_manager_msgs.msg.ControllerState,
    'controller_manager_msgs/msg/HardwareComponentState': controller_manager_msgs.msg.HardwareComponentState,
    'controller_manager_msgs/msg/HardwareInterface': controller_manager_msgs.msg.HardwareInterface,
    'controller_manager_msgs/srv/ConfigureController_Request': controller_manager_msgs.srv.ConfigureController_Request,
    'controller_manager_msgs/srv/ConfigureController_Response': controller_manager_msgs.srv.ConfigureController_Response,
    'controller_manager_msgs/srv/ListControllerTypes_Request': controller_manager_msgs.srv.ListControllerTypes_Request,
    'controller_manager_msgs/srv/ListControllerTypes_Response': controller_manager_msgs.srv.ListControllerTypes_Response,
    'controller_manager_msgs/srv/ListControllers_Request': controller_manager_msgs.srv.ListControllers_Request,
    'controller_manager_msgs/srv/ListControllers_Response': controller_manager_msgs.srv.ListControllers_Response,
    'controller_manager_msgs/srv/ListHardwareComponents_Request': controller_manager_msgs.srv.ListHardwareComponents_Request,
    'controller_manager_msgs/srv/ListHardwareComponents_Response': controller_manager_msgs.srv.ListHardwareComponents_Response,
    'controller_manager_msgs/srv/ListHardwareInterfaces_Request': controller_manager_msgs.srv.ListHardwareInterfaces_Request,
    'controller_manager_msgs/srv/ListHardwareInterfaces_Response': controller_manager_msgs.srv.ListHardwareInterfaces_Response,
    'controller_manager_msgs/srv/LoadController_Request': controller_manager_msgs.srv.LoadController_Request,
    'controller_manager_msgs/srv/LoadController_Response': controller_manager_msgs.srv.LoadController_Response,
    'controller_manager_msgs/srv/ReloadControllerLibraries_Request': controller_manager_msgs.srv.ReloadControllerLibraries_Request,
    'controller_manager_msgs/srv/ReloadControllerLibraries_Response': controller_manager_msgs.srv.ReloadControllerLibraries_Response,
    'controller_manager_msgs/srv/SetHardwareComponentState_Request': controller_manager_msgs.srv.SetHardwareComponentState_Request,
    'controller_manager_msgs/srv/SetHardwareComponentState_Response': controller_manager_msgs.srv.SetHardwareComponentState_Response,
    'controller_manager_msgs/srv/SwitchController_Request': controller_manager_msgs.srv.SwitchController_Request,
    'controller_manager_msgs/srv/SwitchController_Response': controller_manager_msgs.srv.SwitchController_Response,
    'controller_manager_msgs/srv/UnloadController_Request': controller_manager_msgs.srv.UnloadController_Request,
    'controller_manager_msgs/srv/UnloadController_Response': controller_manager_msgs.srv.UnloadController_Response,
    'diagnostic_msgs/msg/DiagnosticArray': diagnostic_msgs.msg.DiagnosticArray,
    'diagnostic_msgs/msg/DiagnosticStatus': diagnostic_msgs.msg.DiagnosticStatus,
    'diagnostic_msgs/msg/KeyValue': diagnostic_msgs.msg.KeyValue,
    'diagnostic_msgs/srv/AddDiagnostics_Request': diagnostic_msgs.srv.AddDiagnostics_Request,
    'diagnostic_msgs/srv/AddDiagnostics_Response': diagnostic_msgs.srv.AddDiagnostics_Response,
    'diagnostic_msgs/srv/SelfTest_Request': diagnostic_msgs.srv.SelfTest_Request,
    'diagnostic_msgs/srv/SelfTest_Response': diagnostic_msgs.srv.SelfTest_Response,
    'dwb_msgs/msg/CriticScore': dwb_msgs.msg.CriticScore,
    'dwb_msgs/msg/LocalPlanEvaluation': dwb_msgs.msg.LocalPlanEvaluation,
    'dwb_msgs/msg/Trajectory2D': dwb_msgs.msg.Trajectory2D,
    'dwb_msgs/msg/TrajectoryScore': dwb_msgs.msg.TrajectoryScore,
    'dwb_msgs/srv/DebugLocalPlan_Request': dwb_msgs.srv.DebugLocalPlan_Request,
    'dwb_msgs/srv/DebugLocalPlan_Response': dwb_msgs.srv.DebugLocalPlan_Response,
    'dwb_msgs/srv/GenerateTrajectory_Request': dwb_msgs.srv.GenerateTrajectory_Request,
    'dwb_msgs/srv/GenerateTrajectory_Response': dwb_msgs.srv.GenerateTrajectory_Response,
    'dwb_msgs/srv/GenerateTwists_Request': dwb_msgs.srv.GenerateTwists_Request,
    'dwb_msgs/srv/GenerateTwists_Response': dwb_msgs.srv.GenerateTwists_Response,
    'dwb_msgs/srv/GetCriticScore_Request': dwb_msgs.srv.GetCriticScore_Request,
    'dwb_msgs/srv/GetCriticScore_Response': dwb_msgs.srv.GetCriticScore_Response,
    'dwb_msgs/srv/ScoreTrajectory_Request': dwb_msgs.srv.ScoreTrajectory_Request,
    'dwb_msgs/srv/ScoreTrajectory_Response': dwb_msgs.srv.ScoreTrajectory_Response,
    'geometry_msgs/msg/Accel': geometry_msgs.msg.Accel,
    'geometry_msgs/msg/AccelStamped': geometry_msgs.msg.AccelStamped,
    'geometry_msgs/msg/AccelWithCovariance': geometry_msgs.msg.AccelWithCovariance,
    'geometry_msgs/msg/AccelWithCovarianceStamped': geometry_msgs.msg.AccelWithCovarianceStamped,
    'geometry_msgs/msg/Inertia': geometry_msgs.msg.Inertia,
    'geometry_msgs/msg/InertiaStamped': geometry_msgs.msg.InertiaStamped,
    'geometry_msgs/msg/Point': geometry_msgs.msg.Point,
    'geometry_msgs/msg/Point32': geometry_msgs.msg.Point32,
    'geometry_msgs/msg/PointStamped': geometry_msgs.msg.PointStamped,
    'geometry_msgs/msg/Polygon': geometry_msgs.msg.Polygon,
    'geometry_msgs/msg/PolygonStamped': geometry_msgs.msg.PolygonStamped,
    'geometry_msgs/msg/Pose': geometry_msgs.msg.Pose,
    'geometry_msgs/msg/Pose2D': geometry_msgs.msg.Pose2D,
    'geometry_msgs/msg/PoseArray': geometry_msgs.msg.PoseArray,
    'geometry_msgs/msg/PoseStamped': geometry_msgs.msg.PoseStamped,
    'geometry_msgs/msg/PoseWithCovariance': geometry_msgs.msg.PoseWithCovariance,
    'geometry_msgs/msg/PoseWithCovarianceStamped': geometry_msgs.msg.PoseWithCovarianceStamped,
    'geometry_msgs/msg/Quaternion': geometry_msgs.msg.Quaternion,
    'geometry_msgs/msg/QuaternionStamped': geometry_msgs.msg.QuaternionStamped,
    'geometry_msgs/msg/Transform': geometry_msgs.msg.Transform,
    'geometry_msgs/msg/TransformStamped': geometry_msgs.msg.TransformStamped,
    'geometry_msgs/msg/Twist': geometry_msgs.msg.Twist,
    'geometry_msgs/msg/TwistStamped': geometry_msgs.msg.TwistStamped,
    'geometry_msgs/msg/TwistWithCovariance': geometry_msgs.msg.TwistWithCovariance,
    'geometry_msgs/msg/TwistWithCovarianceStamped': geometry_msgs.msg.TwistWithCovarianceStamped,
    'geometry_msgs/msg/Vector3': geometry_msgs.msg.Vector3,
    'geometry_msgs/msg/Vector3Stamped': geometry_msgs.msg.Vector3Stamped,
    'geometry_msgs/msg/VelocityStamped': geometry_msgs.msg.VelocityStamped,
    'geometry_msgs/msg/Wrench': geometry_msgs.msg.Wrench,
    'geometry_msgs/msg/WrenchStamped': geometry_msgs.msg.WrenchStamped,
    'gps_msgs/msg/GPSFix': gps_msgs.msg.GPSFix,
    'gps_msgs/msg/GPSStatus': gps_msgs.msg.GPSStatus,
    'graph_msgs/msg/Edges': graph_msgs.msg.Edges,
    'graph_msgs/msg/GeometryGraph': graph_msgs.msg.GeometryGraph,
    'irobot_create_msgs/action/AudioNoteSequence_Feedback': irobot_create_msgs.action.AudioNoteSequence_Feedback,
    'irobot_create_msgs/action/AudioNoteSequence_FeedbackMessage': irobot_create_msgs.action.AudioNoteSequence_FeedbackMessage,
    'irobot_create_msgs/action/AudioNoteSequence_GetResult_Request': irobot_create_msgs.action.AudioNoteSequence_GetResult_Request,
    'irobot_create_msgs/action/AudioNoteSequence_GetResult_Response': irobot_create_msgs.action.AudioNoteSequence_GetResult_Response,
    'irobot_create_msgs/action/AudioNoteSequence_Goal': irobot_create_msgs.action.AudioNoteSequence_Goal,
    'irobot_create_msgs/action/AudioNoteSequence_Result': irobot_create_msgs.action.AudioNoteSequence_Result,
    'irobot_create_msgs/action/AudioNoteSequence_SendGoal_Request': irobot_create_msgs.action.AudioNoteSequence_SendGoal_Request,
    'irobot_create_msgs/action/AudioNoteSequence_SendGoal_Response': irobot_create_msgs.action.AudioNoteSequence_SendGoal_Response,
    'irobot_create_msgs/action/Dock_Feedback': irobot_create_msgs.action.Dock_Feedback,
    'irobot_create_msgs/action/Dock_FeedbackMessage': irobot_create_msgs.action.Dock_FeedbackMessage,
    'irobot_create_msgs/action/Dock_GetResult_Request': irobot_create_msgs.action.Dock_GetResult_Request,
    'irobot_create_msgs/action/Dock_GetResult_Response': irobot_create_msgs.action.Dock_GetResult_Response,
    'irobot_create_msgs/action/Dock_Goal': irobot_create_msgs.action.Dock_Goal,
    'irobot_create_msgs/action/Dock_Result': irobot_create_msgs.action.Dock_Result,
    'irobot_create_msgs/action/Dock_SendGoal_Request': irobot_create_msgs.action.Dock_SendGoal_Request,
    'irobot_create_msgs/action/Dock_SendGoal_Response': irobot_create_msgs.action.Dock_SendGoal_Response,
    'irobot_create_msgs/action/DriveArc_Feedback': irobot_create_msgs.action.DriveArc_Feedback,
    'irobot_create_msgs/action/DriveArc_FeedbackMessage': irobot_create_msgs.action.DriveArc_FeedbackMessage,
    'irobot_create_msgs/action/DriveArc_GetResult_Request': irobot_create_msgs.action.DriveArc_GetResult_Request,
    'irobot_create_msgs/action/DriveArc_GetResult_Response': irobot_create_msgs.action.DriveArc_GetResult_Response,
    'irobot_create_msgs/action/DriveArc_Goal': irobot_create_msgs.action.DriveArc_Goal,
    'irobot_create_msgs/action/DriveArc_Result': irobot_create_msgs.action.DriveArc_Result,
    'irobot_create_msgs/action/DriveArc_SendGoal_Request': irobot_create_msgs.action.DriveArc_SendGoal_Request,
    'irobot_create_msgs/action/DriveArc_SendGoal_Response': irobot_create_msgs.action.DriveArc_SendGoal_Response,
    'irobot_create_msgs/action/DriveDistance_Feedback': irobot_create_msgs.action.DriveDistance_Feedback,
    'irobot_create_msgs/action/DriveDistance_FeedbackMessage': irobot_create_msgs.action.DriveDistance_FeedbackMessage,
    'irobot_create_msgs/action/DriveDistance_GetResult_Request': irobot_create_msgs.action.DriveDistance_GetResult_Request,
    'irobot_create_msgs/action/DriveDistance_GetResult_Response': irobot_create_msgs.action.DriveDistance_GetResult_Response,
    'irobot_create_msgs/action/DriveDistance_Goal': irobot_create_msgs.action.DriveDistance_Goal,
    'irobot_create_msgs/action/DriveDistance_Result': irobot_create_msgs.action.DriveDistance_Result,
    'irobot_create_msgs/action/DriveDistance_SendGoal_Request': irobot_create_msgs.action.DriveDistance_SendGoal_Request,
    'irobot_create_msgs/action/DriveDistance_SendGoal_Response': irobot_create_msgs.action.DriveDistance_SendGoal_Response,
    'irobot_create_msgs/action/LedAnimation_Feedback': irobot_create_msgs.action.LedAnimation_Feedback,
    'irobot_create_msgs/action/LedAnimation_FeedbackMessage': irobot_create_msgs.action.LedAnimation_FeedbackMessage,
    'irobot_create_msgs/action/LedAnimation_GetResult_Request': irobot_create_msgs.action.LedAnimation_GetResult_Request,
    'irobot_create_msgs/action/LedAnimation_GetResult_Response': irobot_create_msgs.action.LedAnimation_GetResult_Response,
    'irobot_create_msgs/action/LedAnimation_Goal': irobot_create_msgs.action.LedAnimation_Goal,
    'irobot_create_msgs/action/LedAnimation_Result': irobot_create_msgs.action.LedAnimation_Result,
    'irobot_create_msgs/action/LedAnimation_SendGoal_Request': irobot_create_msgs.action.LedAnimation_SendGoal_Request,
    'irobot_create_msgs/action/LedAnimation_SendGoal_Response': irobot_create_msgs.action.LedAnimation_SendGoal_Response,
    'irobot_create_msgs/action/NavigateToPosition_Feedback': irobot_create_msgs.action.NavigateToPosition_Feedback,
    'irobot_create_msgs/action/NavigateToPosition_FeedbackMessage': irobot_create_msgs.action.NavigateToPosition_FeedbackMessage,
    'irobot_create_msgs/action/NavigateToPosition_GetResult_Request': irobot_create_msgs.action.NavigateToPosition_GetResult_Request,
    'irobot_create_msgs/action/NavigateToPosition_GetResult_Response': irobot_create_msgs.action.NavigateToPosition_GetResult_Response,
    'irobot_create_msgs/action/NavigateToPosition_Goal': irobot_create_msgs.action.NavigateToPosition_Goal,
    'irobot_create_msgs/action/NavigateToPosition_Result': irobot_create_msgs.action.NavigateToPosition_Result,
    'irobot_create_msgs/action/NavigateToPosition_SendGoal_Request': irobot_create_msgs.action.NavigateToPosition_SendGoal_Request,
    'irobot_create_msgs/action/NavigateToPosition_SendGoal_Response': irobot_create_msgs.action.NavigateToPosition_SendGoal_Response,
    'irobot_create_msgs/action/RotateAngle_Feedback': irobot_create_msgs.action.RotateAngle_Feedback,
    'irobot_create_msgs/action/RotateAngle_FeedbackMessage': irobot_create_msgs.action.RotateAngle_FeedbackMessage,
    'irobot_create_msgs/action/RotateAngle_GetResult_Request': irobot_create_msgs.action.RotateAngle_GetResult_Request,
    'irobot_create_msgs/action/RotateAngle_GetResult_Response': irobot_create_msgs.action.RotateAngle_GetResult_Response,
    'irobot_create_msgs/action/RotateAngle_Goal': irobot_create_msgs.action.RotateAngle_Goal,
    'irobot_create_msgs/action/RotateAngle_Result': irobot_create_msgs.action.RotateAngle_Result,
    'irobot_create_msgs/action/RotateAngle_SendGoal_Request': irobot_create_msgs.action.RotateAngle_SendGoal_Request,
    'irobot_create_msgs/action/RotateAngle_SendGoal_Response': irobot_create_msgs.action.RotateAngle_SendGoal_Response,
    'irobot_create_msgs/action/Undock_Feedback': irobot_create_msgs.action.Undock_Feedback,
    'irobot_create_msgs/action/Undock_FeedbackMessage': irobot_create_msgs.action.Undock_FeedbackMessage,
    'irobot_create_msgs/action/Undock_GetResult_Request': irobot_create_msgs.action.Undock_GetResult_Request,
    'irobot_create_msgs/action/Undock_GetResult_Response': irobot_create_msgs.action.Undock_GetResult_Response,
    'irobot_create_msgs/action/Undock_Goal': irobot_create_msgs.action.Undock_Goal,
    'irobot_create_msgs/action/Undock_Result': irobot_create_msgs.action.Undock_Result,
    'irobot_create_msgs/action/Undock_SendGoal_Request': irobot_create_msgs.action.Undock_SendGoal_Request,
    'irobot_create_msgs/action/Undock_SendGoal_Response': irobot_create_msgs.action.Undock_SendGoal_Response,
    'irobot_create_msgs/action/WallFollow_Feedback': irobot_create_msgs.action.WallFollow_Feedback,
    'irobot_create_msgs/action/WallFollow_FeedbackMessage': irobot_create_msgs.action.WallFollow_FeedbackMessage,
    'irobot_create_msgs/action/WallFollow_GetResult_Request': irobot_create_msgs.action.WallFollow_GetResult_Request,
    'irobot_create_msgs/action/WallFollow_GetResult_Response': irobot_create_msgs.action.WallFollow_GetResult_Response,
    'irobot_create_msgs/action/WallFollow_Goal': irobot_create_msgs.action.WallFollow_Goal,
    'irobot_create_msgs/action/WallFollow_Result': irobot_create_msgs.action.WallFollow_Result,
    'irobot_create_msgs/action/WallFollow_SendGoal_Request': irobot_create_msgs.action.WallFollow_SendGoal_Request,
    'irobot_create_msgs/action/WallFollow_SendGoal_Response': irobot_create_msgs.action.WallFollow_SendGoal_Response,
    'irobot_create_msgs/msg/AudioNote': irobot_create_msgs.msg.AudioNote,
    'irobot_create_msgs/msg/AudioNoteVector': irobot_create_msgs.msg.AudioNoteVector,
    'irobot_create_msgs/msg/Button': irobot_create_msgs.msg.Button,
    'irobot_create_msgs/msg/DockStatus': irobot_create_msgs.msg.DockStatus,
    'irobot_create_msgs/msg/HazardDetection': irobot_create_msgs.msg.HazardDetection,
    'irobot_create_msgs/msg/HazardDetectionVector': irobot_create_msgs.msg.HazardDetectionVector,
    'irobot_create_msgs/msg/InterfaceButtons': irobot_create_msgs.msg.InterfaceButtons,
    'irobot_create_msgs/msg/IrIntensity': irobot_create_msgs.msg.IrIntensity,
    'irobot_create_msgs/msg/IrIntensityVector': irobot_create_msgs.msg.IrIntensityVector,
    'irobot_create_msgs/msg/IrOpcode': irobot_create_msgs.msg.IrOpcode,
    'irobot_create_msgs/msg/KidnapStatus': irobot_create_msgs.msg.KidnapStatus,
    'irobot_create_msgs/msg/LedColor': irobot_create_msgs.msg.LedColor,
    'irobot_create_msgs/msg/LightringLeds': irobot_create_msgs.msg.LightringLeds,
    'irobot_create_msgs/msg/Mouse': irobot_create_msgs.msg.Mouse,
    'irobot_create_msgs/msg/SlipStatus': irobot_create_msgs.msg.SlipStatus,
    'irobot_create_msgs/msg/StopStatus': irobot_create_msgs.msg.StopStatus,
    'irobot_create_msgs/msg/WheelStatus': irobot_create_msgs.msg.WheelStatus,
    'irobot_create_msgs/msg/WheelTicks': irobot_create_msgs.msg.WheelTicks,
    'irobot_create_msgs/msg/WheelVels': irobot_create_msgs.msg.WheelVels,
    'irobot_create_msgs/srv/EStop_Request': irobot_create_msgs.srv.EStop_Request,
    'irobot_create_msgs/srv/EStop_Response': irobot_create_msgs.srv.EStop_Response,
    'irobot_create_msgs/srv/ResetPose_Request': irobot_create_msgs.srv.ResetPose_Request,
    'irobot_create_msgs/srv/ResetPose_Response': irobot_create_msgs.srv.ResetPose_Response,
    'irobot_create_msgs/srv/RobotPower_Request': irobot_create_msgs.srv.RobotPower_Request,
    'irobot_create_msgs/srv/RobotPower_Response': irobot_create_msgs.srv.RobotPower_Response,
    'lifecycle_msgs/msg/State': lifecycle_msgs.msg.State,
    'lifecycle_msgs/msg/Transition': lifecycle_msgs.msg.Transition,
    'lifecycle_msgs/msg/TransitionDescription': lifecycle_msgs.msg.TransitionDescription,
    'lifecycle_msgs/msg/TransitionEvent': lifecycle_msgs.msg.TransitionEvent,
    'lifecycle_msgs/srv/ChangeState_Request': lifecycle_msgs.srv.ChangeState_Request,
    'lifecycle_msgs/srv/ChangeState_Response': lifecycle_msgs.srv.ChangeState_Response,
    'lifecycle_msgs/srv/GetAvailableStates_Request': lifecycle_msgs.srv.GetAvailableStates_Request,
    'lifecycle_msgs/srv/GetAvailableStates_Response': lifecycle_msgs.srv.GetAvailableStates_Response,
    'lifecycle_msgs/srv/GetAvailableTransitions_Request': lifecycle_msgs.srv.GetAvailableTransitions_Request,
    'lifecycle_msgs/srv/GetAvailableTransitions_Response': lifecycle_msgs.srv.GetAvailableTransitions_Response,
    'lifecycle_msgs/srv/GetState_Request': lifecycle_msgs.srv.GetState_Request,
    'lifecycle_msgs/srv/GetState_Response': lifecycle_msgs.srv.GetState_Response,
    'map_msgs/msg/OccupancyGridUpdate': map_msgs.msg.OccupancyGridUpdate,
    'map_msgs/msg/PointCloud2Update': map_msgs.msg.PointCloud2Update,
    'map_msgs/msg/ProjectedMap': map_msgs.msg.ProjectedMap,
    'map_msgs/msg/ProjectedMapInfo': map_msgs.msg.ProjectedMapInfo,
    'map_msgs/srv/GetMapROI_Request': map_msgs.srv.GetMapROI_Request,
    'map_msgs/srv/GetMapROI_Response': map_msgs.srv.GetMapROI_Response,
    'map_msgs/srv/GetPointMapROI_Request': map_msgs.srv.GetPointMapROI_Request,
    'map_msgs/srv/GetPointMapROI_Response': map_msgs.srv.GetPointMapROI_Response,
    'map_msgs/srv/GetPointMap_Request': map_msgs.srv.GetPointMap_Request,
    'map_msgs/srv/GetPointMap_Response': map_msgs.srv.GetPointMap_Response,
    'map_msgs/srv/ProjectedMapsInfo_Request': map_msgs.srv.ProjectedMapsInfo_Request,
    'map_msgs/srv/ProjectedMapsInfo_Response': map_msgs.srv.ProjectedMapsInfo_Response,
    'map_msgs/srv/SaveMap_Request': map_msgs.srv.SaveMap_Request,
    'map_msgs/srv/SaveMap_Response': map_msgs.srv.SaveMap_Response,
    'map_msgs/srv/SetMapProjections_Request': map_msgs.srv.SetMapProjections_Request,
    'map_msgs/srv/SetMapProjections_Response': map_msgs.srv.SetMapProjections_Response,
    'mocap4r2_control_msgs/msg/Control': mocap4r2_control_msgs.msg.Control,
    'mocap4r2_control_msgs/msg/MocapInfo': mocap4r2_control_msgs.msg.MocapInfo,
    'moveit_msgs/action/ExecuteTrajectory_Feedback': moveit_msgs.action.ExecuteTrajectory_Feedback,
    'moveit_msgs/action/ExecuteTrajectory_FeedbackMessage': moveit_msgs.action.ExecuteTrajectory_FeedbackMessage,
    'moveit_msgs/action/ExecuteTrajectory_GetResult_Request': moveit_msgs.action.ExecuteTrajectory_GetResult_Request,
    'moveit_msgs/action/ExecuteTrajectory_GetResult_Response': moveit_msgs.action.ExecuteTrajectory_GetResult_Response,
    'moveit_msgs/action/ExecuteTrajectory_Goal': moveit_msgs.action.ExecuteTrajectory_Goal,
    'moveit_msgs/action/ExecuteTrajectory_Result': moveit_msgs.action.ExecuteTrajectory_Result,
    'moveit_msgs/action/ExecuteTrajectory_SendGoal_Request': moveit_msgs.action.ExecuteTrajectory_SendGoal_Request,
    'moveit_msgs/action/ExecuteTrajectory_SendGoal_Response': moveit_msgs.action.ExecuteTrajectory_SendGoal_Response,
    'moveit_msgs/action/GlobalPlanner_Feedback': moveit_msgs.action.GlobalPlanner_Feedback,
    'moveit_msgs/action/GlobalPlanner_FeedbackMessage': moveit_msgs.action.GlobalPlanner_FeedbackMessage,
    'moveit_msgs/action/GlobalPlanner_GetResult_Request': moveit_msgs.action.GlobalPlanner_GetResult_Request,
    'moveit_msgs/action/GlobalPlanner_GetResult_Response': moveit_msgs.action.GlobalPlanner_GetResult_Response,
    'moveit_msgs/action/GlobalPlanner_Goal': moveit_msgs.action.GlobalPlanner_Goal,
    'moveit_msgs/action/GlobalPlanner_Result': moveit_msgs.action.GlobalPlanner_Result,
    'moveit_msgs/action/GlobalPlanner_SendGoal_Request': moveit_msgs.action.GlobalPlanner_SendGoal_Request,
    'moveit_msgs/action/GlobalPlanner_SendGoal_Response': moveit_msgs.action.GlobalPlanner_SendGoal_Response,
    'moveit_msgs/action/HybridPlanner_Feedback': moveit_msgs.action.HybridPlanner_Feedback,
    'moveit_msgs/action/HybridPlanner_FeedbackMessage': moveit_msgs.action.HybridPlanner_FeedbackMessage,
    'moveit_msgs/action/HybridPlanner_GetResult_Request': moveit_msgs.action.HybridPlanner_GetResult_Request,
    'moveit_msgs/action/HybridPlanner_GetResult_Response': moveit_msgs.action.HybridPlanner_GetResult_Response,
    'moveit_msgs/action/HybridPlanner_Goal': moveit_msgs.action.HybridPlanner_Goal,
    'moveit_msgs/action/HybridPlanner_Result': moveit_msgs.action.HybridPlanner_Result,
    'moveit_msgs/action/HybridPlanner_SendGoal_Request': moveit_msgs.action.HybridPlanner_SendGoal_Request,
    'moveit_msgs/action/HybridPlanner_SendGoal_Response': moveit_msgs.action.HybridPlanner_SendGoal_Response,
    'moveit_msgs/action/LocalPlanner_Feedback': moveit_msgs.action.LocalPlanner_Feedback,
    'moveit_msgs/action/LocalPlanner_FeedbackMessage': moveit_msgs.action.LocalPlanner_FeedbackMessage,
    'moveit_msgs/action/LocalPlanner_GetResult_Request': moveit_msgs.action.LocalPlanner_GetResult_Request,
    'moveit_msgs/action/LocalPlanner_GetResult_Response': moveit_msgs.action.LocalPlanner_GetResult_Response,
    'moveit_msgs/action/LocalPlanner_Goal': moveit_msgs.action.LocalPlanner_Goal,
    'moveit_msgs/action/LocalPlanner_Result': moveit_msgs.action.LocalPlanner_Result,
    'moveit_msgs/action/LocalPlanner_SendGoal_Request': moveit_msgs.action.LocalPlanner_SendGoal_Request,
    'moveit_msgs/action/LocalPlanner_SendGoal_Response': moveit_msgs.action.LocalPlanner_SendGoal_Response,
    'moveit_msgs/action/MoveGroupSequence_Feedback': moveit_msgs.action.MoveGroupSequence_Feedback,
    'moveit_msgs/action/MoveGroupSequence_FeedbackMessage': moveit_msgs.action.MoveGroupSequence_FeedbackMessage,
    'moveit_msgs/action/MoveGroupSequence_GetResult_Request': moveit_msgs.action.MoveGroupSequence_GetResult_Request,
    'moveit_msgs/action/MoveGroupSequence_GetResult_Response': moveit_msgs.action.MoveGroupSequence_GetResult_Response,
    'moveit_msgs/action/MoveGroupSequence_Goal': moveit_msgs.action.MoveGroupSequence_Goal,
    'moveit_msgs/action/MoveGroupSequence_Result': moveit_msgs.action.MoveGroupSequence_Result,
    'moveit_msgs/action/MoveGroupSequence_SendGoal_Request': moveit_msgs.action.MoveGroupSequence_SendGoal_Request,
    'moveit_msgs/action/MoveGroupSequence_SendGoal_Response': moveit_msgs.action.MoveGroupSequence_SendGoal_Response,
    'moveit_msgs/action/MoveGroup_Feedback': moveit_msgs.action.MoveGroup_Feedback,
    'moveit_msgs/action/MoveGroup_FeedbackMessage': moveit_msgs.action.MoveGroup_FeedbackMessage,
    'moveit_msgs/action/MoveGroup_GetResult_Request': moveit_msgs.action.MoveGroup_GetResult_Request,
    'moveit_msgs/action/MoveGroup_GetResult_Response': moveit_msgs.action.MoveGroup_GetResult_Response,
    'moveit_msgs/action/MoveGroup_Goal': moveit_msgs.action.MoveGroup_Goal,
    'moveit_msgs/action/MoveGroup_Result': moveit_msgs.action.MoveGroup_Result,
    'moveit_msgs/action/MoveGroup_SendGoal_Request': moveit_msgs.action.MoveGroup_SendGoal_Request,
    'moveit_msgs/action/MoveGroup_SendGoal_Response': moveit_msgs.action.MoveGroup_SendGoal_Response,
    'moveit_msgs/action/Pickup_Feedback': moveit_msgs.action.Pickup_Feedback,
    'moveit_msgs/action/Pickup_FeedbackMessage': moveit_msgs.action.Pickup_FeedbackMessage,
    'moveit_msgs/action/Pickup_GetResult_Request': moveit_msgs.action.Pickup_GetResult_Request,
    'moveit_msgs/action/Pickup_GetResult_Response': moveit_msgs.action.Pickup_GetResult_Response,
    'moveit_msgs/action/Pickup_Goal': moveit_msgs.action.Pickup_Goal,
    'moveit_msgs/action/Pickup_Result': moveit_msgs.action.Pickup_Result,
    'moveit_msgs/action/Pickup_SendGoal_Request': moveit_msgs.action.Pickup_SendGoal_Request,
    'moveit_msgs/action/Pickup_SendGoal_Response': moveit_msgs.action.Pickup_SendGoal_Response,
    'moveit_msgs/action/Place_Feedback': moveit_msgs.action.Place_Feedback,
    'moveit_msgs/action/Place_FeedbackMessage': moveit_msgs.action.Place_FeedbackMessage,
    'moveit_msgs/action/Place_GetResult_Request': moveit_msgs.action.Place_GetResult_Request,
    'moveit_msgs/action/Place_GetResult_Response': moveit_msgs.action.Place_GetResult_Response,
    'moveit_msgs/action/Place_Goal': moveit_msgs.action.Place_Goal,
    'moveit_msgs/action/Place_Result': moveit_msgs.action.Place_Result,
    'moveit_msgs/action/Place_SendGoal_Request': moveit_msgs.action.Place_SendGoal_Request,
    'moveit_msgs/action/Place_SendGoal_Response': moveit_msgs.action.Place_SendGoal_Response,
    'moveit_msgs/msg/AllowedCollisionEntry': moveit_msgs.msg.AllowedCollisionEntry,
    'moveit_msgs/msg/AllowedCollisionMatrix': moveit_msgs.msg.AllowedCollisionMatrix,
    'moveit_msgs/msg/AttachedCollisionObject': moveit_msgs.msg.AttachedCollisionObject,
    'moveit_msgs/msg/BoundingVolume': moveit_msgs.msg.BoundingVolume,
    'moveit_msgs/msg/CartesianPoint': moveit_msgs.msg.CartesianPoint,
    'moveit_msgs/msg/CartesianTrajectory': moveit_msgs.msg.CartesianTrajectory,
    'moveit_msgs/msg/CartesianTrajectoryPoint': moveit_msgs.msg.CartesianTrajectoryPoint,
    'moveit_msgs/msg/CollisionObject': moveit_msgs.msg.CollisionObject,
    'moveit_msgs/msg/ConstraintEvalResult': moveit_msgs.msg.ConstraintEvalResult,
    'moveit_msgs/msg/Constraints': moveit_msgs.msg.Constraints,
    'moveit_msgs/msg/ContactInformation': moveit_msgs.msg.ContactInformation,
    'moveit_msgs/msg/CostSource': moveit_msgs.msg.CostSource,
    'moveit_msgs/msg/DisplayRobotState': moveit_msgs.msg.DisplayRobotState,
    'moveit_msgs/msg/DisplayTrajectory': moveit_msgs.msg.DisplayTrajectory,
    'moveit_msgs/msg/GenericTrajectory': moveit_msgs.msg.GenericTrajectory,
    'moveit_msgs/msg/Grasp': moveit_msgs.msg.Grasp,
    'moveit_msgs/msg/GripperTranslation': moveit_msgs.msg.GripperTranslation,
    'moveit_msgs/msg/JointConstraint': moveit_msgs.msg.JointConstraint,
    'moveit_msgs/msg/JointLimits': moveit_msgs.msg.JointLimits,
    'moveit_msgs/msg/KinematicSolverInfo': moveit_msgs.msg.KinematicSolverInfo,
    'moveit_msgs/msg/LinkPadding': moveit_msgs.msg.LinkPadding,
    'moveit_msgs/msg/LinkScale': moveit_msgs.msg.LinkScale,
    'moveit_msgs/msg/MotionPlanDetailedResponse': moveit_msgs.msg.MotionPlanDetailedResponse,
    'moveit_msgs/msg/MotionPlanRequest': moveit_msgs.msg.MotionPlanRequest,
    'moveit_msgs/msg/MotionPlanResponse': moveit_msgs.msg.MotionPlanResponse,
    'moveit_msgs/msg/MotionSequenceItem': moveit_msgs.msg.MotionSequenceItem,
    'moveit_msgs/msg/MotionSequenceRequest': moveit_msgs.msg.MotionSequenceRequest,
    'moveit_msgs/msg/MotionSequenceResponse': moveit_msgs.msg.MotionSequenceResponse,
    'moveit_msgs/msg/MoveItErrorCodes': moveit_msgs.msg.MoveItErrorCodes,
    'moveit_msgs/msg/ObjectColor': moveit_msgs.msg.ObjectColor,
    'moveit_msgs/msg/OrientationConstraint': moveit_msgs.msg.OrientationConstraint,
    'moveit_msgs/msg/OrientedBoundingBox': moveit_msgs.msg.OrientedBoundingBox,
    'moveit_msgs/msg/PlaceLocation': moveit_msgs.msg.PlaceLocation,
    'moveit_msgs/msg/PlannerInterfaceDescription': moveit_msgs.msg.PlannerInterfaceDescription,
    'moveit_msgs/msg/PlannerParams': moveit_msgs.msg.PlannerParams,
    'moveit_msgs/msg/PlanningOptions': moveit_msgs.msg.PlanningOptions,
    'moveit_msgs/msg/PlanningScene': moveit_msgs.msg.PlanningScene,
    'moveit_msgs/msg/PlanningSceneComponents': moveit_msgs.msg.PlanningSceneComponents,
    'moveit_msgs/msg/PlanningSceneWorld': moveit_msgs.msg.PlanningSceneWorld,
    'moveit_msgs/msg/PositionConstraint': moveit_msgs.msg.PositionConstraint,
    'moveit_msgs/msg/PositionIKRequest': moveit_msgs.msg.PositionIKRequest,
    'moveit_msgs/msg/RobotState': moveit_msgs.msg.RobotState,
    'moveit_msgs/msg/RobotTrajectory': moveit_msgs.msg.RobotTrajectory,
    'moveit_msgs/msg/TrajectoryConstraints': moveit_msgs.msg.TrajectoryConstraints,
    'moveit_msgs/msg/VisibilityConstraint': moveit_msgs.msg.VisibilityConstraint,
    'moveit_msgs/msg/WorkspaceParameters': moveit_msgs.msg.WorkspaceParameters,
    'moveit_msgs/srv/ApplyPlanningScene_Request': moveit_msgs.srv.ApplyPlanningScene_Request,
    'moveit_msgs/srv/ApplyPlanningScene_Response': moveit_msgs.srv.ApplyPlanningScene_Response,
    'moveit_msgs/srv/ChangeControlDimensions_Request': moveit_msgs.srv.ChangeControlDimensions_Request,
    'moveit_msgs/srv/ChangeControlDimensions_Response': moveit_msgs.srv.ChangeControlDimensions_Response,
    'moveit_msgs/srv/ChangeDriftDimensions_Request': moveit_msgs.srv.ChangeDriftDimensions_Request,
    'moveit_msgs/srv/ChangeDriftDimensions_Response': moveit_msgs.srv.ChangeDriftDimensions_Response,
    'moveit_msgs/srv/CheckIfRobotStateExistsInWarehouse_Request': moveit_msgs.srv.CheckIfRobotStateExistsInWarehouse_Request,
    'moveit_msgs/srv/CheckIfRobotStateExistsInWarehouse_Response': moveit_msgs.srv.CheckIfRobotStateExistsInWarehouse_Response,
    'moveit_msgs/srv/DeleteRobotStateFromWarehouse_Request': moveit_msgs.srv.DeleteRobotStateFromWarehouse_Request,
    'moveit_msgs/srv/DeleteRobotStateFromWarehouse_Response': moveit_msgs.srv.DeleteRobotStateFromWarehouse_Response,
    'moveit_msgs/srv/ExecuteKnownTrajectory_Request': moveit_msgs.srv.ExecuteKnownTrajectory_Request,
    'moveit_msgs/srv/ExecuteKnownTrajectory_Response': moveit_msgs.srv.ExecuteKnownTrajectory_Response,
    'moveit_msgs/srv/GetCartesianPath_Request': moveit_msgs.srv.GetCartesianPath_Request,
    'moveit_msgs/srv/GetCartesianPath_Response': moveit_msgs.srv.GetCartesianPath_Response,
    'moveit_msgs/srv/GetMotionPlan_Request': moveit_msgs.srv.GetMotionPlan_Request,
    'moveit_msgs/srv/GetMotionPlan_Response': moveit_msgs.srv.GetMotionPlan_Response,
    'moveit_msgs/srv/GetMotionSequence_Request': moveit_msgs.srv.GetMotionSequence_Request,
    'moveit_msgs/srv/GetMotionSequence_Response': moveit_msgs.srv.GetMotionSequence_Response,
    'moveit_msgs/srv/GetPlannerParams_Request': moveit_msgs.srv.GetPlannerParams_Request,
    'moveit_msgs/srv/GetPlannerParams_Response': moveit_msgs.srv.GetPlannerParams_Response,
    'moveit_msgs/srv/GetPlanningScene_Request': moveit_msgs.srv.GetPlanningScene_Request,
    'moveit_msgs/srv/GetPlanningScene_Response': moveit_msgs.srv.GetPlanningScene_Response,
    'moveit_msgs/srv/GetPositionFK_Request': moveit_msgs.srv.GetPositionFK_Request,
    'moveit_msgs/srv/GetPositionFK_Response': moveit_msgs.srv.GetPositionFK_Response,
    'moveit_msgs/srv/GetPositionIK_Request': moveit_msgs.srv.GetPositionIK_Request,
    'moveit_msgs/srv/GetPositionIK_Response': moveit_msgs.srv.GetPositionIK_Response,
    'moveit_msgs/srv/GetRobotStateFromWarehouse_Request': moveit_msgs.srv.GetRobotStateFromWarehouse_Request,
    'moveit_msgs/srv/GetRobotStateFromWarehouse_Response': moveit_msgs.srv.GetRobotStateFromWarehouse_Response,
    'moveit_msgs/srv/GetStateValidity_Request': moveit_msgs.srv.GetStateValidity_Request,
    'moveit_msgs/srv/GetStateValidity_Response': moveit_msgs.srv.GetStateValidity_Response,
    'moveit_msgs/srv/GraspPlanning_Request': moveit_msgs.srv.GraspPlanning_Request,
    'moveit_msgs/srv/GraspPlanning_Response': moveit_msgs.srv.GraspPlanning_Response,
    'moveit_msgs/srv/ListRobotStatesInWarehouse_Request': moveit_msgs.srv.ListRobotStatesInWarehouse_Request,
    'moveit_msgs/srv/ListRobotStatesInWarehouse_Response': moveit_msgs.srv.ListRobotStatesInWarehouse_Response,
    'moveit_msgs/srv/LoadMap_Request': moveit_msgs.srv.LoadMap_Request,
    'moveit_msgs/srv/LoadMap_Response': moveit_msgs.srv.LoadMap_Response,
    'moveit_msgs/srv/QueryPlannerInterfaces_Request': moveit_msgs.srv.QueryPlannerInterfaces_Request,
    'moveit_msgs/srv/QueryPlannerInterfaces_Response': moveit_msgs.srv.QueryPlannerInterfaces_Response,
    'moveit_msgs/srv/RenameRobotStateInWarehouse_Request': moveit_msgs.srv.RenameRobotStateInWarehouse_Request,
    'moveit_msgs/srv/RenameRobotStateInWarehouse_Response': moveit_msgs.srv.RenameRobotStateInWarehouse_Response,
    'moveit_msgs/srv/SaveMap_Request': moveit_msgs.srv.SaveMap_Request,
    'moveit_msgs/srv/SaveMap_Response': moveit_msgs.srv.SaveMap_Response,
    'moveit_msgs/srv/SaveRobotStateToWarehouse_Request': moveit_msgs.srv.SaveRobotStateToWarehouse_Request,
    'moveit_msgs/srv/SaveRobotStateToWarehouse_Response': moveit_msgs.srv.SaveRobotStateToWarehouse_Response,
    'moveit_msgs/srv/SetPlannerParams_Request': moveit_msgs.srv.SetPlannerParams_Request,
    'moveit_msgs/srv/SetPlannerParams_Response': moveit_msgs.srv.SetPlannerParams_Response,
    'moveit_msgs/srv/UpdatePointcloudOctomap_Request': moveit_msgs.srv.UpdatePointcloudOctomap_Request,
    'moveit_msgs/srv/UpdatePointcloudOctomap_Response': moveit_msgs.srv.UpdatePointcloudOctomap_Response,
    'nav2_msgs/action/AssistedTeleop_Feedback': nav2_msgs.action.AssistedTeleop_Feedback,
    'nav2_msgs/action/AssistedTeleop_FeedbackMessage': nav2_msgs.action.AssistedTeleop_FeedbackMessage,
    'nav2_msgs/action/AssistedTeleop_GetResult_Request': nav2_msgs.action.AssistedTeleop_GetResult_Request,
    'nav2_msgs/action/AssistedTeleop_GetResult_Response': nav2_msgs.action.AssistedTeleop_GetResult_Response,
    'nav2_msgs/action/AssistedTeleop_Goal': nav2_msgs.action.AssistedTeleop_Goal,
    'nav2_msgs/action/AssistedTeleop_Result': nav2_msgs.action.AssistedTeleop_Result,
    'nav2_msgs/action/AssistedTeleop_SendGoal_Request': nav2_msgs.action.AssistedTeleop_SendGoal_Request,
    'nav2_msgs/action/AssistedTeleop_SendGoal_Response': nav2_msgs.action.AssistedTeleop_SendGoal_Response,
    'nav2_msgs/action/BackUp_Feedback': nav2_msgs.action.BackUp_Feedback,
    'nav2_msgs/action/BackUp_FeedbackMessage': nav2_msgs.action.BackUp_FeedbackMessage,
    'nav2_msgs/action/BackUp_GetResult_Request': nav2_msgs.action.BackUp_GetResult_Request,
    'nav2_msgs/action/BackUp_GetResult_Response': nav2_msgs.action.BackUp_GetResult_Response,
    'nav2_msgs/action/BackUp_Goal': nav2_msgs.action.BackUp_Goal,
    'nav2_msgs/action/BackUp_Result': nav2_msgs.action.BackUp_Result,
    'nav2_msgs/action/BackUp_SendGoal_Request': nav2_msgs.action.BackUp_SendGoal_Request,
    'nav2_msgs/action/BackUp_SendGoal_Response': nav2_msgs.action.BackUp_SendGoal_Response,
    'nav2_msgs/action/ComputePathThroughPoses_Feedback': nav2_msgs.action.ComputePathThroughPoses_Feedback,
    'nav2_msgs/action/ComputePathThroughPoses_FeedbackMessage': nav2_msgs.action.ComputePathThroughPoses_FeedbackMessage,
    'nav2_msgs/action/ComputePathThroughPoses_GetResult_Request': nav2_msgs.action.ComputePathThroughPoses_GetResult_Request,
    'nav2_msgs/action/ComputePathThroughPoses_GetResult_Response': nav2_msgs.action.ComputePathThroughPoses_GetResult_Response,
    'nav2_msgs/action/ComputePathThroughPoses_Goal': nav2_msgs.action.ComputePathThroughPoses_Goal,
    'nav2_msgs/action/ComputePathThroughPoses_Result': nav2_msgs.action.ComputePathThroughPoses_Result,
    'nav2_msgs/action/ComputePathThroughPoses_SendGoal_Request': nav2_msgs.action.ComputePathThroughPoses_SendGoal_Request,
    'nav2_msgs/action/ComputePathThroughPoses_SendGoal_Response': nav2_msgs.action.ComputePathThroughPoses_SendGoal_Response,
    'nav2_msgs/action/ComputePathToPose_Feedback': nav2_msgs.action.ComputePathToPose_Feedback,
    'nav2_msgs/action/ComputePathToPose_FeedbackMessage': nav2_msgs.action.ComputePathToPose_FeedbackMessage,
    'nav2_msgs/action/ComputePathToPose_GetResult_Request': nav2_msgs.action.ComputePathToPose_GetResult_Request,
    'nav2_msgs/action/ComputePathToPose_GetResult_Response': nav2_msgs.action.ComputePathToPose_GetResult_Response,
    'nav2_msgs/action/ComputePathToPose_Goal': nav2_msgs.action.ComputePathToPose_Goal,
    'nav2_msgs/action/ComputePathToPose_Result': nav2_msgs.action.ComputePathToPose_Result,
    'nav2_msgs/action/ComputePathToPose_SendGoal_Request': nav2_msgs.action.ComputePathToPose_SendGoal_Request,
    'nav2_msgs/action/ComputePathToPose_SendGoal_Response': nav2_msgs.action.ComputePathToPose_SendGoal_Response,
    'nav2_msgs/action/DriveOnHeading_Feedback': nav2_msgs.action.DriveOnHeading_Feedback,
    'nav2_msgs/action/DriveOnHeading_FeedbackMessage': nav2_msgs.action.DriveOnHeading_FeedbackMessage,
    'nav2_msgs/action/DriveOnHeading_GetResult_Request': nav2_msgs.action.DriveOnHeading_GetResult_Request,
    'nav2_msgs/action/DriveOnHeading_GetResult_Response': nav2_msgs.action.DriveOnHeading_GetResult_Response,
    'nav2_msgs/action/DriveOnHeading_Goal': nav2_msgs.action.DriveOnHeading_Goal,
    'nav2_msgs/action/DriveOnHeading_Result': nav2_msgs.action.DriveOnHeading_Result,
    'nav2_msgs/action/DriveOnHeading_SendGoal_Request': nav2_msgs.action.DriveOnHeading_SendGoal_Request,
    'nav2_msgs/action/DriveOnHeading_SendGoal_Response': nav2_msgs.action.DriveOnHeading_SendGoal_Response,
    'nav2_msgs/action/DummyBehavior_Feedback': nav2_msgs.action.DummyBehavior_Feedback,
    'nav2_msgs/action/DummyBehavior_FeedbackMessage': nav2_msgs.action.DummyBehavior_FeedbackMessage,
    'nav2_msgs/action/DummyBehavior_GetResult_Request': nav2_msgs.action.DummyBehavior_GetResult_Request,
    'nav2_msgs/action/DummyBehavior_GetResult_Response': nav2_msgs.action.DummyBehavior_GetResult_Response,
    'nav2_msgs/action/DummyBehavior_Goal': nav2_msgs.action.DummyBehavior_Goal,
    'nav2_msgs/action/DummyBehavior_Result': nav2_msgs.action.DummyBehavior_Result,
    'nav2_msgs/action/DummyBehavior_SendGoal_Request': nav2_msgs.action.DummyBehavior_SendGoal_Request,
    'nav2_msgs/action/DummyBehavior_SendGoal_Response': nav2_msgs.action.DummyBehavior_SendGoal_Response,
    'nav2_msgs/action/FollowPath_Feedback': nav2_msgs.action.FollowPath_Feedback,
    'nav2_msgs/action/FollowPath_FeedbackMessage': nav2_msgs.action.FollowPath_FeedbackMessage,
    'nav2_msgs/action/FollowPath_GetResult_Request': nav2_msgs.action.FollowPath_GetResult_Request,
    'nav2_msgs/action/FollowPath_GetResult_Response': nav2_msgs.action.FollowPath_GetResult_Response,
    'nav2_msgs/action/FollowPath_Goal': nav2_msgs.action.FollowPath_Goal,
    'nav2_msgs/action/FollowPath_Result': nav2_msgs.action.FollowPath_Result,
    'nav2_msgs/action/FollowPath_SendGoal_Request': nav2_msgs.action.FollowPath_SendGoal_Request,
    'nav2_msgs/action/FollowPath_SendGoal_Response': nav2_msgs.action.FollowPath_SendGoal_Response,
    'nav2_msgs/action/FollowWaypoints_Feedback': nav2_msgs.action.FollowWaypoints_Feedback,
    'nav2_msgs/action/FollowWaypoints_FeedbackMessage': nav2_msgs.action.FollowWaypoints_FeedbackMessage,
    'nav2_msgs/action/FollowWaypoints_GetResult_Request': nav2_msgs.action.FollowWaypoints_GetResult_Request,
    'nav2_msgs/action/FollowWaypoints_GetResult_Response': nav2_msgs.action.FollowWaypoints_GetResult_Response,
    'nav2_msgs/action/FollowWaypoints_Goal': nav2_msgs.action.FollowWaypoints_Goal,
    'nav2_msgs/action/FollowWaypoints_Result': nav2_msgs.action.FollowWaypoints_Result,
    'nav2_msgs/action/FollowWaypoints_SendGoal_Request': nav2_msgs.action.FollowWaypoints_SendGoal_Request,
    'nav2_msgs/action/FollowWaypoints_SendGoal_Response': nav2_msgs.action.FollowWaypoints_SendGoal_Response,
    'nav2_msgs/action/NavigateThroughPoses_Feedback': nav2_msgs.action.NavigateThroughPoses_Feedback,
    'nav2_msgs/action/NavigateThroughPoses_FeedbackMessage': nav2_msgs.action.NavigateThroughPoses_FeedbackMessage,
    'nav2_msgs/action/NavigateThroughPoses_GetResult_Request': nav2_msgs.action.NavigateThroughPoses_GetResult_Request,
    'nav2_msgs/action/NavigateThroughPoses_GetResult_Response': nav2_msgs.action.NavigateThroughPoses_GetResult_Response,
    'nav2_msgs/action/NavigateThroughPoses_Goal': nav2_msgs.action.NavigateThroughPoses_Goal,
    'nav2_msgs/action/NavigateThroughPoses_Result': nav2_msgs.action.NavigateThroughPoses_Result,
    'nav2_msgs/action/NavigateThroughPoses_SendGoal_Request': nav2_msgs.action.NavigateThroughPoses_SendGoal_Request,
    'nav2_msgs/action/NavigateThroughPoses_SendGoal_Response': nav2_msgs.action.NavigateThroughPoses_SendGoal_Response,
    'nav2_msgs/action/NavigateToPose_Feedback': nav2_msgs.action.NavigateToPose_Feedback,
    'nav2_msgs/action/NavigateToPose_FeedbackMessage': nav2_msgs.action.NavigateToPose_FeedbackMessage,
    'nav2_msgs/action/NavigateToPose_GetResult_Request': nav2_msgs.action.NavigateToPose_GetResult_Request,
    'nav2_msgs/action/NavigateToPose_GetResult_Response': nav2_msgs.action.NavigateToPose_GetResult_Response,
    'nav2_msgs/action/NavigateToPose_Goal': nav2_msgs.action.NavigateToPose_Goal,
    'nav2_msgs/action/NavigateToPose_Result': nav2_msgs.action.NavigateToPose_Result,
    'nav2_msgs/action/NavigateToPose_SendGoal_Request': nav2_msgs.action.NavigateToPose_SendGoal_Request,
    'nav2_msgs/action/NavigateToPose_SendGoal_Response': nav2_msgs.action.NavigateToPose_SendGoal_Response,
    'nav2_msgs/action/SmoothPath_Feedback': nav2_msgs.action.SmoothPath_Feedback,
    'nav2_msgs/action/SmoothPath_FeedbackMessage': nav2_msgs.action.SmoothPath_FeedbackMessage,
    'nav2_msgs/action/SmoothPath_GetResult_Request': nav2_msgs.action.SmoothPath_GetResult_Request,
    'nav2_msgs/action/SmoothPath_GetResult_Response': nav2_msgs.action.SmoothPath_GetResult_Response,
    'nav2_msgs/action/SmoothPath_Goal': nav2_msgs.action.SmoothPath_Goal,
    'nav2_msgs/action/SmoothPath_Result': nav2_msgs.action.SmoothPath_Result,
    'nav2_msgs/action/SmoothPath_SendGoal_Request': nav2_msgs.action.SmoothPath_SendGoal_Request,
    'nav2_msgs/action/SmoothPath_SendGoal_Response': nav2_msgs.action.SmoothPath_SendGoal_Response,
    'nav2_msgs/action/Spin_Feedback': nav2_msgs.action.Spin_Feedback,
    'nav2_msgs/action/Spin_FeedbackMessage': nav2_msgs.action.Spin_FeedbackMessage,
    'nav2_msgs/action/Spin_GetResult_Request': nav2_msgs.action.Spin_GetResult_Request,
    'nav2_msgs/action/Spin_GetResult_Response': nav2_msgs.action.Spin_GetResult_Response,
    'nav2_msgs/action/Spin_Goal': nav2_msgs.action.Spin_Goal,
    'nav2_msgs/action/Spin_Result': nav2_msgs.action.Spin_Result,
    'nav2_msgs/action/Spin_SendGoal_Request': nav2_msgs.action.Spin_SendGoal_Request,
    'nav2_msgs/action/Spin_SendGoal_Response': nav2_msgs.action.Spin_SendGoal_Response,
    'nav2_msgs/action/Wait_Feedback': nav2_msgs.action.Wait_Feedback,
    'nav2_msgs/action/Wait_FeedbackMessage': nav2_msgs.action.Wait_FeedbackMessage,
    'nav2_msgs/action/Wait_GetResult_Request': nav2_msgs.action.Wait_GetResult_Request,
    'nav2_msgs/action/Wait_GetResult_Response': nav2_msgs.action.Wait_GetResult_Response,
    'nav2_msgs/action/Wait_Goal': nav2_msgs.action.Wait_Goal,
    'nav2_msgs/action/Wait_Result': nav2_msgs.action.Wait_Result,
    'nav2_msgs/action/Wait_SendGoal_Request': nav2_msgs.action.Wait_SendGoal_Request,
    'nav2_msgs/action/Wait_SendGoal_Response': nav2_msgs.action.Wait_SendGoal_Response,
    'nav2_msgs/msg/BehaviorTreeLog': nav2_msgs.msg.BehaviorTreeLog,
    'nav2_msgs/msg/BehaviorTreeStatusChange': nav2_msgs.msg.BehaviorTreeStatusChange,
    'nav2_msgs/msg/Costmap': nav2_msgs.msg.Costmap,
    'nav2_msgs/msg/CostmapFilterInfo': nav2_msgs.msg.CostmapFilterInfo,
    'nav2_msgs/msg/CostmapMetaData': nav2_msgs.msg.CostmapMetaData,
    'nav2_msgs/msg/Particle': nav2_msgs.msg.Particle,
    'nav2_msgs/msg/ParticleCloud': nav2_msgs.msg.ParticleCloud,
    'nav2_msgs/msg/SpeedLimit': nav2_msgs.msg.SpeedLimit,
    'nav2_msgs/msg/VoxelGrid': nav2_msgs.msg.VoxelGrid,
    'nav2_msgs/srv/ClearCostmapAroundRobot_Request': nav2_msgs.srv.ClearCostmapAroundRobot_Request,
    'nav2_msgs/srv/ClearCostmapAroundRobot_Response': nav2_msgs.srv.ClearCostmapAroundRobot_Response,
    'nav2_msgs/srv/ClearCostmapExceptRegion_Request': nav2_msgs.srv.ClearCostmapExceptRegion_Request,
    'nav2_msgs/srv/ClearCostmapExceptRegion_Response': nav2_msgs.srv.ClearCostmapExceptRegion_Response,
    'nav2_msgs/srv/ClearEntireCostmap_Request': nav2_msgs.srv.ClearEntireCostmap_Request,
    'nav2_msgs/srv/ClearEntireCostmap_Response': nav2_msgs.srv.ClearEntireCostmap_Response,
    'nav2_msgs/srv/GetCostmap_Request': nav2_msgs.srv.GetCostmap_Request,
    'nav2_msgs/srv/GetCostmap_Response': nav2_msgs.srv.GetCostmap_Response,
    'nav2_msgs/srv/IsPathValid_Request': nav2_msgs.srv.IsPathValid_Request,
    'nav2_msgs/srv/IsPathValid_Response': nav2_msgs.srv.IsPathValid_Response,
    'nav2_msgs/srv/LoadMap_Request': nav2_msgs.srv.LoadMap_Request,
    'nav2_msgs/srv/LoadMap_Response': nav2_msgs.srv.LoadMap_Response,
    'nav2_msgs/srv/ManageLifecycleNodes_Request': nav2_msgs.srv.ManageLifecycleNodes_Request,
    'nav2_msgs/srv/ManageLifecycleNodes_Response': nav2_msgs.srv.ManageLifecycleNodes_Response,
    'nav2_msgs/srv/SaveMap_Request': nav2_msgs.srv.SaveMap_Request,
    'nav2_msgs/srv/SaveMap_Response': nav2_msgs.srv.SaveMap_Response,
    'nav2_msgs/srv/SetInitialPose_Request': nav2_msgs.srv.SetInitialPose_Request,
    'nav2_msgs/srv/SetInitialPose_Response': nav2_msgs.srv.SetInitialPose_Response,
    'nav_2d_msgs/msg/Path2D': nav_2d_msgs.msg.Path2D,
    'nav_2d_msgs/msg/Pose2D32': nav_2d_msgs.msg.Pose2D32,
    'nav_2d_msgs/msg/Pose2DStamped': nav_2d_msgs.msg.Pose2DStamped,
    'nav_2d_msgs/msg/Twist2D': nav_2d_msgs.msg.Twist2D,
    'nav_2d_msgs/msg/Twist2D32': nav_2d_msgs.msg.Twist2D32,
    'nav_2d_msgs/msg/Twist2DStamped': nav_2d_msgs.msg.Twist2DStamped,
    'nav_msgs/msg/GridCells': nav_msgs.msg.GridCells,
    'nav_msgs/msg/MapMetaData': nav_msgs.msg.MapMetaData,
    'nav_msgs/msg/OccupancyGrid': nav_msgs.msg.OccupancyGrid,
    'nav_msgs/msg/Odometry': nav_msgs.msg.Odometry,
    'nav_msgs/msg/Path': nav_msgs.msg.Path,
    'nav_msgs/srv/GetMap_Request': nav_msgs.srv.GetMap_Request,
    'nav_msgs/srv/GetMap_Response': nav_msgs.srv.GetMap_Response,
    'nav_msgs/srv/GetPlan_Request': nav_msgs.srv.GetPlan_Request,
    'nav_msgs/srv/GetPlan_Response': nav_msgs.srv.GetPlan_Response,
    'nav_msgs/srv/LoadMap_Request': nav_msgs.srv.LoadMap_Request,
    'nav_msgs/srv/LoadMap_Response': nav_msgs.srv.LoadMap_Response,
    'nav_msgs/srv/SetMap_Request': nav_msgs.srv.SetMap_Request,
    'nav_msgs/srv/SetMap_Response': nav_msgs.srv.SetMap_Response,
    'object_recognition_msgs/action/ObjectRecognition_Feedback': object_recognition_msgs.action.ObjectRecognition_Feedback,
    'object_recognition_msgs/action/ObjectRecognition_FeedbackMessage': object_recognition_msgs.action.ObjectRecognition_FeedbackMessage,
    'object_recognition_msgs/action/ObjectRecognition_GetResult_Request': object_recognition_msgs.action.ObjectRecognition_GetResult_Request,
    'object_recognition_msgs/action/ObjectRecognition_GetResult_Response': object_recognition_msgs.action.ObjectRecognition_GetResult_Response,
    'object_recognition_msgs/action/ObjectRecognition_Goal': object_recognition_msgs.action.ObjectRecognition_Goal,
    'object_recognition_msgs/action/ObjectRecognition_Result': object_recognition_msgs.action.ObjectRecognition_Result,
    'object_recognition_msgs/action/ObjectRecognition_SendGoal_Request': object_recognition_msgs.action.ObjectRecognition_SendGoal_Request,
    'object_recognition_msgs/action/ObjectRecognition_SendGoal_Response': object_recognition_msgs.action.ObjectRecognition_SendGoal_Response,
    'object_recognition_msgs/msg/ObjectInformation': object_recognition_msgs.msg.ObjectInformation,
    'object_recognition_msgs/msg/ObjectType': object_recognition_msgs.msg.ObjectType,
    'object_recognition_msgs/msg/RecognizedObject': object_recognition_msgs.msg.RecognizedObject,
    'object_recognition_msgs/msg/RecognizedObjectArray': object_recognition_msgs.msg.RecognizedObjectArray,
    'object_recognition_msgs/msg/Table': object_recognition_msgs.msg.Table,
    'object_recognition_msgs/msg/TableArray': object_recognition_msgs.msg.TableArray,
    'object_recognition_msgs/srv/GetObjectInformation_Request': object_recognition_msgs.srv.GetObjectInformation_Request,
    'object_recognition_msgs/srv/GetObjectInformation_Response': object_recognition_msgs.srv.GetObjectInformation_Response,
    'octomap_msgs/msg/Octomap': octomap_msgs.msg.Octomap,
    'octomap_msgs/msg/OctomapWithPose': octomap_msgs.msg.OctomapWithPose,
    'octomap_msgs/srv/BoundingBoxQuery_Request': octomap_msgs.srv.BoundingBoxQuery_Request,
    'octomap_msgs/srv/BoundingBoxQuery_Response': octomap_msgs.srv.BoundingBoxQuery_Response,
    'octomap_msgs/srv/GetOctomap_Request': octomap_msgs.srv.GetOctomap_Request,
    'octomap_msgs/srv/GetOctomap_Response': octomap_msgs.srv.GetOctomap_Response,
    'pcl_msgs/msg/ModelCoefficients': pcl_msgs.msg.ModelCoefficients,
    'pcl_msgs/msg/PointIndices': pcl_msgs.msg.PointIndices,
    'pcl_msgs/msg/PolygonMesh': pcl_msgs.msg.PolygonMesh,
    'pcl_msgs/msg/Vertices': pcl_msgs.msg.Vertices,
    'pcl_msgs/srv/UpdateFilename_Request': pcl_msgs.srv.UpdateFilename_Request,
    'pcl_msgs/srv/UpdateFilename_Response': pcl_msgs.srv.UpdateFilename_Response,
    'rcl_interfaces/msg/FloatingPointRange': rcl_interfaces.msg.FloatingPointRange,
    'rcl_interfaces/msg/IntegerRange': rcl_interfaces.msg.IntegerRange,
    'rcl_interfaces/msg/ListParametersResult': rcl_interfaces.msg.ListParametersResult,
    'rcl_interfaces/msg/Log': rcl_interfaces.msg.Log,
    'rcl_interfaces/msg/Parameter': rcl_interfaces.msg.Parameter,
    'rcl_interfaces/msg/ParameterDescriptor': rcl_interfaces.msg.ParameterDescriptor,
    'rcl_interfaces/msg/ParameterEvent': rcl_interfaces.msg.ParameterEvent,
    'rcl_interfaces/msg/ParameterEventDescriptors': rcl_interfaces.msg.ParameterEventDescriptors,
    'rcl_interfaces/msg/ParameterType': rcl_interfaces.msg.ParameterType,
    'rcl_interfaces/msg/ParameterValue': rcl_interfaces.msg.ParameterValue,
    'rcl_interfaces/msg/SetParametersResult': rcl_interfaces.msg.SetParametersResult,
    'rcl_interfaces/srv/DescribeParameters_Request': rcl_interfaces.srv.DescribeParameters_Request,
    'rcl_interfaces/srv/DescribeParameters_Response': rcl_interfaces.srv.DescribeParameters_Response,
    'rcl_interfaces/srv/GetParameterTypes_Request': rcl_interfaces.srv.GetParameterTypes_Request,
    'rcl_interfaces/srv/GetParameterTypes_Response': rcl_interfaces.srv.GetParameterTypes_Response,
    'rcl_interfaces/srv/GetParameters_Request': rcl_interfaces.srv.GetParameters_Request,
    'rcl_interfaces/srv/GetParameters_Response': rcl_interfaces.srv.GetParameters_Response,
    'rcl_interfaces/srv/ListParameters_Request': rcl_interfaces.srv.ListParameters_Request,
    'rcl_interfaces/srv/ListParameters_Response': rcl_interfaces.srv.ListParameters_Response,
    'rcl_interfaces/srv/SetParametersAtomically_Request': rcl_interfaces.srv.SetParametersAtomically_Request,
    'rcl_interfaces/srv/SetParametersAtomically_Response': rcl_interfaces.srv.SetParametersAtomically_Response,
    'rcl_interfaces/srv/SetParameters_Request': rcl_interfaces.srv.SetParameters_Request,
    'rcl_interfaces/srv/SetParameters_Response': rcl_interfaces.srv.SetParameters_Response,
    'realsense2_camera_msgs/msg/Extrinsics': realsense2_camera_msgs.msg.Extrinsics,
    'realsense2_camera_msgs/msg/IMUInfo': realsense2_camera_msgs.msg.IMUInfo,
    'realsense2_camera_msgs/msg/Metadata': realsense2_camera_msgs.msg.Metadata,
    'realsense2_camera_msgs/msg/RGBD': realsense2_camera_msgs.msg.RGBD,
    'realsense2_camera_msgs/srv/DeviceInfo_Request': realsense2_camera_msgs.srv.DeviceInfo_Request,
    'realsense2_camera_msgs/srv/DeviceInfo_Response': realsense2_camera_msgs.srv.DeviceInfo_Response,
    'rmw_dds_common/msg/Gid': rmw_dds_common.msg.Gid,
    'rmw_dds_common/msg/NodeEntitiesInfo': rmw_dds_common.msg.NodeEntitiesInfo,
    'rmw_dds_common/msg/ParticipantEntitiesInfo': rmw_dds_common.msg.ParticipantEntitiesInfo,
    'ros_gz_interfaces/msg/Altimeter': ros_gz_interfaces.msg.Altimeter,
    'ros_gz_interfaces/msg/Contact': ros_gz_interfaces.msg.Contact,
    'ros_gz_interfaces/msg/Contacts': ros_gz_interfaces.msg.Contacts,
    'ros_gz_interfaces/msg/Dataframe': ros_gz_interfaces.msg.Dataframe,
    'ros_gz_interfaces/msg/Entity': ros_gz_interfaces.msg.Entity,
    'ros_gz_interfaces/msg/EntityFactory': ros_gz_interfaces.msg.EntityFactory,
    'ros_gz_interfaces/msg/Float32Array': ros_gz_interfaces.msg.Float32Array,
    'ros_gz_interfaces/msg/GuiCamera': ros_gz_interfaces.msg.GuiCamera,
    'ros_gz_interfaces/msg/JointWrench': ros_gz_interfaces.msg.JointWrench,
    'ros_gz_interfaces/msg/Light': ros_gz_interfaces.msg.Light,
    'ros_gz_interfaces/msg/MaterialColor': ros_gz_interfaces.msg.MaterialColor,
    'ros_gz_interfaces/msg/ParamVec': ros_gz_interfaces.msg.ParamVec,
    'ros_gz_interfaces/msg/SensorNoise': ros_gz_interfaces.msg.SensorNoise,
    'ros_gz_interfaces/msg/StringVec': ros_gz_interfaces.msg.StringVec,
    'ros_gz_interfaces/msg/TrackVisual': ros_gz_interfaces.msg.TrackVisual,
    'ros_gz_interfaces/msg/VideoRecord': ros_gz_interfaces.msg.VideoRecord,
    'ros_gz_interfaces/msg/WorldControl': ros_gz_interfaces.msg.WorldControl,
    'ros_gz_interfaces/msg/WorldReset': ros_gz_interfaces.msg.WorldReset,
    'ros_gz_interfaces/srv/ControlWorld_Request': ros_gz_interfaces.srv.ControlWorld_Request,
    'ros_gz_interfaces/srv/ControlWorld_Response': ros_gz_interfaces.srv.ControlWorld_Response,
    'ros_gz_interfaces/srv/DeleteEntity_Request': ros_gz_interfaces.srv.DeleteEntity_Request,
    'ros_gz_interfaces/srv/DeleteEntity_Response': ros_gz_interfaces.srv.DeleteEntity_Response,
    'ros_gz_interfaces/srv/SetEntityPose_Request': ros_gz_interfaces.srv.SetEntityPose_Request,
    'ros_gz_interfaces/srv/SetEntityPose_Response': ros_gz_interfaces.srv.SetEntityPose_Response,
    'ros_gz_interfaces/srv/SpawnEntity_Request': ros_gz_interfaces.srv.SpawnEntity_Request,
    'ros_gz_interfaces/srv/SpawnEntity_Response': ros_gz_interfaces.srv.SpawnEntity_Response,
    'ros_ign_interfaces/msg/Contact': ros_ign_interfaces.msg.Contact,
    'ros_ign_interfaces/msg/Contacts': ros_ign_interfaces.msg.Contacts,
    'ros_ign_interfaces/msg/Entity': ros_ign_interfaces.msg.Entity,
    'ros_ign_interfaces/msg/EntityFactory': ros_ign_interfaces.msg.EntityFactory,
    'ros_ign_interfaces/msg/GuiCamera': ros_ign_interfaces.msg.GuiCamera,
    'ros_ign_interfaces/msg/JointWrench': ros_ign_interfaces.msg.JointWrench,
    'ros_ign_interfaces/msg/Light': ros_ign_interfaces.msg.Light,
    'ros_ign_interfaces/msg/StringVec': ros_ign_interfaces.msg.StringVec,
    'ros_ign_interfaces/msg/TrackVisual': ros_ign_interfaces.msg.TrackVisual,
    'ros_ign_interfaces/msg/VideoRecord': ros_ign_interfaces.msg.VideoRecord,
    'ros_ign_interfaces/msg/WorldControl': ros_ign_interfaces.msg.WorldControl,
    'ros_ign_interfaces/msg/WorldReset': ros_ign_interfaces.msg.WorldReset,
    'ros_ign_interfaces/srv/ControlWorld_Request': ros_ign_interfaces.srv.ControlWorld_Request,
    'ros_ign_interfaces/srv/ControlWorld_Response': ros_ign_interfaces.srv.ControlWorld_Response,
    'ros_ign_interfaces/srv/DeleteEntity_Request': ros_ign_interfaces.srv.DeleteEntity_Request,
    'ros_ign_interfaces/srv/DeleteEntity_Response': ros_ign_interfaces.srv.DeleteEntity_Response,
    'ros_ign_interfaces/srv/SetEntityPose_Request': ros_ign_interfaces.srv.SetEntityPose_Request,
    'ros_ign_interfaces/srv/SetEntityPose_Response': ros_ign_interfaces.srv.SetEntityPose_Response,
    'ros_ign_interfaces/srv/SpawnEntity_Request': ros_ign_interfaces.srv.SpawnEntity_Request,
    'ros_ign_interfaces/srv/SpawnEntity_Response': ros_ign_interfaces.srv.SpawnEntity_Response,
    'rosbag2_interfaces/msg/ReadSplitEvent': rosbag2_interfaces.msg.ReadSplitEvent,
    'rosbag2_interfaces/msg/WriteSplitEvent': rosbag2_interfaces.msg.WriteSplitEvent,
    'rosbag2_interfaces/srv/Burst_Request': rosbag2_interfaces.srv.Burst_Request,
    'rosbag2_interfaces/srv/Burst_Response': rosbag2_interfaces.srv.Burst_Response,
    'rosbag2_interfaces/srv/GetRate_Request': rosbag2_interfaces.srv.GetRate_Request,
    'rosbag2_interfaces/srv/GetRate_Response': rosbag2_interfaces.srv.GetRate_Response,
    'rosbag2_interfaces/srv/IsPaused_Request': rosbag2_interfaces.srv.IsPaused_Request,
    'rosbag2_interfaces/srv/IsPaused_Response': rosbag2_interfaces.srv.IsPaused_Response,
    'rosbag2_interfaces/srv/Pause_Request': rosbag2_interfaces.srv.Pause_Request,
    'rosbag2_interfaces/srv/Pause_Response': rosbag2_interfaces.srv.Pause_Response,
    'rosbag2_interfaces/srv/PlayNext_Request': rosbag2_interfaces.srv.PlayNext_Request,
    'rosbag2_interfaces/srv/PlayNext_Response': rosbag2_interfaces.srv.PlayNext_Response,
    'rosbag2_interfaces/srv/Resume_Request': rosbag2_interfaces.srv.Resume_Request,
    'rosbag2_interfaces/srv/Resume_Response': rosbag2_interfaces.srv.Resume_Response,
    'rosbag2_interfaces/srv/Seek_Request': rosbag2_interfaces.srv.Seek_Request,
    'rosbag2_interfaces/srv/Seek_Response': rosbag2_interfaces.srv.Seek_Response,
    'rosbag2_interfaces/srv/SetRate_Request': rosbag2_interfaces.srv.SetRate_Request,
    'rosbag2_interfaces/srv/SetRate_Response': rosbag2_interfaces.srv.SetRate_Response,
    'rosbag2_interfaces/srv/Snapshot_Request': rosbag2_interfaces.srv.Snapshot_Request,
    'rosbag2_interfaces/srv/Snapshot_Response': rosbag2_interfaces.srv.Snapshot_Response,
    'rosbag2_interfaces/srv/TogglePaused_Request': rosbag2_interfaces.srv.TogglePaused_Request,
    'rosbag2_interfaces/srv/TogglePaused_Response': rosbag2_interfaces.srv.TogglePaused_Response,
    'rosgraph_msgs/msg/Clock': rosgraph_msgs.msg.Clock,
    'sensor_msgs/msg/BatteryState': sensor_msgs.msg.BatteryState,
    'sensor_msgs/msg/CameraInfo': sensor_msgs.msg.CameraInfo,
    'sensor_msgs/msg/ChannelFloat32': sensor_msgs.msg.ChannelFloat32,
    'sensor_msgs/msg/CompressedImage': sensor_msgs.msg.CompressedImage,
    'sensor_msgs/msg/FluidPressure': sensor_msgs.msg.FluidPressure,
    'sensor_msgs/msg/Illuminance': sensor_msgs.msg.Illuminance,
    'sensor_msgs/msg/Image': sensor_msgs.msg.Image,
    'sensor_msgs/msg/Imu': sensor_msgs.msg.Imu,
    'sensor_msgs/msg/JointState': sensor_msgs.msg.JointState,
    'sensor_msgs/msg/Joy': sensor_msgs.msg.Joy,
    'sensor_msgs/msg/JoyFeedback': sensor_msgs.msg.JoyFeedback,
    'sensor_msgs/msg/JoyFeedbackArray': sensor_msgs.msg.JoyFeedbackArray,
    'sensor_msgs/msg/LaserEcho': sensor_msgs.msg.LaserEcho,
    'sensor_msgs/msg/LaserScan': sensor_msgs.msg.LaserScan,
    'sensor_msgs/msg/MagneticField': sensor_msgs.msg.MagneticField,
    'sensor_msgs/msg/MultiDOFJointState': sensor_msgs.msg.MultiDOFJointState,
    'sensor_msgs/msg/MultiEchoLaserScan': sensor_msgs.msg.MultiEchoLaserScan,
    'sensor_msgs/msg/NavSatFix': sensor_msgs.msg.NavSatFix,
    'sensor_msgs/msg/NavSatStatus': sensor_msgs.msg.NavSatStatus,
    'sensor_msgs/msg/PointCloud': sensor_msgs.msg.PointCloud,
    'sensor_msgs/msg/PointCloud2': sensor_msgs.msg.PointCloud2,
    'sensor_msgs/msg/PointField': sensor_msgs.msg.PointField,
    'sensor_msgs/msg/Range': sensor_msgs.msg.Range,
    'sensor_msgs/msg/RegionOfInterest': sensor_msgs.msg.RegionOfInterest,
    'sensor_msgs/msg/RelativeHumidity': sensor_msgs.msg.RelativeHumidity,
    'sensor_msgs/msg/Temperature': sensor_msgs.msg.Temperature,
    'sensor_msgs/msg/TimeReference': sensor_msgs.msg.TimeReference,
    'sensor_msgs/srv/SetCameraInfo_Request': sensor_msgs.srv.SetCameraInfo_Request,
    'sensor_msgs/srv/SetCameraInfo_Response': sensor_msgs.srv.SetCameraInfo_Response,
    'shape_msgs/msg/Mesh': shape_msgs.msg.Mesh,
    'shape_msgs/msg/MeshTriangle': shape_msgs.msg.MeshTriangle,
    'shape_msgs/msg/Plane': shape_msgs.msg.Plane,
    'shape_msgs/msg/SolidPrimitive': shape_msgs.msg.SolidPrimitive,
    'slam_toolbox/srvs/AddSubmap_Request': slam_toolbox.srvs.AddSubmap_Request,
    'slam_toolbox/srvs/AddSubmap_Response': slam_toolbox.srvs.AddSubmap_Response,
    'slam_toolbox/srvs/ClearQueue_Request': slam_toolbox.srvs.ClearQueue_Request,
    'slam_toolbox/srvs/ClearQueue_Response': slam_toolbox.srvs.ClearQueue_Response,
    'slam_toolbox/srvs/Clear_Request': slam_toolbox.srvs.Clear_Request,
    'slam_toolbox/srvs/Clear_Response': slam_toolbox.srvs.Clear_Response,
    'slam_toolbox/srvs/DeserializePoseGraph_Request': slam_toolbox.srvs.DeserializePoseGraph_Request,
    'slam_toolbox/srvs/DeserializePoseGraph_Response': slam_toolbox.srvs.DeserializePoseGraph_Response,
    'slam_toolbox/srvs/LoopClosure_Request': slam_toolbox.srvs.LoopClosure_Request,
    'slam_toolbox/srvs/LoopClosure_Response': slam_toolbox.srvs.LoopClosure_Response,
    'slam_toolbox/srvs/MergeMaps_Request': slam_toolbox.srvs.MergeMaps_Request,
    'slam_toolbox/srvs/MergeMaps_Response': slam_toolbox.srvs.MergeMaps_Response,
    'slam_toolbox/srvs/Pause_Request': slam_toolbox.srvs.Pause_Request,
    'slam_toolbox/srvs/Pause_Response': slam_toolbox.srvs.Pause_Response,
    'slam_toolbox/srvs/SaveMap_Request': slam_toolbox.srvs.SaveMap_Request,
    'slam_toolbox/srvs/SaveMap_Response': slam_toolbox.srvs.SaveMap_Response,
    'slam_toolbox/srvs/SerializePoseGraph_Request': slam_toolbox.srvs.SerializePoseGraph_Request,
    'slam_toolbox/srvs/SerializePoseGraph_Response': slam_toolbox.srvs.SerializePoseGraph_Response,
    'slam_toolbox/srvs/ToggleInteractive_Request': slam_toolbox.srvs.ToggleInteractive_Request,
    'slam_toolbox/srvs/ToggleInteractive_Response': slam_toolbox.srvs.ToggleInteractive_Response,
    'statistics_msgs/msg/MetricsMessage': statistics_msgs.msg.MetricsMessage,
    'statistics_msgs/msg/StatisticDataPoint': statistics_msgs.msg.StatisticDataPoint,
    'statistics_msgs/msg/StatisticDataType': statistics_msgs.msg.StatisticDataType,
    'std_msgs/msg/Bool': std_msgs.msg.Bool,
    'std_msgs/msg/Byte': std_msgs.msg.Byte,
    'std_msgs/msg/ByteMultiArray': std_msgs.msg.ByteMultiArray,
    'std_msgs/msg/Char': std_msgs.msg.Char,
    'std_msgs/msg/ColorRGBA': std_msgs.msg.ColorRGBA,
    'std_msgs/msg/Empty': std_msgs.msg.Empty,
    'std_msgs/msg/Float32': std_msgs.msg.Float32,
    'std_msgs/msg/Float32MultiArray': std_msgs.msg.Float32MultiArray,
    'std_msgs/msg/Float64': std_msgs.msg.Float64,
    'std_msgs/msg/Float64MultiArray': std_msgs.msg.Float64MultiArray,
    'std_msgs/msg/Header': std_msgs.msg.Header,
    'std_msgs/msg/Int16': std_msgs.msg.Int16,
    'std_msgs/msg/Int16MultiArray': std_msgs.msg.Int16MultiArray,
    'std_msgs/msg/Int32': std_msgs.msg.Int32,
    'std_msgs/msg/Int32MultiArray': std_msgs.msg.Int32MultiArray,
    'std_msgs/msg/Int64': std_msgs.msg.Int64,
    'std_msgs/msg/Int64MultiArray': std_msgs.msg.Int64MultiArray,
    'std_msgs/msg/Int8': std_msgs.msg.Int8,
    'std_msgs/msg/Int8MultiArray': std_msgs.msg.Int8MultiArray,
    'std_msgs/msg/MultiArrayDimension': std_msgs.msg.MultiArrayDimension,
    'std_msgs/msg/MultiArrayLayout': std_msgs.msg.MultiArrayLayout,
    'std_msgs/msg/String': std_msgs.msg.String,
    'std_msgs/msg/UInt16': std_msgs.msg.UInt16,
    'std_msgs/msg/UInt16MultiArray': std_msgs.msg.UInt16MultiArray,
    'std_msgs/msg/UInt32': std_msgs.msg.UInt32,
    'std_msgs/msg/UInt32MultiArray': std_msgs.msg.UInt32MultiArray,
    'std_msgs/msg/UInt64': std_msgs.msg.UInt64,
    'std_msgs/msg/UInt64MultiArray': std_msgs.msg.UInt64MultiArray,
    'std_msgs/msg/UInt8': std_msgs.msg.UInt8,
    'std_msgs/msg/UInt8MultiArray': std_msgs.msg.UInt8MultiArray,
    'std_srvs/srv/Empty_Request': std_srvs.srv.Empty_Request,
    'std_srvs/srv/Empty_Response': std_srvs.srv.Empty_Response,
    'std_srvs/srv/SetBool_Request': std_srvs.srv.SetBool_Request,
    'std_srvs/srv/SetBool_Response': std_srvs.srv.SetBool_Response,
    'std_srvs/srv/Trigger_Request': std_srvs.srv.Trigger_Request,
    'std_srvs/srv/Trigger_Response': std_srvs.srv.Trigger_Response,
    'stereo_msgs/msg/DisparityImage': stereo_msgs.msg.DisparityImage,
    'tf2_msgs/action/LookupTransform_Feedback': tf2_msgs.action.LookupTransform_Feedback,
    'tf2_msgs/action/LookupTransform_FeedbackMessage': tf2_msgs.action.LookupTransform_FeedbackMessage,
    'tf2_msgs/action/LookupTransform_GetResult_Request': tf2_msgs.action.LookupTransform_GetResult_Request,
    'tf2_msgs/action/LookupTransform_GetResult_Response': tf2_msgs.action.LookupTransform_GetResult_Response,
    'tf2_msgs/action/LookupTransform_Goal': tf2_msgs.action.LookupTransform_Goal,
    'tf2_msgs/action/LookupTransform_Result': tf2_msgs.action.LookupTransform_Result,
    'tf2_msgs/action/LookupTransform_SendGoal_Request': tf2_msgs.action.LookupTransform_SendGoal_Request,
    'tf2_msgs/action/LookupTransform_SendGoal_Response': tf2_msgs.action.LookupTransform_SendGoal_Response,
    'tf2_msgs/msg/TF2Error': tf2_msgs.msg.TF2Error,
    'tf2_msgs/msg/TFMessage': tf2_msgs.msg.TFMessage,
    'tf2_msgs/srv/FrameGraph_Request': tf2_msgs.srv.FrameGraph_Request,
    'tf2_msgs/srv/FrameGraph_Response': tf2_msgs.srv.FrameGraph_Response,
    'theora_image_transport/msg/Packet': theora_image_transport.msg.Packet,
    'trajectory_msgs/msg/JointTrajectory': trajectory_msgs.msg.JointTrajectory,
    'trajectory_msgs/msg/JointTrajectoryPoint': trajectory_msgs.msg.JointTrajectoryPoint,
    'trajectory_msgs/msg/MultiDOFJointTrajectory': trajectory_msgs.msg.MultiDOFJointTrajectory,
    'trajectory_msgs/msg/MultiDOFJointTrajectoryPoint': trajectory_msgs.msg.MultiDOFJointTrajectoryPoint,
    'turtlebot3_msgs/action/Patrol_Feedback': turtlebot3_msgs.action.Patrol_Feedback,
    'turtlebot3_msgs/action/Patrol_FeedbackMessage': turtlebot3_msgs.action.Patrol_FeedbackMessage,
    'turtlebot3_msgs/action/Patrol_GetResult_Request': turtlebot3_msgs.action.Patrol_GetResult_Request,
    'turtlebot3_msgs/action/Patrol_GetResult_Response': turtlebot3_msgs.action.Patrol_GetResult_Response,
    'turtlebot3_msgs/action/Patrol_Goal': turtlebot3_msgs.action.Patrol_Goal,
    'turtlebot3_msgs/action/Patrol_Result': turtlebot3_msgs.action.Patrol_Result,
    'turtlebot3_msgs/action/Patrol_SendGoal_Request': turtlebot3_msgs.action.Patrol_SendGoal_Request,
    'turtlebot3_msgs/action/Patrol_SendGoal_Response': turtlebot3_msgs.action.Patrol_SendGoal_Response,
    'turtlebot3_msgs/msg/SensorState': turtlebot3_msgs.msg.SensorState,
    'turtlebot3_msgs/msg/Sound': turtlebot3_msgs.msg.Sound,
    'turtlebot3_msgs/msg/VersionInfo': turtlebot3_msgs.msg.VersionInfo,
    'turtlebot3_msgs/srv/Dqn_Request': turtlebot3_msgs.srv.Dqn_Request,
    'turtlebot3_msgs/srv/Dqn_Response': turtlebot3_msgs.srv.Dqn_Response,
    'turtlebot3_msgs/srv/Sound_Request': turtlebot3_msgs.srv.Sound_Request,
    'turtlebot3_msgs/srv/Sound_Response': turtlebot3_msgs.srv.Sound_Response,
    'turtlebot4_msgs/msg/UserButton': turtlebot4_msgs.msg.UserButton,
    'turtlebot4_msgs/msg/UserDisplay': turtlebot4_msgs.msg.UserDisplay,
    'turtlebot4_msgs/msg/UserLed': turtlebot4_msgs.msg.UserLed,
    'turtlesim/action/RotateAbsolute_Feedback': turtlesim.action.RotateAbsolute_Feedback,
    'turtlesim/action/RotateAbsolute_FeedbackMessage': turtlesim.action.RotateAbsolute_FeedbackMessage,
    'turtlesim/action/RotateAbsolute_GetResult_Request': turtlesim.action.RotateAbsolute_GetResult_Request,
    'turtlesim/action/RotateAbsolute_GetResult_Response': turtlesim.action.RotateAbsolute_GetResult_Response,
    'turtlesim/action/RotateAbsolute_Goal': turtlesim.action.RotateAbsolute_Goal,
    'turtlesim/action/RotateAbsolute_Result': turtlesim.action.RotateAbsolute_Result,
    'turtlesim/action/RotateAbsolute_SendGoal_Request': turtlesim.action.RotateAbsolute_SendGoal_Request,
    'turtlesim/action/RotateAbsolute_SendGoal_Response': turtlesim.action.RotateAbsolute_SendGoal_Response,
    'turtlesim/msg/Color': turtlesim.msg.Color,
    'turtlesim/msg/Pose': turtlesim.msg.Pose,
    'turtlesim/srv/Kill_Request': turtlesim.srv.Kill_Request,
    'turtlesim/srv/Kill_Response': turtlesim.srv.Kill_Response,
    'turtlesim/srv/SetPen_Request': turtlesim.srv.SetPen_Request,
    'turtlesim/srv/SetPen_Response': turtlesim.srv.SetPen_Response,
    'turtlesim/srv/Spawn_Request': turtlesim.srv.Spawn_Request,
    'turtlesim/srv/Spawn_Response': turtlesim.srv.Spawn_Response,
    'turtlesim/srv/TeleportAbsolute_Request': turtlesim.srv.TeleportAbsolute_Request,
    'turtlesim/srv/TeleportAbsolute_Response': turtlesim.srv.TeleportAbsolute_Response,
    'turtlesim/srv/TeleportRelative_Request': turtlesim.srv.TeleportRelative_Request,
    'turtlesim/srv/TeleportRelative_Response': turtlesim.srv.TeleportRelative_Response,
    'unique_identifier_msgs/msg/UUID': unique_identifier_msgs.msg.UUID,
    'vision_msgs/msg/BoundingBox2D': vision_msgs.msg.BoundingBox2D,
    'vision_msgs/msg/BoundingBox2DArray': vision_msgs.msg.BoundingBox2DArray,
    'vision_msgs/msg/BoundingBox3D': vision_msgs.msg.BoundingBox3D,
    'vision_msgs/msg/BoundingBox3DArray': vision_msgs.msg.BoundingBox3DArray,
    'vision_msgs/msg/Classification': vision_msgs.msg.Classification,
    'vision_msgs/msg/Detection2D': vision_msgs.msg.Detection2D,
    'vision_msgs/msg/Detection2DArray': vision_msgs.msg.Detection2DArray,
    'vision_msgs/msg/Detection3D': vision_msgs.msg.Detection3D,
    'vision_msgs/msg/Detection3DArray': vision_msgs.msg.Detection3DArray,
    'vision_msgs/msg/LabelInfo': vision_msgs.msg.LabelInfo,
    'vision_msgs/msg/ObjectHypothesis': vision_msgs.msg.ObjectHypothesis,
    'vision_msgs/msg/ObjectHypothesisWithPose': vision_msgs.msg.ObjectHypothesisWithPose,
    'vision_msgs/msg/Point2D': vision_msgs.msg.Point2D,
    'vision_msgs/msg/Pose2D': vision_msgs.msg.Pose2D,
    'vision_msgs/msg/VisionClass': vision_msgs.msg.VisionClass,
    'vision_msgs/msg/VisionInfo': vision_msgs.msg.VisionInfo,
    'visualization_msgs/msg/ImageMarker': visualization_msgs.msg.ImageMarker,
    'visualization_msgs/msg/InteractiveMarker': visualization_msgs.msg.InteractiveMarker,
    'visualization_msgs/msg/InteractiveMarkerControl': visualization_msgs.msg.InteractiveMarkerControl,
    'visualization_msgs/msg/InteractiveMarkerFeedback': visualization_msgs.msg.InteractiveMarkerFeedback,
    'visualization_msgs/msg/InteractiveMarkerInit': visualization_msgs.msg.InteractiveMarkerInit,
    'visualization_msgs/msg/InteractiveMarkerPose': visualization_msgs.msg.InteractiveMarkerPose,
    'visualization_msgs/msg/InteractiveMarkerUpdate': visualization_msgs.msg.InteractiveMarkerUpdate,
    'visualization_msgs/msg/Marker': visualization_msgs.msg.Marker,
    'visualization_msgs/msg/MarkerArray': visualization_msgs.msg.MarkerArray,
    'visualization_msgs/msg/MenuEntry': visualization_msgs.msg.MenuEntry,
    'visualization_msgs/msg/MeshFile': visualization_msgs.msg.MeshFile,
    'visualization_msgs/msg/UVCoordinate': visualization_msgs.msg.UVCoordinate,
    'visualization_msgs/srv/GetInteractiveMarkers_Request': visualization_msgs.srv.GetInteractiveMarkers_Request,
    'visualization_msgs/srv/GetInteractiveMarkers_Response': visualization_msgs.srv.GetInteractiveMarkers_Response,
  };
  type MessageTypeClassName = keyof MessagesMap;
  type Message = MessagesMap[MessageTypeClassName];
  type MessageType<T> = T extends MessageTypeClassName ? MessagesMap[T] : object;

  type MessageTypeClassConstructorMap = {
    'string': never,
    'ackermann_msgs/msg/AckermannDrive': ackermann_msgs.msg.AckermannDriveConstructor,
    'ackermann_msgs/msg/AckermannDriveStamped': ackermann_msgs.msg.AckermannDriveStampedConstructor,
    'action_msgs/msg/GoalInfo': action_msgs.msg.GoalInfoConstructor,
    'action_msgs/msg/GoalStatus': action_msgs.msg.GoalStatusConstructor,
    'action_msgs/msg/GoalStatusArray': action_msgs.msg.GoalStatusArrayConstructor,
    'action_msgs/srv/CancelGoal_Request': action_msgs.srv.CancelGoal_RequestConstructor,
    'action_msgs/srv/CancelGoal_Response': action_msgs.srv.CancelGoal_ResponseConstructor,
    'actionlib_msgs/msg/GoalID': actionlib_msgs.msg.GoalIDConstructor,
    'actionlib_msgs/msg/GoalStatus': actionlib_msgs.msg.GoalStatusConstructor,
    'actionlib_msgs/msg/GoalStatusArray': actionlib_msgs.msg.GoalStatusArrayConstructor,
    'actuator_msgs/msg/Actuators': actuator_msgs.msg.ActuatorsConstructor,
    'actuator_msgs/msg/ActuatorsAngularPosition': actuator_msgs.msg.ActuatorsAngularPositionConstructor,
    'actuator_msgs/msg/ActuatorsAngularVelocity': actuator_msgs.msg.ActuatorsAngularVelocityConstructor,
    'actuator_msgs/msg/ActuatorsLinearPosition': actuator_msgs.msg.ActuatorsLinearPositionConstructor,
    'actuator_msgs/msg/ActuatorsLinearVelocity': actuator_msgs.msg.ActuatorsLinearVelocityConstructor,
    'actuator_msgs/msg/ActuatorsNormalized': actuator_msgs.msg.ActuatorsNormalizedConstructor,
    'actuator_msgs/msg/ActuatorsPosition': actuator_msgs.msg.ActuatorsPositionConstructor,
    'actuator_msgs/msg/ActuatorsVelocity': actuator_msgs.msg.ActuatorsVelocityConstructor,
    'bond/msg/Constants': bond.msg.ConstantsConstructor,
    'bond/msg/Status': bond.msg.StatusConstructor,
    'builtin_interfaces/msg/Duration': builtin_interfaces.msg.DurationConstructor,
    'builtin_interfaces/msg/Time': builtin_interfaces.msg.TimeConstructor,
    'cartographer_ros_msgs/msg/BagfileProgress': cartographer_ros_msgs.msg.BagfileProgressConstructor,
    'cartographer_ros_msgs/msg/HistogramBucket': cartographer_ros_msgs.msg.HistogramBucketConstructor,
    'cartographer_ros_msgs/msg/LandmarkEntry': cartographer_ros_msgs.msg.LandmarkEntryConstructor,
    'cartographer_ros_msgs/msg/LandmarkList': cartographer_ros_msgs.msg.LandmarkListConstructor,
    'cartographer_ros_msgs/msg/Metric': cartographer_ros_msgs.msg.MetricConstructor,
    'cartographer_ros_msgs/msg/MetricFamily': cartographer_ros_msgs.msg.MetricFamilyConstructor,
    'cartographer_ros_msgs/msg/MetricLabel': cartographer_ros_msgs.msg.MetricLabelConstructor,
    'cartographer_ros_msgs/msg/StatusCode': cartographer_ros_msgs.msg.StatusCodeConstructor,
    'cartographer_ros_msgs/msg/StatusResponse': cartographer_ros_msgs.msg.StatusResponseConstructor,
    'cartographer_ros_msgs/msg/SubmapEntry': cartographer_ros_msgs.msg.SubmapEntryConstructor,
    'cartographer_ros_msgs/msg/SubmapList': cartographer_ros_msgs.msg.SubmapListConstructor,
    'cartographer_ros_msgs/msg/SubmapTexture': cartographer_ros_msgs.msg.SubmapTextureConstructor,
    'cartographer_ros_msgs/msg/TrajectoryStates': cartographer_ros_msgs.msg.TrajectoryStatesConstructor,
    'cartographer_ros_msgs/srv/FinishTrajectory_Request': cartographer_ros_msgs.srv.FinishTrajectory_RequestConstructor,
    'cartographer_ros_msgs/srv/FinishTrajectory_Response': cartographer_ros_msgs.srv.FinishTrajectory_ResponseConstructor,
    'cartographer_ros_msgs/srv/GetTrajectoryStates_Request': cartographer_ros_msgs.srv.GetTrajectoryStates_RequestConstructor,
    'cartographer_ros_msgs/srv/GetTrajectoryStates_Response': cartographer_ros_msgs.srv.GetTrajectoryStates_ResponseConstructor,
    'cartographer_ros_msgs/srv/ReadMetrics_Request': cartographer_ros_msgs.srv.ReadMetrics_RequestConstructor,
    'cartographer_ros_msgs/srv/ReadMetrics_Response': cartographer_ros_msgs.srv.ReadMetrics_ResponseConstructor,
    'cartographer_ros_msgs/srv/StartTrajectory_Request': cartographer_ros_msgs.srv.StartTrajectory_RequestConstructor,
    'cartographer_ros_msgs/srv/StartTrajectory_Response': cartographer_ros_msgs.srv.StartTrajectory_ResponseConstructor,
    'cartographer_ros_msgs/srv/SubmapQuery_Request': cartographer_ros_msgs.srv.SubmapQuery_RequestConstructor,
    'cartographer_ros_msgs/srv/SubmapQuery_Response': cartographer_ros_msgs.srv.SubmapQuery_ResponseConstructor,
    'cartographer_ros_msgs/srv/TrajectoryQuery_Request': cartographer_ros_msgs.srv.TrajectoryQuery_RequestConstructor,
    'cartographer_ros_msgs/srv/TrajectoryQuery_Response': cartographer_ros_msgs.srv.TrajectoryQuery_ResponseConstructor,
    'cartographer_ros_msgs/srv/WriteState_Request': cartographer_ros_msgs.srv.WriteState_RequestConstructor,
    'cartographer_ros_msgs/srv/WriteState_Response': cartographer_ros_msgs.srv.WriteState_ResponseConstructor,
    'composition_interfaces/srv/ListNodes_Request': composition_interfaces.srv.ListNodes_RequestConstructor,
    'composition_interfaces/srv/ListNodes_Response': composition_interfaces.srv.ListNodes_ResponseConstructor,
    'composition_interfaces/srv/LoadNode_Request': composition_interfaces.srv.LoadNode_RequestConstructor,
    'composition_interfaces/srv/LoadNode_Response': composition_interfaces.srv.LoadNode_ResponseConstructor,
    'composition_interfaces/srv/UnloadNode_Request': composition_interfaces.srv.UnloadNode_RequestConstructor,
    'composition_interfaces/srv/UnloadNode_Response': composition_interfaces.srv.UnloadNode_ResponseConstructor,
    'control_msgs/action/FollowJointTrajectory_Feedback': control_msgs.action.FollowJointTrajectory_FeedbackConstructor,
    'control_msgs/action/FollowJointTrajectory_FeedbackMessage': control_msgs.action.FollowJointTrajectory_FeedbackMessageConstructor,
    'control_msgs/action/FollowJointTrajectory_GetResult_Request': control_msgs.action.FollowJointTrajectory_GetResult_RequestConstructor,
    'control_msgs/action/FollowJointTrajectory_GetResult_Response': control_msgs.action.FollowJointTrajectory_GetResult_ResponseConstructor,
    'control_msgs/action/FollowJointTrajectory_Goal': control_msgs.action.FollowJointTrajectory_GoalConstructor,
    'control_msgs/action/FollowJointTrajectory_Result': control_msgs.action.FollowJointTrajectory_ResultConstructor,
    'control_msgs/action/FollowJointTrajectory_SendGoal_Request': control_msgs.action.FollowJointTrajectory_SendGoal_RequestConstructor,
    'control_msgs/action/FollowJointTrajectory_SendGoal_Response': control_msgs.action.FollowJointTrajectory_SendGoal_ResponseConstructor,
    'control_msgs/action/GripperCommand_Feedback': control_msgs.action.GripperCommand_FeedbackConstructor,
    'control_msgs/action/GripperCommand_FeedbackMessage': control_msgs.action.GripperCommand_FeedbackMessageConstructor,
    'control_msgs/action/GripperCommand_GetResult_Request': control_msgs.action.GripperCommand_GetResult_RequestConstructor,
    'control_msgs/action/GripperCommand_GetResult_Response': control_msgs.action.GripperCommand_GetResult_ResponseConstructor,
    'control_msgs/action/GripperCommand_Goal': control_msgs.action.GripperCommand_GoalConstructor,
    'control_msgs/action/GripperCommand_Result': control_msgs.action.GripperCommand_ResultConstructor,
    'control_msgs/action/GripperCommand_SendGoal_Request': control_msgs.action.GripperCommand_SendGoal_RequestConstructor,
    'control_msgs/action/GripperCommand_SendGoal_Response': control_msgs.action.GripperCommand_SendGoal_ResponseConstructor,
    'control_msgs/action/JointTrajectory_Feedback': control_msgs.action.JointTrajectory_FeedbackConstructor,
    'control_msgs/action/JointTrajectory_FeedbackMessage': control_msgs.action.JointTrajectory_FeedbackMessageConstructor,
    'control_msgs/action/JointTrajectory_GetResult_Request': control_msgs.action.JointTrajectory_GetResult_RequestConstructor,
    'control_msgs/action/JointTrajectory_GetResult_Response': control_msgs.action.JointTrajectory_GetResult_ResponseConstructor,
    'control_msgs/action/JointTrajectory_Goal': control_msgs.action.JointTrajectory_GoalConstructor,
    'control_msgs/action/JointTrajectory_Result': control_msgs.action.JointTrajectory_ResultConstructor,
    'control_msgs/action/JointTrajectory_SendGoal_Request': control_msgs.action.JointTrajectory_SendGoal_RequestConstructor,
    'control_msgs/action/JointTrajectory_SendGoal_Response': control_msgs.action.JointTrajectory_SendGoal_ResponseConstructor,
    'control_msgs/action/ParallelGripperCommand_Feedback': control_msgs.action.ParallelGripperCommand_FeedbackConstructor,
    'control_msgs/action/ParallelGripperCommand_FeedbackMessage': control_msgs.action.ParallelGripperCommand_FeedbackMessageConstructor,
    'control_msgs/action/ParallelGripperCommand_GetResult_Request': control_msgs.action.ParallelGripperCommand_GetResult_RequestConstructor,
    'control_msgs/action/ParallelGripperCommand_GetResult_Response': control_msgs.action.ParallelGripperCommand_GetResult_ResponseConstructor,
    'control_msgs/action/ParallelGripperCommand_Goal': control_msgs.action.ParallelGripperCommand_GoalConstructor,
    'control_msgs/action/ParallelGripperCommand_Result': control_msgs.action.ParallelGripperCommand_ResultConstructor,
    'control_msgs/action/ParallelGripperCommand_SendGoal_Request': control_msgs.action.ParallelGripperCommand_SendGoal_RequestConstructor,
    'control_msgs/action/ParallelGripperCommand_SendGoal_Response': control_msgs.action.ParallelGripperCommand_SendGoal_ResponseConstructor,
    'control_msgs/action/PointHead_Feedback': control_msgs.action.PointHead_FeedbackConstructor,
    'control_msgs/action/PointHead_FeedbackMessage': control_msgs.action.PointHead_FeedbackMessageConstructor,
    'control_msgs/action/PointHead_GetResult_Request': control_msgs.action.PointHead_GetResult_RequestConstructor,
    'control_msgs/action/PointHead_GetResult_Response': control_msgs.action.PointHead_GetResult_ResponseConstructor,
    'control_msgs/action/PointHead_Goal': control_msgs.action.PointHead_GoalConstructor,
    'control_msgs/action/PointHead_Result': control_msgs.action.PointHead_ResultConstructor,
    'control_msgs/action/PointHead_SendGoal_Request': control_msgs.action.PointHead_SendGoal_RequestConstructor,
    'control_msgs/action/PointHead_SendGoal_Response': control_msgs.action.PointHead_SendGoal_ResponseConstructor,
    'control_msgs/action/SingleJointPosition_Feedback': control_msgs.action.SingleJointPosition_FeedbackConstructor,
    'control_msgs/action/SingleJointPosition_FeedbackMessage': control_msgs.action.SingleJointPosition_FeedbackMessageConstructor,
    'control_msgs/action/SingleJointPosition_GetResult_Request': control_msgs.action.SingleJointPosition_GetResult_RequestConstructor,
    'control_msgs/action/SingleJointPosition_GetResult_Response': control_msgs.action.SingleJointPosition_GetResult_ResponseConstructor,
    'control_msgs/action/SingleJointPosition_Goal': control_msgs.action.SingleJointPosition_GoalConstructor,
    'control_msgs/action/SingleJointPosition_Result': control_msgs.action.SingleJointPosition_ResultConstructor,
    'control_msgs/action/SingleJointPosition_SendGoal_Request': control_msgs.action.SingleJointPosition_SendGoal_RequestConstructor,
    'control_msgs/action/SingleJointPosition_SendGoal_Response': control_msgs.action.SingleJointPosition_SendGoal_ResponseConstructor,
    'control_msgs/msg/AdmittanceControllerState': control_msgs.msg.AdmittanceControllerStateConstructor,
    'control_msgs/msg/DynamicJointState': control_msgs.msg.DynamicJointStateConstructor,
    'control_msgs/msg/GripperCommand': control_msgs.msg.GripperCommandConstructor,
    'control_msgs/msg/InterfaceValue': control_msgs.msg.InterfaceValueConstructor,
    'control_msgs/msg/JointComponentTolerance': control_msgs.msg.JointComponentToleranceConstructor,
    'control_msgs/msg/JointControllerState': control_msgs.msg.JointControllerStateConstructor,
    'control_msgs/msg/JointJog': control_msgs.msg.JointJogConstructor,
    'control_msgs/msg/JointTolerance': control_msgs.msg.JointToleranceConstructor,
    'control_msgs/msg/JointTrajectoryControllerState': control_msgs.msg.JointTrajectoryControllerStateConstructor,
    'control_msgs/msg/MecanumDriveControllerState': control_msgs.msg.MecanumDriveControllerStateConstructor,
    'control_msgs/msg/MultiDOFCommand': control_msgs.msg.MultiDOFCommandConstructor,
    'control_msgs/msg/MultiDOFStateStamped': control_msgs.msg.MultiDOFStateStampedConstructor,
    'control_msgs/msg/PidState': control_msgs.msg.PidStateConstructor,
    'control_msgs/msg/SingleDOFState': control_msgs.msg.SingleDOFStateConstructor,
    'control_msgs/msg/SingleDOFStateStamped': control_msgs.msg.SingleDOFStateStampedConstructor,
    'control_msgs/msg/SteeringControllerStatus': control_msgs.msg.SteeringControllerStatusConstructor,
    'control_msgs/srv/QueryCalibrationState_Request': control_msgs.srv.QueryCalibrationState_RequestConstructor,
    'control_msgs/srv/QueryCalibrationState_Response': control_msgs.srv.QueryCalibrationState_ResponseConstructor,
    'control_msgs/srv/QueryTrajectoryState_Request': control_msgs.srv.QueryTrajectoryState_RequestConstructor,
    'control_msgs/srv/QueryTrajectoryState_Response': control_msgs.srv.QueryTrajectoryState_ResponseConstructor,
    'controller_manager_msgs/msg/ChainConnection': controller_manager_msgs.msg.ChainConnectionConstructor,
    'controller_manager_msgs/msg/ControllerState': controller_manager_msgs.msg.ControllerStateConstructor,
    'controller_manager_msgs/msg/HardwareComponentState': controller_manager_msgs.msg.HardwareComponentStateConstructor,
    'controller_manager_msgs/msg/HardwareInterface': controller_manager_msgs.msg.HardwareInterfaceConstructor,
    'controller_manager_msgs/srv/ConfigureController_Request': controller_manager_msgs.srv.ConfigureController_RequestConstructor,
    'controller_manager_msgs/srv/ConfigureController_Response': controller_manager_msgs.srv.ConfigureController_ResponseConstructor,
    'controller_manager_msgs/srv/ListControllerTypes_Request': controller_manager_msgs.srv.ListControllerTypes_RequestConstructor,
    'controller_manager_msgs/srv/ListControllerTypes_Response': controller_manager_msgs.srv.ListControllerTypes_ResponseConstructor,
    'controller_manager_msgs/srv/ListControllers_Request': controller_manager_msgs.srv.ListControllers_RequestConstructor,
    'controller_manager_msgs/srv/ListControllers_Response': controller_manager_msgs.srv.ListControllers_ResponseConstructor,
    'controller_manager_msgs/srv/ListHardwareComponents_Request': controller_manager_msgs.srv.ListHardwareComponents_RequestConstructor,
    'controller_manager_msgs/srv/ListHardwareComponents_Response': controller_manager_msgs.srv.ListHardwareComponents_ResponseConstructor,
    'controller_manager_msgs/srv/ListHardwareInterfaces_Request': controller_manager_msgs.srv.ListHardwareInterfaces_RequestConstructor,
    'controller_manager_msgs/srv/ListHardwareInterfaces_Response': controller_manager_msgs.srv.ListHardwareInterfaces_ResponseConstructor,
    'controller_manager_msgs/srv/LoadController_Request': controller_manager_msgs.srv.LoadController_RequestConstructor,
    'controller_manager_msgs/srv/LoadController_Response': controller_manager_msgs.srv.LoadController_ResponseConstructor,
    'controller_manager_msgs/srv/ReloadControllerLibraries_Request': controller_manager_msgs.srv.ReloadControllerLibraries_RequestConstructor,
    'controller_manager_msgs/srv/ReloadControllerLibraries_Response': controller_manager_msgs.srv.ReloadControllerLibraries_ResponseConstructor,
    'controller_manager_msgs/srv/SetHardwareComponentState_Request': controller_manager_msgs.srv.SetHardwareComponentState_RequestConstructor,
    'controller_manager_msgs/srv/SetHardwareComponentState_Response': controller_manager_msgs.srv.SetHardwareComponentState_ResponseConstructor,
    'controller_manager_msgs/srv/SwitchController_Request': controller_manager_msgs.srv.SwitchController_RequestConstructor,
    'controller_manager_msgs/srv/SwitchController_Response': controller_manager_msgs.srv.SwitchController_ResponseConstructor,
    'controller_manager_msgs/srv/UnloadController_Request': controller_manager_msgs.srv.UnloadController_RequestConstructor,
    'controller_manager_msgs/srv/UnloadController_Response': controller_manager_msgs.srv.UnloadController_ResponseConstructor,
    'diagnostic_msgs/msg/DiagnosticArray': diagnostic_msgs.msg.DiagnosticArrayConstructor,
    'diagnostic_msgs/msg/DiagnosticStatus': diagnostic_msgs.msg.DiagnosticStatusConstructor,
    'diagnostic_msgs/msg/KeyValue': diagnostic_msgs.msg.KeyValueConstructor,
    'diagnostic_msgs/srv/AddDiagnostics_Request': diagnostic_msgs.srv.AddDiagnostics_RequestConstructor,
    'diagnostic_msgs/srv/AddDiagnostics_Response': diagnostic_msgs.srv.AddDiagnostics_ResponseConstructor,
    'diagnostic_msgs/srv/SelfTest_Request': diagnostic_msgs.srv.SelfTest_RequestConstructor,
    'diagnostic_msgs/srv/SelfTest_Response': diagnostic_msgs.srv.SelfTest_ResponseConstructor,
    'dwb_msgs/msg/CriticScore': dwb_msgs.msg.CriticScoreConstructor,
    'dwb_msgs/msg/LocalPlanEvaluation': dwb_msgs.msg.LocalPlanEvaluationConstructor,
    'dwb_msgs/msg/Trajectory2D': dwb_msgs.msg.Trajectory2DConstructor,
    'dwb_msgs/msg/TrajectoryScore': dwb_msgs.msg.TrajectoryScoreConstructor,
    'dwb_msgs/srv/DebugLocalPlan_Request': dwb_msgs.srv.DebugLocalPlan_RequestConstructor,
    'dwb_msgs/srv/DebugLocalPlan_Response': dwb_msgs.srv.DebugLocalPlan_ResponseConstructor,
    'dwb_msgs/srv/GenerateTrajectory_Request': dwb_msgs.srv.GenerateTrajectory_RequestConstructor,
    'dwb_msgs/srv/GenerateTrajectory_Response': dwb_msgs.srv.GenerateTrajectory_ResponseConstructor,
    'dwb_msgs/srv/GenerateTwists_Request': dwb_msgs.srv.GenerateTwists_RequestConstructor,
    'dwb_msgs/srv/GenerateTwists_Response': dwb_msgs.srv.GenerateTwists_ResponseConstructor,
    'dwb_msgs/srv/GetCriticScore_Request': dwb_msgs.srv.GetCriticScore_RequestConstructor,
    'dwb_msgs/srv/GetCriticScore_Response': dwb_msgs.srv.GetCriticScore_ResponseConstructor,
    'dwb_msgs/srv/ScoreTrajectory_Request': dwb_msgs.srv.ScoreTrajectory_RequestConstructor,
    'dwb_msgs/srv/ScoreTrajectory_Response': dwb_msgs.srv.ScoreTrajectory_ResponseConstructor,
    'geometry_msgs/msg/Accel': geometry_msgs.msg.AccelConstructor,
    'geometry_msgs/msg/AccelStamped': geometry_msgs.msg.AccelStampedConstructor,
    'geometry_msgs/msg/AccelWithCovariance': geometry_msgs.msg.AccelWithCovarianceConstructor,
    'geometry_msgs/msg/AccelWithCovarianceStamped': geometry_msgs.msg.AccelWithCovarianceStampedConstructor,
    'geometry_msgs/msg/Inertia': geometry_msgs.msg.InertiaConstructor,
    'geometry_msgs/msg/InertiaStamped': geometry_msgs.msg.InertiaStampedConstructor,
    'geometry_msgs/msg/Point': geometry_msgs.msg.PointConstructor,
    'geometry_msgs/msg/Point32': geometry_msgs.msg.Point32Constructor,
    'geometry_msgs/msg/PointStamped': geometry_msgs.msg.PointStampedConstructor,
    'geometry_msgs/msg/Polygon': geometry_msgs.msg.PolygonConstructor,
    'geometry_msgs/msg/PolygonStamped': geometry_msgs.msg.PolygonStampedConstructor,
    'geometry_msgs/msg/Pose': geometry_msgs.msg.PoseConstructor,
    'geometry_msgs/msg/Pose2D': geometry_msgs.msg.Pose2DConstructor,
    'geometry_msgs/msg/PoseArray': geometry_msgs.msg.PoseArrayConstructor,
    'geometry_msgs/msg/PoseStamped': geometry_msgs.msg.PoseStampedConstructor,
    'geometry_msgs/msg/PoseWithCovariance': geometry_msgs.msg.PoseWithCovarianceConstructor,
    'geometry_msgs/msg/PoseWithCovarianceStamped': geometry_msgs.msg.PoseWithCovarianceStampedConstructor,
    'geometry_msgs/msg/Quaternion': geometry_msgs.msg.QuaternionConstructor,
    'geometry_msgs/msg/QuaternionStamped': geometry_msgs.msg.QuaternionStampedConstructor,
    'geometry_msgs/msg/Transform': geometry_msgs.msg.TransformConstructor,
    'geometry_msgs/msg/TransformStamped': geometry_msgs.msg.TransformStampedConstructor,
    'geometry_msgs/msg/Twist': geometry_msgs.msg.TwistConstructor,
    'geometry_msgs/msg/TwistStamped': geometry_msgs.msg.TwistStampedConstructor,
    'geometry_msgs/msg/TwistWithCovariance': geometry_msgs.msg.TwistWithCovarianceConstructor,
    'geometry_msgs/msg/TwistWithCovarianceStamped': geometry_msgs.msg.TwistWithCovarianceStampedConstructor,
    'geometry_msgs/msg/Vector3': geometry_msgs.msg.Vector3Constructor,
    'geometry_msgs/msg/Vector3Stamped': geometry_msgs.msg.Vector3StampedConstructor,
    'geometry_msgs/msg/VelocityStamped': geometry_msgs.msg.VelocityStampedConstructor,
    'geometry_msgs/msg/Wrench': geometry_msgs.msg.WrenchConstructor,
    'geometry_msgs/msg/WrenchStamped': geometry_msgs.msg.WrenchStampedConstructor,
    'gps_msgs/msg/GPSFix': gps_msgs.msg.GPSFixConstructor,
    'gps_msgs/msg/GPSStatus': gps_msgs.msg.GPSStatusConstructor,
    'graph_msgs/msg/Edges': graph_msgs.msg.EdgesConstructor,
    'graph_msgs/msg/GeometryGraph': graph_msgs.msg.GeometryGraphConstructor,
    'irobot_create_msgs/action/AudioNoteSequence_Feedback': irobot_create_msgs.action.AudioNoteSequence_FeedbackConstructor,
    'irobot_create_msgs/action/AudioNoteSequence_FeedbackMessage': irobot_create_msgs.action.AudioNoteSequence_FeedbackMessageConstructor,
    'irobot_create_msgs/action/AudioNoteSequence_GetResult_Request': irobot_create_msgs.action.AudioNoteSequence_GetResult_RequestConstructor,
    'irobot_create_msgs/action/AudioNoteSequence_GetResult_Response': irobot_create_msgs.action.AudioNoteSequence_GetResult_ResponseConstructor,
    'irobot_create_msgs/action/AudioNoteSequence_Goal': irobot_create_msgs.action.AudioNoteSequence_GoalConstructor,
    'irobot_create_msgs/action/AudioNoteSequence_Result': irobot_create_msgs.action.AudioNoteSequence_ResultConstructor,
    'irobot_create_msgs/action/AudioNoteSequence_SendGoal_Request': irobot_create_msgs.action.AudioNoteSequence_SendGoal_RequestConstructor,
    'irobot_create_msgs/action/AudioNoteSequence_SendGoal_Response': irobot_create_msgs.action.AudioNoteSequence_SendGoal_ResponseConstructor,
    'irobot_create_msgs/action/Dock_Feedback': irobot_create_msgs.action.Dock_FeedbackConstructor,
    'irobot_create_msgs/action/Dock_FeedbackMessage': irobot_create_msgs.action.Dock_FeedbackMessageConstructor,
    'irobot_create_msgs/action/Dock_GetResult_Request': irobot_create_msgs.action.Dock_GetResult_RequestConstructor,
    'irobot_create_msgs/action/Dock_GetResult_Response': irobot_create_msgs.action.Dock_GetResult_ResponseConstructor,
    'irobot_create_msgs/action/Dock_Goal': irobot_create_msgs.action.Dock_GoalConstructor,
    'irobot_create_msgs/action/Dock_Result': irobot_create_msgs.action.Dock_ResultConstructor,
    'irobot_create_msgs/action/Dock_SendGoal_Request': irobot_create_msgs.action.Dock_SendGoal_RequestConstructor,
    'irobot_create_msgs/action/Dock_SendGoal_Response': irobot_create_msgs.action.Dock_SendGoal_ResponseConstructor,
    'irobot_create_msgs/action/DriveArc_Feedback': irobot_create_msgs.action.DriveArc_FeedbackConstructor,
    'irobot_create_msgs/action/DriveArc_FeedbackMessage': irobot_create_msgs.action.DriveArc_FeedbackMessageConstructor,
    'irobot_create_msgs/action/DriveArc_GetResult_Request': irobot_create_msgs.action.DriveArc_GetResult_RequestConstructor,
    'irobot_create_msgs/action/DriveArc_GetResult_Response': irobot_create_msgs.action.DriveArc_GetResult_ResponseConstructor,
    'irobot_create_msgs/action/DriveArc_Goal': irobot_create_msgs.action.DriveArc_GoalConstructor,
    'irobot_create_msgs/action/DriveArc_Result': irobot_create_msgs.action.DriveArc_ResultConstructor,
    'irobot_create_msgs/action/DriveArc_SendGoal_Request': irobot_create_msgs.action.DriveArc_SendGoal_RequestConstructor,
    'irobot_create_msgs/action/DriveArc_SendGoal_Response': irobot_create_msgs.action.DriveArc_SendGoal_ResponseConstructor,
    'irobot_create_msgs/action/DriveDistance_Feedback': irobot_create_msgs.action.DriveDistance_FeedbackConstructor,
    'irobot_create_msgs/action/DriveDistance_FeedbackMessage': irobot_create_msgs.action.DriveDistance_FeedbackMessageConstructor,
    'irobot_create_msgs/action/DriveDistance_GetResult_Request': irobot_create_msgs.action.DriveDistance_GetResult_RequestConstructor,
    'irobot_create_msgs/action/DriveDistance_GetResult_Response': irobot_create_msgs.action.DriveDistance_GetResult_ResponseConstructor,
    'irobot_create_msgs/action/DriveDistance_Goal': irobot_create_msgs.action.DriveDistance_GoalConstructor,
    'irobot_create_msgs/action/DriveDistance_Result': irobot_create_msgs.action.DriveDistance_ResultConstructor,
    'irobot_create_msgs/action/DriveDistance_SendGoal_Request': irobot_create_msgs.action.DriveDistance_SendGoal_RequestConstructor,
    'irobot_create_msgs/action/DriveDistance_SendGoal_Response': irobot_create_msgs.action.DriveDistance_SendGoal_ResponseConstructor,
    'irobot_create_msgs/action/LedAnimation_Feedback': irobot_create_msgs.action.LedAnimation_FeedbackConstructor,
    'irobot_create_msgs/action/LedAnimation_FeedbackMessage': irobot_create_msgs.action.LedAnimation_FeedbackMessageConstructor,
    'irobot_create_msgs/action/LedAnimation_GetResult_Request': irobot_create_msgs.action.LedAnimation_GetResult_RequestConstructor,
    'irobot_create_msgs/action/LedAnimation_GetResult_Response': irobot_create_msgs.action.LedAnimation_GetResult_ResponseConstructor,
    'irobot_create_msgs/action/LedAnimation_Goal': irobot_create_msgs.action.LedAnimation_GoalConstructor,
    'irobot_create_msgs/action/LedAnimation_Result': irobot_create_msgs.action.LedAnimation_ResultConstructor,
    'irobot_create_msgs/action/LedAnimation_SendGoal_Request': irobot_create_msgs.action.LedAnimation_SendGoal_RequestConstructor,
    'irobot_create_msgs/action/LedAnimation_SendGoal_Response': irobot_create_msgs.action.LedAnimation_SendGoal_ResponseConstructor,
    'irobot_create_msgs/action/NavigateToPosition_Feedback': irobot_create_msgs.action.NavigateToPosition_FeedbackConstructor,
    'irobot_create_msgs/action/NavigateToPosition_FeedbackMessage': irobot_create_msgs.action.NavigateToPosition_FeedbackMessageConstructor,
    'irobot_create_msgs/action/NavigateToPosition_GetResult_Request': irobot_create_msgs.action.NavigateToPosition_GetResult_RequestConstructor,
    'irobot_create_msgs/action/NavigateToPosition_GetResult_Response': irobot_create_msgs.action.NavigateToPosition_GetResult_ResponseConstructor,
    'irobot_create_msgs/action/NavigateToPosition_Goal': irobot_create_msgs.action.NavigateToPosition_GoalConstructor,
    'irobot_create_msgs/action/NavigateToPosition_Result': irobot_create_msgs.action.NavigateToPosition_ResultConstructor,
    'irobot_create_msgs/action/NavigateToPosition_SendGoal_Request': irobot_create_msgs.action.NavigateToPosition_SendGoal_RequestConstructor,
    'irobot_create_msgs/action/NavigateToPosition_SendGoal_Response': irobot_create_msgs.action.NavigateToPosition_SendGoal_ResponseConstructor,
    'irobot_create_msgs/action/RotateAngle_Feedback': irobot_create_msgs.action.RotateAngle_FeedbackConstructor,
    'irobot_create_msgs/action/RotateAngle_FeedbackMessage': irobot_create_msgs.action.RotateAngle_FeedbackMessageConstructor,
    'irobot_create_msgs/action/RotateAngle_GetResult_Request': irobot_create_msgs.action.RotateAngle_GetResult_RequestConstructor,
    'irobot_create_msgs/action/RotateAngle_GetResult_Response': irobot_create_msgs.action.RotateAngle_GetResult_ResponseConstructor,
    'irobot_create_msgs/action/RotateAngle_Goal': irobot_create_msgs.action.RotateAngle_GoalConstructor,
    'irobot_create_msgs/action/RotateAngle_Result': irobot_create_msgs.action.RotateAngle_ResultConstructor,
    'irobot_create_msgs/action/RotateAngle_SendGoal_Request': irobot_create_msgs.action.RotateAngle_SendGoal_RequestConstructor,
    'irobot_create_msgs/action/RotateAngle_SendGoal_Response': irobot_create_msgs.action.RotateAngle_SendGoal_ResponseConstructor,
    'irobot_create_msgs/action/Undock_Feedback': irobot_create_msgs.action.Undock_FeedbackConstructor,
    'irobot_create_msgs/action/Undock_FeedbackMessage': irobot_create_msgs.action.Undock_FeedbackMessageConstructor,
    'irobot_create_msgs/action/Undock_GetResult_Request': irobot_create_msgs.action.Undock_GetResult_RequestConstructor,
    'irobot_create_msgs/action/Undock_GetResult_Response': irobot_create_msgs.action.Undock_GetResult_ResponseConstructor,
    'irobot_create_msgs/action/Undock_Goal': irobot_create_msgs.action.Undock_GoalConstructor,
    'irobot_create_msgs/action/Undock_Result': irobot_create_msgs.action.Undock_ResultConstructor,
    'irobot_create_msgs/action/Undock_SendGoal_Request': irobot_create_msgs.action.Undock_SendGoal_RequestConstructor,
    'irobot_create_msgs/action/Undock_SendGoal_Response': irobot_create_msgs.action.Undock_SendGoal_ResponseConstructor,
    'irobot_create_msgs/action/WallFollow_Feedback': irobot_create_msgs.action.WallFollow_FeedbackConstructor,
    'irobot_create_msgs/action/WallFollow_FeedbackMessage': irobot_create_msgs.action.WallFollow_FeedbackMessageConstructor,
    'irobot_create_msgs/action/WallFollow_GetResult_Request': irobot_create_msgs.action.WallFollow_GetResult_RequestConstructor,
    'irobot_create_msgs/action/WallFollow_GetResult_Response': irobot_create_msgs.action.WallFollow_GetResult_ResponseConstructor,
    'irobot_create_msgs/action/WallFollow_Goal': irobot_create_msgs.action.WallFollow_GoalConstructor,
    'irobot_create_msgs/action/WallFollow_Result': irobot_create_msgs.action.WallFollow_ResultConstructor,
    'irobot_create_msgs/action/WallFollow_SendGoal_Request': irobot_create_msgs.action.WallFollow_SendGoal_RequestConstructor,
    'irobot_create_msgs/action/WallFollow_SendGoal_Response': irobot_create_msgs.action.WallFollow_SendGoal_ResponseConstructor,
    'irobot_create_msgs/msg/AudioNote': irobot_create_msgs.msg.AudioNoteConstructor,
    'irobot_create_msgs/msg/AudioNoteVector': irobot_create_msgs.msg.AudioNoteVectorConstructor,
    'irobot_create_msgs/msg/Button': irobot_create_msgs.msg.ButtonConstructor,
    'irobot_create_msgs/msg/DockStatus': irobot_create_msgs.msg.DockStatusConstructor,
    'irobot_create_msgs/msg/HazardDetection': irobot_create_msgs.msg.HazardDetectionConstructor,
    'irobot_create_msgs/msg/HazardDetectionVector': irobot_create_msgs.msg.HazardDetectionVectorConstructor,
    'irobot_create_msgs/msg/InterfaceButtons': irobot_create_msgs.msg.InterfaceButtonsConstructor,
    'irobot_create_msgs/msg/IrIntensity': irobot_create_msgs.msg.IrIntensityConstructor,
    'irobot_create_msgs/msg/IrIntensityVector': irobot_create_msgs.msg.IrIntensityVectorConstructor,
    'irobot_create_msgs/msg/IrOpcode': irobot_create_msgs.msg.IrOpcodeConstructor,
    'irobot_create_msgs/msg/KidnapStatus': irobot_create_msgs.msg.KidnapStatusConstructor,
    'irobot_create_msgs/msg/LedColor': irobot_create_msgs.msg.LedColorConstructor,
    'irobot_create_msgs/msg/LightringLeds': irobot_create_msgs.msg.LightringLedsConstructor,
    'irobot_create_msgs/msg/Mouse': irobot_create_msgs.msg.MouseConstructor,
    'irobot_create_msgs/msg/SlipStatus': irobot_create_msgs.msg.SlipStatusConstructor,
    'irobot_create_msgs/msg/StopStatus': irobot_create_msgs.msg.StopStatusConstructor,
    'irobot_create_msgs/msg/WheelStatus': irobot_create_msgs.msg.WheelStatusConstructor,
    'irobot_create_msgs/msg/WheelTicks': irobot_create_msgs.msg.WheelTicksConstructor,
    'irobot_create_msgs/msg/WheelVels': irobot_create_msgs.msg.WheelVelsConstructor,
    'irobot_create_msgs/srv/EStop_Request': irobot_create_msgs.srv.EStop_RequestConstructor,
    'irobot_create_msgs/srv/EStop_Response': irobot_create_msgs.srv.EStop_ResponseConstructor,
    'irobot_create_msgs/srv/ResetPose_Request': irobot_create_msgs.srv.ResetPose_RequestConstructor,
    'irobot_create_msgs/srv/ResetPose_Response': irobot_create_msgs.srv.ResetPose_ResponseConstructor,
    'irobot_create_msgs/srv/RobotPower_Request': irobot_create_msgs.srv.RobotPower_RequestConstructor,
    'irobot_create_msgs/srv/RobotPower_Response': irobot_create_msgs.srv.RobotPower_ResponseConstructor,
    'lifecycle_msgs/msg/State': lifecycle_msgs.msg.StateConstructor,
    'lifecycle_msgs/msg/Transition': lifecycle_msgs.msg.TransitionConstructor,
    'lifecycle_msgs/msg/TransitionDescription': lifecycle_msgs.msg.TransitionDescriptionConstructor,
    'lifecycle_msgs/msg/TransitionEvent': lifecycle_msgs.msg.TransitionEventConstructor,
    'lifecycle_msgs/srv/ChangeState_Request': lifecycle_msgs.srv.ChangeState_RequestConstructor,
    'lifecycle_msgs/srv/ChangeState_Response': lifecycle_msgs.srv.ChangeState_ResponseConstructor,
    'lifecycle_msgs/srv/GetAvailableStates_Request': lifecycle_msgs.srv.GetAvailableStates_RequestConstructor,
    'lifecycle_msgs/srv/GetAvailableStates_Response': lifecycle_msgs.srv.GetAvailableStates_ResponseConstructor,
    'lifecycle_msgs/srv/GetAvailableTransitions_Request': lifecycle_msgs.srv.GetAvailableTransitions_RequestConstructor,
    'lifecycle_msgs/srv/GetAvailableTransitions_Response': lifecycle_msgs.srv.GetAvailableTransitions_ResponseConstructor,
    'lifecycle_msgs/srv/GetState_Request': lifecycle_msgs.srv.GetState_RequestConstructor,
    'lifecycle_msgs/srv/GetState_Response': lifecycle_msgs.srv.GetState_ResponseConstructor,
    'map_msgs/msg/OccupancyGridUpdate': map_msgs.msg.OccupancyGridUpdateConstructor,
    'map_msgs/msg/PointCloud2Update': map_msgs.msg.PointCloud2UpdateConstructor,
    'map_msgs/msg/ProjectedMap': map_msgs.msg.ProjectedMapConstructor,
    'map_msgs/msg/ProjectedMapInfo': map_msgs.msg.ProjectedMapInfoConstructor,
    'map_msgs/srv/GetMapROI_Request': map_msgs.srv.GetMapROI_RequestConstructor,
    'map_msgs/srv/GetMapROI_Response': map_msgs.srv.GetMapROI_ResponseConstructor,
    'map_msgs/srv/GetPointMapROI_Request': map_msgs.srv.GetPointMapROI_RequestConstructor,
    'map_msgs/srv/GetPointMapROI_Response': map_msgs.srv.GetPointMapROI_ResponseConstructor,
    'map_msgs/srv/GetPointMap_Request': map_msgs.srv.GetPointMap_RequestConstructor,
    'map_msgs/srv/GetPointMap_Response': map_msgs.srv.GetPointMap_ResponseConstructor,
    'map_msgs/srv/ProjectedMapsInfo_Request': map_msgs.srv.ProjectedMapsInfo_RequestConstructor,
    'map_msgs/srv/ProjectedMapsInfo_Response': map_msgs.srv.ProjectedMapsInfo_ResponseConstructor,
    'map_msgs/srv/SaveMap_Request': map_msgs.srv.SaveMap_RequestConstructor,
    'map_msgs/srv/SaveMap_Response': map_msgs.srv.SaveMap_ResponseConstructor,
    'map_msgs/srv/SetMapProjections_Request': map_msgs.srv.SetMapProjections_RequestConstructor,
    'map_msgs/srv/SetMapProjections_Response': map_msgs.srv.SetMapProjections_ResponseConstructor,
    'mocap4r2_control_msgs/msg/Control': mocap4r2_control_msgs.msg.ControlConstructor,
    'mocap4r2_control_msgs/msg/MocapInfo': mocap4r2_control_msgs.msg.MocapInfoConstructor,
    'moveit_msgs/action/ExecuteTrajectory_Feedback': moveit_msgs.action.ExecuteTrajectory_FeedbackConstructor,
    'moveit_msgs/action/ExecuteTrajectory_FeedbackMessage': moveit_msgs.action.ExecuteTrajectory_FeedbackMessageConstructor,
    'moveit_msgs/action/ExecuteTrajectory_GetResult_Request': moveit_msgs.action.ExecuteTrajectory_GetResult_RequestConstructor,
    'moveit_msgs/action/ExecuteTrajectory_GetResult_Response': moveit_msgs.action.ExecuteTrajectory_GetResult_ResponseConstructor,
    'moveit_msgs/action/ExecuteTrajectory_Goal': moveit_msgs.action.ExecuteTrajectory_GoalConstructor,
    'moveit_msgs/action/ExecuteTrajectory_Result': moveit_msgs.action.ExecuteTrajectory_ResultConstructor,
    'moveit_msgs/action/ExecuteTrajectory_SendGoal_Request': moveit_msgs.action.ExecuteTrajectory_SendGoal_RequestConstructor,
    'moveit_msgs/action/ExecuteTrajectory_SendGoal_Response': moveit_msgs.action.ExecuteTrajectory_SendGoal_ResponseConstructor,
    'moveit_msgs/action/GlobalPlanner_Feedback': moveit_msgs.action.GlobalPlanner_FeedbackConstructor,
    'moveit_msgs/action/GlobalPlanner_FeedbackMessage': moveit_msgs.action.GlobalPlanner_FeedbackMessageConstructor,
    'moveit_msgs/action/GlobalPlanner_GetResult_Request': moveit_msgs.action.GlobalPlanner_GetResult_RequestConstructor,
    'moveit_msgs/action/GlobalPlanner_GetResult_Response': moveit_msgs.action.GlobalPlanner_GetResult_ResponseConstructor,
    'moveit_msgs/action/GlobalPlanner_Goal': moveit_msgs.action.GlobalPlanner_GoalConstructor,
    'moveit_msgs/action/GlobalPlanner_Result': moveit_msgs.action.GlobalPlanner_ResultConstructor,
    'moveit_msgs/action/GlobalPlanner_SendGoal_Request': moveit_msgs.action.GlobalPlanner_SendGoal_RequestConstructor,
    'moveit_msgs/action/GlobalPlanner_SendGoal_Response': moveit_msgs.action.GlobalPlanner_SendGoal_ResponseConstructor,
    'moveit_msgs/action/HybridPlanner_Feedback': moveit_msgs.action.HybridPlanner_FeedbackConstructor,
    'moveit_msgs/action/HybridPlanner_FeedbackMessage': moveit_msgs.action.HybridPlanner_FeedbackMessageConstructor,
    'moveit_msgs/action/HybridPlanner_GetResult_Request': moveit_msgs.action.HybridPlanner_GetResult_RequestConstructor,
    'moveit_msgs/action/HybridPlanner_GetResult_Response': moveit_msgs.action.HybridPlanner_GetResult_ResponseConstructor,
    'moveit_msgs/action/HybridPlanner_Goal': moveit_msgs.action.HybridPlanner_GoalConstructor,
    'moveit_msgs/action/HybridPlanner_Result': moveit_msgs.action.HybridPlanner_ResultConstructor,
    'moveit_msgs/action/HybridPlanner_SendGoal_Request': moveit_msgs.action.HybridPlanner_SendGoal_RequestConstructor,
    'moveit_msgs/action/HybridPlanner_SendGoal_Response': moveit_msgs.action.HybridPlanner_SendGoal_ResponseConstructor,
    'moveit_msgs/action/LocalPlanner_Feedback': moveit_msgs.action.LocalPlanner_FeedbackConstructor,
    'moveit_msgs/action/LocalPlanner_FeedbackMessage': moveit_msgs.action.LocalPlanner_FeedbackMessageConstructor,
    'moveit_msgs/action/LocalPlanner_GetResult_Request': moveit_msgs.action.LocalPlanner_GetResult_RequestConstructor,
    'moveit_msgs/action/LocalPlanner_GetResult_Response': moveit_msgs.action.LocalPlanner_GetResult_ResponseConstructor,
    'moveit_msgs/action/LocalPlanner_Goal': moveit_msgs.action.LocalPlanner_GoalConstructor,
    'moveit_msgs/action/LocalPlanner_Result': moveit_msgs.action.LocalPlanner_ResultConstructor,
    'moveit_msgs/action/LocalPlanner_SendGoal_Request': moveit_msgs.action.LocalPlanner_SendGoal_RequestConstructor,
    'moveit_msgs/action/LocalPlanner_SendGoal_Response': moveit_msgs.action.LocalPlanner_SendGoal_ResponseConstructor,
    'moveit_msgs/action/MoveGroupSequence_Feedback': moveit_msgs.action.MoveGroupSequence_FeedbackConstructor,
    'moveit_msgs/action/MoveGroupSequence_FeedbackMessage': moveit_msgs.action.MoveGroupSequence_FeedbackMessageConstructor,
    'moveit_msgs/action/MoveGroupSequence_GetResult_Request': moveit_msgs.action.MoveGroupSequence_GetResult_RequestConstructor,
    'moveit_msgs/action/MoveGroupSequence_GetResult_Response': moveit_msgs.action.MoveGroupSequence_GetResult_ResponseConstructor,
    'moveit_msgs/action/MoveGroupSequence_Goal': moveit_msgs.action.MoveGroupSequence_GoalConstructor,
    'moveit_msgs/action/MoveGroupSequence_Result': moveit_msgs.action.MoveGroupSequence_ResultConstructor,
    'moveit_msgs/action/MoveGroupSequence_SendGoal_Request': moveit_msgs.action.MoveGroupSequence_SendGoal_RequestConstructor,
    'moveit_msgs/action/MoveGroupSequence_SendGoal_Response': moveit_msgs.action.MoveGroupSequence_SendGoal_ResponseConstructor,
    'moveit_msgs/action/MoveGroup_Feedback': moveit_msgs.action.MoveGroup_FeedbackConstructor,
    'moveit_msgs/action/MoveGroup_FeedbackMessage': moveit_msgs.action.MoveGroup_FeedbackMessageConstructor,
    'moveit_msgs/action/MoveGroup_GetResult_Request': moveit_msgs.action.MoveGroup_GetResult_RequestConstructor,
    'moveit_msgs/action/MoveGroup_GetResult_Response': moveit_msgs.action.MoveGroup_GetResult_ResponseConstructor,
    'moveit_msgs/action/MoveGroup_Goal': moveit_msgs.action.MoveGroup_GoalConstructor,
    'moveit_msgs/action/MoveGroup_Result': moveit_msgs.action.MoveGroup_ResultConstructor,
    'moveit_msgs/action/MoveGroup_SendGoal_Request': moveit_msgs.action.MoveGroup_SendGoal_RequestConstructor,
    'moveit_msgs/action/MoveGroup_SendGoal_Response': moveit_msgs.action.MoveGroup_SendGoal_ResponseConstructor,
    'moveit_msgs/action/Pickup_Feedback': moveit_msgs.action.Pickup_FeedbackConstructor,
    'moveit_msgs/action/Pickup_FeedbackMessage': moveit_msgs.action.Pickup_FeedbackMessageConstructor,
    'moveit_msgs/action/Pickup_GetResult_Request': moveit_msgs.action.Pickup_GetResult_RequestConstructor,
    'moveit_msgs/action/Pickup_GetResult_Response': moveit_msgs.action.Pickup_GetResult_ResponseConstructor,
    'moveit_msgs/action/Pickup_Goal': moveit_msgs.action.Pickup_GoalConstructor,
    'moveit_msgs/action/Pickup_Result': moveit_msgs.action.Pickup_ResultConstructor,
    'moveit_msgs/action/Pickup_SendGoal_Request': moveit_msgs.action.Pickup_SendGoal_RequestConstructor,
    'moveit_msgs/action/Pickup_SendGoal_Response': moveit_msgs.action.Pickup_SendGoal_ResponseConstructor,
    'moveit_msgs/action/Place_Feedback': moveit_msgs.action.Place_FeedbackConstructor,
    'moveit_msgs/action/Place_FeedbackMessage': moveit_msgs.action.Place_FeedbackMessageConstructor,
    'moveit_msgs/action/Place_GetResult_Request': moveit_msgs.action.Place_GetResult_RequestConstructor,
    'moveit_msgs/action/Place_GetResult_Response': moveit_msgs.action.Place_GetResult_ResponseConstructor,
    'moveit_msgs/action/Place_Goal': moveit_msgs.action.Place_GoalConstructor,
    'moveit_msgs/action/Place_Result': moveit_msgs.action.Place_ResultConstructor,
    'moveit_msgs/action/Place_SendGoal_Request': moveit_msgs.action.Place_SendGoal_RequestConstructor,
    'moveit_msgs/action/Place_SendGoal_Response': moveit_msgs.action.Place_SendGoal_ResponseConstructor,
    'moveit_msgs/msg/AllowedCollisionEntry': moveit_msgs.msg.AllowedCollisionEntryConstructor,
    'moveit_msgs/msg/AllowedCollisionMatrix': moveit_msgs.msg.AllowedCollisionMatrixConstructor,
    'moveit_msgs/msg/AttachedCollisionObject': moveit_msgs.msg.AttachedCollisionObjectConstructor,
    'moveit_msgs/msg/BoundingVolume': moveit_msgs.msg.BoundingVolumeConstructor,
    'moveit_msgs/msg/CartesianPoint': moveit_msgs.msg.CartesianPointConstructor,
    'moveit_msgs/msg/CartesianTrajectory': moveit_msgs.msg.CartesianTrajectoryConstructor,
    'moveit_msgs/msg/CartesianTrajectoryPoint': moveit_msgs.msg.CartesianTrajectoryPointConstructor,
    'moveit_msgs/msg/CollisionObject': moveit_msgs.msg.CollisionObjectConstructor,
    'moveit_msgs/msg/ConstraintEvalResult': moveit_msgs.msg.ConstraintEvalResultConstructor,
    'moveit_msgs/msg/Constraints': moveit_msgs.msg.ConstraintsConstructor,
    'moveit_msgs/msg/ContactInformation': moveit_msgs.msg.ContactInformationConstructor,
    'moveit_msgs/msg/CostSource': moveit_msgs.msg.CostSourceConstructor,
    'moveit_msgs/msg/DisplayRobotState': moveit_msgs.msg.DisplayRobotStateConstructor,
    'moveit_msgs/msg/DisplayTrajectory': moveit_msgs.msg.DisplayTrajectoryConstructor,
    'moveit_msgs/msg/GenericTrajectory': moveit_msgs.msg.GenericTrajectoryConstructor,
    'moveit_msgs/msg/Grasp': moveit_msgs.msg.GraspConstructor,
    'moveit_msgs/msg/GripperTranslation': moveit_msgs.msg.GripperTranslationConstructor,
    'moveit_msgs/msg/JointConstraint': moveit_msgs.msg.JointConstraintConstructor,
    'moveit_msgs/msg/JointLimits': moveit_msgs.msg.JointLimitsConstructor,
    'moveit_msgs/msg/KinematicSolverInfo': moveit_msgs.msg.KinematicSolverInfoConstructor,
    'moveit_msgs/msg/LinkPadding': moveit_msgs.msg.LinkPaddingConstructor,
    'moveit_msgs/msg/LinkScale': moveit_msgs.msg.LinkScaleConstructor,
    'moveit_msgs/msg/MotionPlanDetailedResponse': moveit_msgs.msg.MotionPlanDetailedResponseConstructor,
    'moveit_msgs/msg/MotionPlanRequest': moveit_msgs.msg.MotionPlanRequestConstructor,
    'moveit_msgs/msg/MotionPlanResponse': moveit_msgs.msg.MotionPlanResponseConstructor,
    'moveit_msgs/msg/MotionSequenceItem': moveit_msgs.msg.MotionSequenceItemConstructor,
    'moveit_msgs/msg/MotionSequenceRequest': moveit_msgs.msg.MotionSequenceRequestConstructor,
    'moveit_msgs/msg/MotionSequenceResponse': moveit_msgs.msg.MotionSequenceResponseConstructor,
    'moveit_msgs/msg/MoveItErrorCodes': moveit_msgs.msg.MoveItErrorCodesConstructor,
    'moveit_msgs/msg/ObjectColor': moveit_msgs.msg.ObjectColorConstructor,
    'moveit_msgs/msg/OrientationConstraint': moveit_msgs.msg.OrientationConstraintConstructor,
    'moveit_msgs/msg/OrientedBoundingBox': moveit_msgs.msg.OrientedBoundingBoxConstructor,
    'moveit_msgs/msg/PlaceLocation': moveit_msgs.msg.PlaceLocationConstructor,
    'moveit_msgs/msg/PlannerInterfaceDescription': moveit_msgs.msg.PlannerInterfaceDescriptionConstructor,
    'moveit_msgs/msg/PlannerParams': moveit_msgs.msg.PlannerParamsConstructor,
    'moveit_msgs/msg/PlanningOptions': moveit_msgs.msg.PlanningOptionsConstructor,
    'moveit_msgs/msg/PlanningScene': moveit_msgs.msg.PlanningSceneConstructor,
    'moveit_msgs/msg/PlanningSceneComponents': moveit_msgs.msg.PlanningSceneComponentsConstructor,
    'moveit_msgs/msg/PlanningSceneWorld': moveit_msgs.msg.PlanningSceneWorldConstructor,
    'moveit_msgs/msg/PositionConstraint': moveit_msgs.msg.PositionConstraintConstructor,
    'moveit_msgs/msg/PositionIKRequest': moveit_msgs.msg.PositionIKRequestConstructor,
    'moveit_msgs/msg/RobotState': moveit_msgs.msg.RobotStateConstructor,
    'moveit_msgs/msg/RobotTrajectory': moveit_msgs.msg.RobotTrajectoryConstructor,
    'moveit_msgs/msg/TrajectoryConstraints': moveit_msgs.msg.TrajectoryConstraintsConstructor,
    'moveit_msgs/msg/VisibilityConstraint': moveit_msgs.msg.VisibilityConstraintConstructor,
    'moveit_msgs/msg/WorkspaceParameters': moveit_msgs.msg.WorkspaceParametersConstructor,
    'moveit_msgs/srv/ApplyPlanningScene_Request': moveit_msgs.srv.ApplyPlanningScene_RequestConstructor,
    'moveit_msgs/srv/ApplyPlanningScene_Response': moveit_msgs.srv.ApplyPlanningScene_ResponseConstructor,
    'moveit_msgs/srv/ChangeControlDimensions_Request': moveit_msgs.srv.ChangeControlDimensions_RequestConstructor,
    'moveit_msgs/srv/ChangeControlDimensions_Response': moveit_msgs.srv.ChangeControlDimensions_ResponseConstructor,
    'moveit_msgs/srv/ChangeDriftDimensions_Request': moveit_msgs.srv.ChangeDriftDimensions_RequestConstructor,
    'moveit_msgs/srv/ChangeDriftDimensions_Response': moveit_msgs.srv.ChangeDriftDimensions_ResponseConstructor,
    'moveit_msgs/srv/CheckIfRobotStateExistsInWarehouse_Request': moveit_msgs.srv.CheckIfRobotStateExistsInWarehouse_RequestConstructor,
    'moveit_msgs/srv/CheckIfRobotStateExistsInWarehouse_Response': moveit_msgs.srv.CheckIfRobotStateExistsInWarehouse_ResponseConstructor,
    'moveit_msgs/srv/DeleteRobotStateFromWarehouse_Request': moveit_msgs.srv.DeleteRobotStateFromWarehouse_RequestConstructor,
    'moveit_msgs/srv/DeleteRobotStateFromWarehouse_Response': moveit_msgs.srv.DeleteRobotStateFromWarehouse_ResponseConstructor,
    'moveit_msgs/srv/ExecuteKnownTrajectory_Request': moveit_msgs.srv.ExecuteKnownTrajectory_RequestConstructor,
    'moveit_msgs/srv/ExecuteKnownTrajectory_Response': moveit_msgs.srv.ExecuteKnownTrajectory_ResponseConstructor,
    'moveit_msgs/srv/GetCartesianPath_Request': moveit_msgs.srv.GetCartesianPath_RequestConstructor,
    'moveit_msgs/srv/GetCartesianPath_Response': moveit_msgs.srv.GetCartesianPath_ResponseConstructor,
    'moveit_msgs/srv/GetMotionPlan_Request': moveit_msgs.srv.GetMotionPlan_RequestConstructor,
    'moveit_msgs/srv/GetMotionPlan_Response': moveit_msgs.srv.GetMotionPlan_ResponseConstructor,
    'moveit_msgs/srv/GetMotionSequence_Request': moveit_msgs.srv.GetMotionSequence_RequestConstructor,
    'moveit_msgs/srv/GetMotionSequence_Response': moveit_msgs.srv.GetMotionSequence_ResponseConstructor,
    'moveit_msgs/srv/GetPlannerParams_Request': moveit_msgs.srv.GetPlannerParams_RequestConstructor,
    'moveit_msgs/srv/GetPlannerParams_Response': moveit_msgs.srv.GetPlannerParams_ResponseConstructor,
    'moveit_msgs/srv/GetPlanningScene_Request': moveit_msgs.srv.GetPlanningScene_RequestConstructor,
    'moveit_msgs/srv/GetPlanningScene_Response': moveit_msgs.srv.GetPlanningScene_ResponseConstructor,
    'moveit_msgs/srv/GetPositionFK_Request': moveit_msgs.srv.GetPositionFK_RequestConstructor,
    'moveit_msgs/srv/GetPositionFK_Response': moveit_msgs.srv.GetPositionFK_ResponseConstructor,
    'moveit_msgs/srv/GetPositionIK_Request': moveit_msgs.srv.GetPositionIK_RequestConstructor,
    'moveit_msgs/srv/GetPositionIK_Response': moveit_msgs.srv.GetPositionIK_ResponseConstructor,
    'moveit_msgs/srv/GetRobotStateFromWarehouse_Request': moveit_msgs.srv.GetRobotStateFromWarehouse_RequestConstructor,
    'moveit_msgs/srv/GetRobotStateFromWarehouse_Response': moveit_msgs.srv.GetRobotStateFromWarehouse_ResponseConstructor,
    'moveit_msgs/srv/GetStateValidity_Request': moveit_msgs.srv.GetStateValidity_RequestConstructor,
    'moveit_msgs/srv/GetStateValidity_Response': moveit_msgs.srv.GetStateValidity_ResponseConstructor,
    'moveit_msgs/srv/GraspPlanning_Request': moveit_msgs.srv.GraspPlanning_RequestConstructor,
    'moveit_msgs/srv/GraspPlanning_Response': moveit_msgs.srv.GraspPlanning_ResponseConstructor,
    'moveit_msgs/srv/ListRobotStatesInWarehouse_Request': moveit_msgs.srv.ListRobotStatesInWarehouse_RequestConstructor,
    'moveit_msgs/srv/ListRobotStatesInWarehouse_Response': moveit_msgs.srv.ListRobotStatesInWarehouse_ResponseConstructor,
    'moveit_msgs/srv/LoadMap_Request': moveit_msgs.srv.LoadMap_RequestConstructor,
    'moveit_msgs/srv/LoadMap_Response': moveit_msgs.srv.LoadMap_ResponseConstructor,
    'moveit_msgs/srv/QueryPlannerInterfaces_Request': moveit_msgs.srv.QueryPlannerInterfaces_RequestConstructor,
    'moveit_msgs/srv/QueryPlannerInterfaces_Response': moveit_msgs.srv.QueryPlannerInterfaces_ResponseConstructor,
    'moveit_msgs/srv/RenameRobotStateInWarehouse_Request': moveit_msgs.srv.RenameRobotStateInWarehouse_RequestConstructor,
    'moveit_msgs/srv/RenameRobotStateInWarehouse_Response': moveit_msgs.srv.RenameRobotStateInWarehouse_ResponseConstructor,
    'moveit_msgs/srv/SaveMap_Request': moveit_msgs.srv.SaveMap_RequestConstructor,
    'moveit_msgs/srv/SaveMap_Response': moveit_msgs.srv.SaveMap_ResponseConstructor,
    'moveit_msgs/srv/SaveRobotStateToWarehouse_Request': moveit_msgs.srv.SaveRobotStateToWarehouse_RequestConstructor,
    'moveit_msgs/srv/SaveRobotStateToWarehouse_Response': moveit_msgs.srv.SaveRobotStateToWarehouse_ResponseConstructor,
    'moveit_msgs/srv/SetPlannerParams_Request': moveit_msgs.srv.SetPlannerParams_RequestConstructor,
    'moveit_msgs/srv/SetPlannerParams_Response': moveit_msgs.srv.SetPlannerParams_ResponseConstructor,
    'moveit_msgs/srv/UpdatePointcloudOctomap_Request': moveit_msgs.srv.UpdatePointcloudOctomap_RequestConstructor,
    'moveit_msgs/srv/UpdatePointcloudOctomap_Response': moveit_msgs.srv.UpdatePointcloudOctomap_ResponseConstructor,
    'nav2_msgs/action/AssistedTeleop_Feedback': nav2_msgs.action.AssistedTeleop_FeedbackConstructor,
    'nav2_msgs/action/AssistedTeleop_FeedbackMessage': nav2_msgs.action.AssistedTeleop_FeedbackMessageConstructor,
    'nav2_msgs/action/AssistedTeleop_GetResult_Request': nav2_msgs.action.AssistedTeleop_GetResult_RequestConstructor,
    'nav2_msgs/action/AssistedTeleop_GetResult_Response': nav2_msgs.action.AssistedTeleop_GetResult_ResponseConstructor,
    'nav2_msgs/action/AssistedTeleop_Goal': nav2_msgs.action.AssistedTeleop_GoalConstructor,
    'nav2_msgs/action/AssistedTeleop_Result': nav2_msgs.action.AssistedTeleop_ResultConstructor,
    'nav2_msgs/action/AssistedTeleop_SendGoal_Request': nav2_msgs.action.AssistedTeleop_SendGoal_RequestConstructor,
    'nav2_msgs/action/AssistedTeleop_SendGoal_Response': nav2_msgs.action.AssistedTeleop_SendGoal_ResponseConstructor,
    'nav2_msgs/action/BackUp_Feedback': nav2_msgs.action.BackUp_FeedbackConstructor,
    'nav2_msgs/action/BackUp_FeedbackMessage': nav2_msgs.action.BackUp_FeedbackMessageConstructor,
    'nav2_msgs/action/BackUp_GetResult_Request': nav2_msgs.action.BackUp_GetResult_RequestConstructor,
    'nav2_msgs/action/BackUp_GetResult_Response': nav2_msgs.action.BackUp_GetResult_ResponseConstructor,
    'nav2_msgs/action/BackUp_Goal': nav2_msgs.action.BackUp_GoalConstructor,
    'nav2_msgs/action/BackUp_Result': nav2_msgs.action.BackUp_ResultConstructor,
    'nav2_msgs/action/BackUp_SendGoal_Request': nav2_msgs.action.BackUp_SendGoal_RequestConstructor,
    'nav2_msgs/action/BackUp_SendGoal_Response': nav2_msgs.action.BackUp_SendGoal_ResponseConstructor,
    'nav2_msgs/action/ComputePathThroughPoses_Feedback': nav2_msgs.action.ComputePathThroughPoses_FeedbackConstructor,
    'nav2_msgs/action/ComputePathThroughPoses_FeedbackMessage': nav2_msgs.action.ComputePathThroughPoses_FeedbackMessageConstructor,
    'nav2_msgs/action/ComputePathThroughPoses_GetResult_Request': nav2_msgs.action.ComputePathThroughPoses_GetResult_RequestConstructor,
    'nav2_msgs/action/ComputePathThroughPoses_GetResult_Response': nav2_msgs.action.ComputePathThroughPoses_GetResult_ResponseConstructor,
    'nav2_msgs/action/ComputePathThroughPoses_Goal': nav2_msgs.action.ComputePathThroughPoses_GoalConstructor,
    'nav2_msgs/action/ComputePathThroughPoses_Result': nav2_msgs.action.ComputePathThroughPoses_ResultConstructor,
    'nav2_msgs/action/ComputePathThroughPoses_SendGoal_Request': nav2_msgs.action.ComputePathThroughPoses_SendGoal_RequestConstructor,
    'nav2_msgs/action/ComputePathThroughPoses_SendGoal_Response': nav2_msgs.action.ComputePathThroughPoses_SendGoal_ResponseConstructor,
    'nav2_msgs/action/ComputePathToPose_Feedback': nav2_msgs.action.ComputePathToPose_FeedbackConstructor,
    'nav2_msgs/action/ComputePathToPose_FeedbackMessage': nav2_msgs.action.ComputePathToPose_FeedbackMessageConstructor,
    'nav2_msgs/action/ComputePathToPose_GetResult_Request': nav2_msgs.action.ComputePathToPose_GetResult_RequestConstructor,
    'nav2_msgs/action/ComputePathToPose_GetResult_Response': nav2_msgs.action.ComputePathToPose_GetResult_ResponseConstructor,
    'nav2_msgs/action/ComputePathToPose_Goal': nav2_msgs.action.ComputePathToPose_GoalConstructor,
    'nav2_msgs/action/ComputePathToPose_Result': nav2_msgs.action.ComputePathToPose_ResultConstructor,
    'nav2_msgs/action/ComputePathToPose_SendGoal_Request': nav2_msgs.action.ComputePathToPose_SendGoal_RequestConstructor,
    'nav2_msgs/action/ComputePathToPose_SendGoal_Response': nav2_msgs.action.ComputePathToPose_SendGoal_ResponseConstructor,
    'nav2_msgs/action/DriveOnHeading_Feedback': nav2_msgs.action.DriveOnHeading_FeedbackConstructor,
    'nav2_msgs/action/DriveOnHeading_FeedbackMessage': nav2_msgs.action.DriveOnHeading_FeedbackMessageConstructor,
    'nav2_msgs/action/DriveOnHeading_GetResult_Request': nav2_msgs.action.DriveOnHeading_GetResult_RequestConstructor,
    'nav2_msgs/action/DriveOnHeading_GetResult_Response': nav2_msgs.action.DriveOnHeading_GetResult_ResponseConstructor,
    'nav2_msgs/action/DriveOnHeading_Goal': nav2_msgs.action.DriveOnHeading_GoalConstructor,
    'nav2_msgs/action/DriveOnHeading_Result': nav2_msgs.action.DriveOnHeading_ResultConstructor,
    'nav2_msgs/action/DriveOnHeading_SendGoal_Request': nav2_msgs.action.DriveOnHeading_SendGoal_RequestConstructor,
    'nav2_msgs/action/DriveOnHeading_SendGoal_Response': nav2_msgs.action.DriveOnHeading_SendGoal_ResponseConstructor,
    'nav2_msgs/action/DummyBehavior_Feedback': nav2_msgs.action.DummyBehavior_FeedbackConstructor,
    'nav2_msgs/action/DummyBehavior_FeedbackMessage': nav2_msgs.action.DummyBehavior_FeedbackMessageConstructor,
    'nav2_msgs/action/DummyBehavior_GetResult_Request': nav2_msgs.action.DummyBehavior_GetResult_RequestConstructor,
    'nav2_msgs/action/DummyBehavior_GetResult_Response': nav2_msgs.action.DummyBehavior_GetResult_ResponseConstructor,
    'nav2_msgs/action/DummyBehavior_Goal': nav2_msgs.action.DummyBehavior_GoalConstructor,
    'nav2_msgs/action/DummyBehavior_Result': nav2_msgs.action.DummyBehavior_ResultConstructor,
    'nav2_msgs/action/DummyBehavior_SendGoal_Request': nav2_msgs.action.DummyBehavior_SendGoal_RequestConstructor,
    'nav2_msgs/action/DummyBehavior_SendGoal_Response': nav2_msgs.action.DummyBehavior_SendGoal_ResponseConstructor,
    'nav2_msgs/action/FollowPath_Feedback': nav2_msgs.action.FollowPath_FeedbackConstructor,
    'nav2_msgs/action/FollowPath_FeedbackMessage': nav2_msgs.action.FollowPath_FeedbackMessageConstructor,
    'nav2_msgs/action/FollowPath_GetResult_Request': nav2_msgs.action.FollowPath_GetResult_RequestConstructor,
    'nav2_msgs/action/FollowPath_GetResult_Response': nav2_msgs.action.FollowPath_GetResult_ResponseConstructor,
    'nav2_msgs/action/FollowPath_Goal': nav2_msgs.action.FollowPath_GoalConstructor,
    'nav2_msgs/action/FollowPath_Result': nav2_msgs.action.FollowPath_ResultConstructor,
    'nav2_msgs/action/FollowPath_SendGoal_Request': nav2_msgs.action.FollowPath_SendGoal_RequestConstructor,
    'nav2_msgs/action/FollowPath_SendGoal_Response': nav2_msgs.action.FollowPath_SendGoal_ResponseConstructor,
    'nav2_msgs/action/FollowWaypoints_Feedback': nav2_msgs.action.FollowWaypoints_FeedbackConstructor,
    'nav2_msgs/action/FollowWaypoints_FeedbackMessage': nav2_msgs.action.FollowWaypoints_FeedbackMessageConstructor,
    'nav2_msgs/action/FollowWaypoints_GetResult_Request': nav2_msgs.action.FollowWaypoints_GetResult_RequestConstructor,
    'nav2_msgs/action/FollowWaypoints_GetResult_Response': nav2_msgs.action.FollowWaypoints_GetResult_ResponseConstructor,
    'nav2_msgs/action/FollowWaypoints_Goal': nav2_msgs.action.FollowWaypoints_GoalConstructor,
    'nav2_msgs/action/FollowWaypoints_Result': nav2_msgs.action.FollowWaypoints_ResultConstructor,
    'nav2_msgs/action/FollowWaypoints_SendGoal_Request': nav2_msgs.action.FollowWaypoints_SendGoal_RequestConstructor,
    'nav2_msgs/action/FollowWaypoints_SendGoal_Response': nav2_msgs.action.FollowWaypoints_SendGoal_ResponseConstructor,
    'nav2_msgs/action/NavigateThroughPoses_Feedback': nav2_msgs.action.NavigateThroughPoses_FeedbackConstructor,
    'nav2_msgs/action/NavigateThroughPoses_FeedbackMessage': nav2_msgs.action.NavigateThroughPoses_FeedbackMessageConstructor,
    'nav2_msgs/action/NavigateThroughPoses_GetResult_Request': nav2_msgs.action.NavigateThroughPoses_GetResult_RequestConstructor,
    'nav2_msgs/action/NavigateThroughPoses_GetResult_Response': nav2_msgs.action.NavigateThroughPoses_GetResult_ResponseConstructor,
    'nav2_msgs/action/NavigateThroughPoses_Goal': nav2_msgs.action.NavigateThroughPoses_GoalConstructor,
    'nav2_msgs/action/NavigateThroughPoses_Result': nav2_msgs.action.NavigateThroughPoses_ResultConstructor,
    'nav2_msgs/action/NavigateThroughPoses_SendGoal_Request': nav2_msgs.action.NavigateThroughPoses_SendGoal_RequestConstructor,
    'nav2_msgs/action/NavigateThroughPoses_SendGoal_Response': nav2_msgs.action.NavigateThroughPoses_SendGoal_ResponseConstructor,
    'nav2_msgs/action/NavigateToPose_Feedback': nav2_msgs.action.NavigateToPose_FeedbackConstructor,
    'nav2_msgs/action/NavigateToPose_FeedbackMessage': nav2_msgs.action.NavigateToPose_FeedbackMessageConstructor,
    'nav2_msgs/action/NavigateToPose_GetResult_Request': nav2_msgs.action.NavigateToPose_GetResult_RequestConstructor,
    'nav2_msgs/action/NavigateToPose_GetResult_Response': nav2_msgs.action.NavigateToPose_GetResult_ResponseConstructor,
    'nav2_msgs/action/NavigateToPose_Goal': nav2_msgs.action.NavigateToPose_GoalConstructor,
    'nav2_msgs/action/NavigateToPose_Result': nav2_msgs.action.NavigateToPose_ResultConstructor,
    'nav2_msgs/action/NavigateToPose_SendGoal_Request': nav2_msgs.action.NavigateToPose_SendGoal_RequestConstructor,
    'nav2_msgs/action/NavigateToPose_SendGoal_Response': nav2_msgs.action.NavigateToPose_SendGoal_ResponseConstructor,
    'nav2_msgs/action/SmoothPath_Feedback': nav2_msgs.action.SmoothPath_FeedbackConstructor,
    'nav2_msgs/action/SmoothPath_FeedbackMessage': nav2_msgs.action.SmoothPath_FeedbackMessageConstructor,
    'nav2_msgs/action/SmoothPath_GetResult_Request': nav2_msgs.action.SmoothPath_GetResult_RequestConstructor,
    'nav2_msgs/action/SmoothPath_GetResult_Response': nav2_msgs.action.SmoothPath_GetResult_ResponseConstructor,
    'nav2_msgs/action/SmoothPath_Goal': nav2_msgs.action.SmoothPath_GoalConstructor,
    'nav2_msgs/action/SmoothPath_Result': nav2_msgs.action.SmoothPath_ResultConstructor,
    'nav2_msgs/action/SmoothPath_SendGoal_Request': nav2_msgs.action.SmoothPath_SendGoal_RequestConstructor,
    'nav2_msgs/action/SmoothPath_SendGoal_Response': nav2_msgs.action.SmoothPath_SendGoal_ResponseConstructor,
    'nav2_msgs/action/Spin_Feedback': nav2_msgs.action.Spin_FeedbackConstructor,
    'nav2_msgs/action/Spin_FeedbackMessage': nav2_msgs.action.Spin_FeedbackMessageConstructor,
    'nav2_msgs/action/Spin_GetResult_Request': nav2_msgs.action.Spin_GetResult_RequestConstructor,
    'nav2_msgs/action/Spin_GetResult_Response': nav2_msgs.action.Spin_GetResult_ResponseConstructor,
    'nav2_msgs/action/Spin_Goal': nav2_msgs.action.Spin_GoalConstructor,
    'nav2_msgs/action/Spin_Result': nav2_msgs.action.Spin_ResultConstructor,
    'nav2_msgs/action/Spin_SendGoal_Request': nav2_msgs.action.Spin_SendGoal_RequestConstructor,
    'nav2_msgs/action/Spin_SendGoal_Response': nav2_msgs.action.Spin_SendGoal_ResponseConstructor,
    'nav2_msgs/action/Wait_Feedback': nav2_msgs.action.Wait_FeedbackConstructor,
    'nav2_msgs/action/Wait_FeedbackMessage': nav2_msgs.action.Wait_FeedbackMessageConstructor,
    'nav2_msgs/action/Wait_GetResult_Request': nav2_msgs.action.Wait_GetResult_RequestConstructor,
    'nav2_msgs/action/Wait_GetResult_Response': nav2_msgs.action.Wait_GetResult_ResponseConstructor,
    'nav2_msgs/action/Wait_Goal': nav2_msgs.action.Wait_GoalConstructor,
    'nav2_msgs/action/Wait_Result': nav2_msgs.action.Wait_ResultConstructor,
    'nav2_msgs/action/Wait_SendGoal_Request': nav2_msgs.action.Wait_SendGoal_RequestConstructor,
    'nav2_msgs/action/Wait_SendGoal_Response': nav2_msgs.action.Wait_SendGoal_ResponseConstructor,
    'nav2_msgs/msg/BehaviorTreeLog': nav2_msgs.msg.BehaviorTreeLogConstructor,
    'nav2_msgs/msg/BehaviorTreeStatusChange': nav2_msgs.msg.BehaviorTreeStatusChangeConstructor,
    'nav2_msgs/msg/Costmap': nav2_msgs.msg.CostmapConstructor,
    'nav2_msgs/msg/CostmapFilterInfo': nav2_msgs.msg.CostmapFilterInfoConstructor,
    'nav2_msgs/msg/CostmapMetaData': nav2_msgs.msg.CostmapMetaDataConstructor,
    'nav2_msgs/msg/Particle': nav2_msgs.msg.ParticleConstructor,
    'nav2_msgs/msg/ParticleCloud': nav2_msgs.msg.ParticleCloudConstructor,
    'nav2_msgs/msg/SpeedLimit': nav2_msgs.msg.SpeedLimitConstructor,
    'nav2_msgs/msg/VoxelGrid': nav2_msgs.msg.VoxelGridConstructor,
    'nav2_msgs/srv/ClearCostmapAroundRobot_Request': nav2_msgs.srv.ClearCostmapAroundRobot_RequestConstructor,
    'nav2_msgs/srv/ClearCostmapAroundRobot_Response': nav2_msgs.srv.ClearCostmapAroundRobot_ResponseConstructor,
    'nav2_msgs/srv/ClearCostmapExceptRegion_Request': nav2_msgs.srv.ClearCostmapExceptRegion_RequestConstructor,
    'nav2_msgs/srv/ClearCostmapExceptRegion_Response': nav2_msgs.srv.ClearCostmapExceptRegion_ResponseConstructor,
    'nav2_msgs/srv/ClearEntireCostmap_Request': nav2_msgs.srv.ClearEntireCostmap_RequestConstructor,
    'nav2_msgs/srv/ClearEntireCostmap_Response': nav2_msgs.srv.ClearEntireCostmap_ResponseConstructor,
    'nav2_msgs/srv/GetCostmap_Request': nav2_msgs.srv.GetCostmap_RequestConstructor,
    'nav2_msgs/srv/GetCostmap_Response': nav2_msgs.srv.GetCostmap_ResponseConstructor,
    'nav2_msgs/srv/IsPathValid_Request': nav2_msgs.srv.IsPathValid_RequestConstructor,
    'nav2_msgs/srv/IsPathValid_Response': nav2_msgs.srv.IsPathValid_ResponseConstructor,
    'nav2_msgs/srv/LoadMap_Request': nav2_msgs.srv.LoadMap_RequestConstructor,
    'nav2_msgs/srv/LoadMap_Response': nav2_msgs.srv.LoadMap_ResponseConstructor,
    'nav2_msgs/srv/ManageLifecycleNodes_Request': nav2_msgs.srv.ManageLifecycleNodes_RequestConstructor,
    'nav2_msgs/srv/ManageLifecycleNodes_Response': nav2_msgs.srv.ManageLifecycleNodes_ResponseConstructor,
    'nav2_msgs/srv/SaveMap_Request': nav2_msgs.srv.SaveMap_RequestConstructor,
    'nav2_msgs/srv/SaveMap_Response': nav2_msgs.srv.SaveMap_ResponseConstructor,
    'nav2_msgs/srv/SetInitialPose_Request': nav2_msgs.srv.SetInitialPose_RequestConstructor,
    'nav2_msgs/srv/SetInitialPose_Response': nav2_msgs.srv.SetInitialPose_ResponseConstructor,
    'nav_2d_msgs/msg/Path2D': nav_2d_msgs.msg.Path2DConstructor,
    'nav_2d_msgs/msg/Pose2D32': nav_2d_msgs.msg.Pose2D32Constructor,
    'nav_2d_msgs/msg/Pose2DStamped': nav_2d_msgs.msg.Pose2DStampedConstructor,
    'nav_2d_msgs/msg/Twist2D': nav_2d_msgs.msg.Twist2DConstructor,
    'nav_2d_msgs/msg/Twist2D32': nav_2d_msgs.msg.Twist2D32Constructor,
    'nav_2d_msgs/msg/Twist2DStamped': nav_2d_msgs.msg.Twist2DStampedConstructor,
    'nav_msgs/msg/GridCells': nav_msgs.msg.GridCellsConstructor,
    'nav_msgs/msg/MapMetaData': nav_msgs.msg.MapMetaDataConstructor,
    'nav_msgs/msg/OccupancyGrid': nav_msgs.msg.OccupancyGridConstructor,
    'nav_msgs/msg/Odometry': nav_msgs.msg.OdometryConstructor,
    'nav_msgs/msg/Path': nav_msgs.msg.PathConstructor,
    'nav_msgs/srv/GetMap_Request': nav_msgs.srv.GetMap_RequestConstructor,
    'nav_msgs/srv/GetMap_Response': nav_msgs.srv.GetMap_ResponseConstructor,
    'nav_msgs/srv/GetPlan_Request': nav_msgs.srv.GetPlan_RequestConstructor,
    'nav_msgs/srv/GetPlan_Response': nav_msgs.srv.GetPlan_ResponseConstructor,
    'nav_msgs/srv/LoadMap_Request': nav_msgs.srv.LoadMap_RequestConstructor,
    'nav_msgs/srv/LoadMap_Response': nav_msgs.srv.LoadMap_ResponseConstructor,
    'nav_msgs/srv/SetMap_Request': nav_msgs.srv.SetMap_RequestConstructor,
    'nav_msgs/srv/SetMap_Response': nav_msgs.srv.SetMap_ResponseConstructor,
    'object_recognition_msgs/action/ObjectRecognition_Feedback': object_recognition_msgs.action.ObjectRecognition_FeedbackConstructor,
    'object_recognition_msgs/action/ObjectRecognition_FeedbackMessage': object_recognition_msgs.action.ObjectRecognition_FeedbackMessageConstructor,
    'object_recognition_msgs/action/ObjectRecognition_GetResult_Request': object_recognition_msgs.action.ObjectRecognition_GetResult_RequestConstructor,
    'object_recognition_msgs/action/ObjectRecognition_GetResult_Response': object_recognition_msgs.action.ObjectRecognition_GetResult_ResponseConstructor,
    'object_recognition_msgs/action/ObjectRecognition_Goal': object_recognition_msgs.action.ObjectRecognition_GoalConstructor,
    'object_recognition_msgs/action/ObjectRecognition_Result': object_recognition_msgs.action.ObjectRecognition_ResultConstructor,
    'object_recognition_msgs/action/ObjectRecognition_SendGoal_Request': object_recognition_msgs.action.ObjectRecognition_SendGoal_RequestConstructor,
    'object_recognition_msgs/action/ObjectRecognition_SendGoal_Response': object_recognition_msgs.action.ObjectRecognition_SendGoal_ResponseConstructor,
    'object_recognition_msgs/msg/ObjectInformation': object_recognition_msgs.msg.ObjectInformationConstructor,
    'object_recognition_msgs/msg/ObjectType': object_recognition_msgs.msg.ObjectTypeConstructor,
    'object_recognition_msgs/msg/RecognizedObject': object_recognition_msgs.msg.RecognizedObjectConstructor,
    'object_recognition_msgs/msg/RecognizedObjectArray': object_recognition_msgs.msg.RecognizedObjectArrayConstructor,
    'object_recognition_msgs/msg/Table': object_recognition_msgs.msg.TableConstructor,
    'object_recognition_msgs/msg/TableArray': object_recognition_msgs.msg.TableArrayConstructor,
    'object_recognition_msgs/srv/GetObjectInformation_Request': object_recognition_msgs.srv.GetObjectInformation_RequestConstructor,
    'object_recognition_msgs/srv/GetObjectInformation_Response': object_recognition_msgs.srv.GetObjectInformation_ResponseConstructor,
    'octomap_msgs/msg/Octomap': octomap_msgs.msg.OctomapConstructor,
    'octomap_msgs/msg/OctomapWithPose': octomap_msgs.msg.OctomapWithPoseConstructor,
    'octomap_msgs/srv/BoundingBoxQuery_Request': octomap_msgs.srv.BoundingBoxQuery_RequestConstructor,
    'octomap_msgs/srv/BoundingBoxQuery_Response': octomap_msgs.srv.BoundingBoxQuery_ResponseConstructor,
    'octomap_msgs/srv/GetOctomap_Request': octomap_msgs.srv.GetOctomap_RequestConstructor,
    'octomap_msgs/srv/GetOctomap_Response': octomap_msgs.srv.GetOctomap_ResponseConstructor,
    'pcl_msgs/msg/ModelCoefficients': pcl_msgs.msg.ModelCoefficientsConstructor,
    'pcl_msgs/msg/PointIndices': pcl_msgs.msg.PointIndicesConstructor,
    'pcl_msgs/msg/PolygonMesh': pcl_msgs.msg.PolygonMeshConstructor,
    'pcl_msgs/msg/Vertices': pcl_msgs.msg.VerticesConstructor,
    'pcl_msgs/srv/UpdateFilename_Request': pcl_msgs.srv.UpdateFilename_RequestConstructor,
    'pcl_msgs/srv/UpdateFilename_Response': pcl_msgs.srv.UpdateFilename_ResponseConstructor,
    'rcl_interfaces/msg/FloatingPointRange': rcl_interfaces.msg.FloatingPointRangeConstructor,
    'rcl_interfaces/msg/IntegerRange': rcl_interfaces.msg.IntegerRangeConstructor,
    'rcl_interfaces/msg/ListParametersResult': rcl_interfaces.msg.ListParametersResultConstructor,
    'rcl_interfaces/msg/Log': rcl_interfaces.msg.LogConstructor,
    'rcl_interfaces/msg/Parameter': rcl_interfaces.msg.ParameterConstructor,
    'rcl_interfaces/msg/ParameterDescriptor': rcl_interfaces.msg.ParameterDescriptorConstructor,
    'rcl_interfaces/msg/ParameterEvent': rcl_interfaces.msg.ParameterEventConstructor,
    'rcl_interfaces/msg/ParameterEventDescriptors': rcl_interfaces.msg.ParameterEventDescriptorsConstructor,
    'rcl_interfaces/msg/ParameterType': rcl_interfaces.msg.ParameterTypeConstructor,
    'rcl_interfaces/msg/ParameterValue': rcl_interfaces.msg.ParameterValueConstructor,
    'rcl_interfaces/msg/SetParametersResult': rcl_interfaces.msg.SetParametersResultConstructor,
    'rcl_interfaces/srv/DescribeParameters_Request': rcl_interfaces.srv.DescribeParameters_RequestConstructor,
    'rcl_interfaces/srv/DescribeParameters_Response': rcl_interfaces.srv.DescribeParameters_ResponseConstructor,
    'rcl_interfaces/srv/GetParameterTypes_Request': rcl_interfaces.srv.GetParameterTypes_RequestConstructor,
    'rcl_interfaces/srv/GetParameterTypes_Response': rcl_interfaces.srv.GetParameterTypes_ResponseConstructor,
    'rcl_interfaces/srv/GetParameters_Request': rcl_interfaces.srv.GetParameters_RequestConstructor,
    'rcl_interfaces/srv/GetParameters_Response': rcl_interfaces.srv.GetParameters_ResponseConstructor,
    'rcl_interfaces/srv/ListParameters_Request': rcl_interfaces.srv.ListParameters_RequestConstructor,
    'rcl_interfaces/srv/ListParameters_Response': rcl_interfaces.srv.ListParameters_ResponseConstructor,
    'rcl_interfaces/srv/SetParametersAtomically_Request': rcl_interfaces.srv.SetParametersAtomically_RequestConstructor,
    'rcl_interfaces/srv/SetParametersAtomically_Response': rcl_interfaces.srv.SetParametersAtomically_ResponseConstructor,
    'rcl_interfaces/srv/SetParameters_Request': rcl_interfaces.srv.SetParameters_RequestConstructor,
    'rcl_interfaces/srv/SetParameters_Response': rcl_interfaces.srv.SetParameters_ResponseConstructor,
    'realsense2_camera_msgs/msg/Extrinsics': realsense2_camera_msgs.msg.ExtrinsicsConstructor,
    'realsense2_camera_msgs/msg/IMUInfo': realsense2_camera_msgs.msg.IMUInfoConstructor,
    'realsense2_camera_msgs/msg/Metadata': realsense2_camera_msgs.msg.MetadataConstructor,
    'realsense2_camera_msgs/msg/RGBD': realsense2_camera_msgs.msg.RGBDConstructor,
    'realsense2_camera_msgs/srv/DeviceInfo_Request': realsense2_camera_msgs.srv.DeviceInfo_RequestConstructor,
    'realsense2_camera_msgs/srv/DeviceInfo_Response': realsense2_camera_msgs.srv.DeviceInfo_ResponseConstructor,
    'rmw_dds_common/msg/Gid': rmw_dds_common.msg.GidConstructor,
    'rmw_dds_common/msg/NodeEntitiesInfo': rmw_dds_common.msg.NodeEntitiesInfoConstructor,
    'rmw_dds_common/msg/ParticipantEntitiesInfo': rmw_dds_common.msg.ParticipantEntitiesInfoConstructor,
    'ros_gz_interfaces/msg/Altimeter': ros_gz_interfaces.msg.AltimeterConstructor,
    'ros_gz_interfaces/msg/Contact': ros_gz_interfaces.msg.ContactConstructor,
    'ros_gz_interfaces/msg/Contacts': ros_gz_interfaces.msg.ContactsConstructor,
    'ros_gz_interfaces/msg/Dataframe': ros_gz_interfaces.msg.DataframeConstructor,
    'ros_gz_interfaces/msg/Entity': ros_gz_interfaces.msg.EntityConstructor,
    'ros_gz_interfaces/msg/EntityFactory': ros_gz_interfaces.msg.EntityFactoryConstructor,
    'ros_gz_interfaces/msg/Float32Array': ros_gz_interfaces.msg.Float32ArrayConstructor,
    'ros_gz_interfaces/msg/GuiCamera': ros_gz_interfaces.msg.GuiCameraConstructor,
    'ros_gz_interfaces/msg/JointWrench': ros_gz_interfaces.msg.JointWrenchConstructor,
    'ros_gz_interfaces/msg/Light': ros_gz_interfaces.msg.LightConstructor,
    'ros_gz_interfaces/msg/MaterialColor': ros_gz_interfaces.msg.MaterialColorConstructor,
    'ros_gz_interfaces/msg/ParamVec': ros_gz_interfaces.msg.ParamVecConstructor,
    'ros_gz_interfaces/msg/SensorNoise': ros_gz_interfaces.msg.SensorNoiseConstructor,
    'ros_gz_interfaces/msg/StringVec': ros_gz_interfaces.msg.StringVecConstructor,
    'ros_gz_interfaces/msg/TrackVisual': ros_gz_interfaces.msg.TrackVisualConstructor,
    'ros_gz_interfaces/msg/VideoRecord': ros_gz_interfaces.msg.VideoRecordConstructor,
    'ros_gz_interfaces/msg/WorldControl': ros_gz_interfaces.msg.WorldControlConstructor,
    'ros_gz_interfaces/msg/WorldReset': ros_gz_interfaces.msg.WorldResetConstructor,
    'ros_gz_interfaces/srv/ControlWorld_Request': ros_gz_interfaces.srv.ControlWorld_RequestConstructor,
    'ros_gz_interfaces/srv/ControlWorld_Response': ros_gz_interfaces.srv.ControlWorld_ResponseConstructor,
    'ros_gz_interfaces/srv/DeleteEntity_Request': ros_gz_interfaces.srv.DeleteEntity_RequestConstructor,
    'ros_gz_interfaces/srv/DeleteEntity_Response': ros_gz_interfaces.srv.DeleteEntity_ResponseConstructor,
    'ros_gz_interfaces/srv/SetEntityPose_Request': ros_gz_interfaces.srv.SetEntityPose_RequestConstructor,
    'ros_gz_interfaces/srv/SetEntityPose_Response': ros_gz_interfaces.srv.SetEntityPose_ResponseConstructor,
    'ros_gz_interfaces/srv/SpawnEntity_Request': ros_gz_interfaces.srv.SpawnEntity_RequestConstructor,
    'ros_gz_interfaces/srv/SpawnEntity_Response': ros_gz_interfaces.srv.SpawnEntity_ResponseConstructor,
    'ros_ign_interfaces/msg/Contact': ros_ign_interfaces.msg.ContactConstructor,
    'ros_ign_interfaces/msg/Contacts': ros_ign_interfaces.msg.ContactsConstructor,
    'ros_ign_interfaces/msg/Entity': ros_ign_interfaces.msg.EntityConstructor,
    'ros_ign_interfaces/msg/EntityFactory': ros_ign_interfaces.msg.EntityFactoryConstructor,
    'ros_ign_interfaces/msg/GuiCamera': ros_ign_interfaces.msg.GuiCameraConstructor,
    'ros_ign_interfaces/msg/JointWrench': ros_ign_interfaces.msg.JointWrenchConstructor,
    'ros_ign_interfaces/msg/Light': ros_ign_interfaces.msg.LightConstructor,
    'ros_ign_interfaces/msg/StringVec': ros_ign_interfaces.msg.StringVecConstructor,
    'ros_ign_interfaces/msg/TrackVisual': ros_ign_interfaces.msg.TrackVisualConstructor,
    'ros_ign_interfaces/msg/VideoRecord': ros_ign_interfaces.msg.VideoRecordConstructor,
    'ros_ign_interfaces/msg/WorldControl': ros_ign_interfaces.msg.WorldControlConstructor,
    'ros_ign_interfaces/msg/WorldReset': ros_ign_interfaces.msg.WorldResetConstructor,
    'ros_ign_interfaces/srv/ControlWorld_Request': ros_ign_interfaces.srv.ControlWorld_RequestConstructor,
    'ros_ign_interfaces/srv/ControlWorld_Response': ros_ign_interfaces.srv.ControlWorld_ResponseConstructor,
    'ros_ign_interfaces/srv/DeleteEntity_Request': ros_ign_interfaces.srv.DeleteEntity_RequestConstructor,
    'ros_ign_interfaces/srv/DeleteEntity_Response': ros_ign_interfaces.srv.DeleteEntity_ResponseConstructor,
    'ros_ign_interfaces/srv/SetEntityPose_Request': ros_ign_interfaces.srv.SetEntityPose_RequestConstructor,
    'ros_ign_interfaces/srv/SetEntityPose_Response': ros_ign_interfaces.srv.SetEntityPose_ResponseConstructor,
    'ros_ign_interfaces/srv/SpawnEntity_Request': ros_ign_interfaces.srv.SpawnEntity_RequestConstructor,
    'ros_ign_interfaces/srv/SpawnEntity_Response': ros_ign_interfaces.srv.SpawnEntity_ResponseConstructor,
    'rosbag2_interfaces/msg/ReadSplitEvent': rosbag2_interfaces.msg.ReadSplitEventConstructor,
    'rosbag2_interfaces/msg/WriteSplitEvent': rosbag2_interfaces.msg.WriteSplitEventConstructor,
    'rosbag2_interfaces/srv/Burst_Request': rosbag2_interfaces.srv.Burst_RequestConstructor,
    'rosbag2_interfaces/srv/Burst_Response': rosbag2_interfaces.srv.Burst_ResponseConstructor,
    'rosbag2_interfaces/srv/GetRate_Request': rosbag2_interfaces.srv.GetRate_RequestConstructor,
    'rosbag2_interfaces/srv/GetRate_Response': rosbag2_interfaces.srv.GetRate_ResponseConstructor,
    'rosbag2_interfaces/srv/IsPaused_Request': rosbag2_interfaces.srv.IsPaused_RequestConstructor,
    'rosbag2_interfaces/srv/IsPaused_Response': rosbag2_interfaces.srv.IsPaused_ResponseConstructor,
    'rosbag2_interfaces/srv/Pause_Request': rosbag2_interfaces.srv.Pause_RequestConstructor,
    'rosbag2_interfaces/srv/Pause_Response': rosbag2_interfaces.srv.Pause_ResponseConstructor,
    'rosbag2_interfaces/srv/PlayNext_Request': rosbag2_interfaces.srv.PlayNext_RequestConstructor,
    'rosbag2_interfaces/srv/PlayNext_Response': rosbag2_interfaces.srv.PlayNext_ResponseConstructor,
    'rosbag2_interfaces/srv/Resume_Request': rosbag2_interfaces.srv.Resume_RequestConstructor,
    'rosbag2_interfaces/srv/Resume_Response': rosbag2_interfaces.srv.Resume_ResponseConstructor,
    'rosbag2_interfaces/srv/Seek_Request': rosbag2_interfaces.srv.Seek_RequestConstructor,
    'rosbag2_interfaces/srv/Seek_Response': rosbag2_interfaces.srv.Seek_ResponseConstructor,
    'rosbag2_interfaces/srv/SetRate_Request': rosbag2_interfaces.srv.SetRate_RequestConstructor,
    'rosbag2_interfaces/srv/SetRate_Response': rosbag2_interfaces.srv.SetRate_ResponseConstructor,
    'rosbag2_interfaces/srv/Snapshot_Request': rosbag2_interfaces.srv.Snapshot_RequestConstructor,
    'rosbag2_interfaces/srv/Snapshot_Response': rosbag2_interfaces.srv.Snapshot_ResponseConstructor,
    'rosbag2_interfaces/srv/TogglePaused_Request': rosbag2_interfaces.srv.TogglePaused_RequestConstructor,
    'rosbag2_interfaces/srv/TogglePaused_Response': rosbag2_interfaces.srv.TogglePaused_ResponseConstructor,
    'rosgraph_msgs/msg/Clock': rosgraph_msgs.msg.ClockConstructor,
    'sensor_msgs/msg/BatteryState': sensor_msgs.msg.BatteryStateConstructor,
    'sensor_msgs/msg/CameraInfo': sensor_msgs.msg.CameraInfoConstructor,
    'sensor_msgs/msg/ChannelFloat32': sensor_msgs.msg.ChannelFloat32Constructor,
    'sensor_msgs/msg/CompressedImage': sensor_msgs.msg.CompressedImageConstructor,
    'sensor_msgs/msg/FluidPressure': sensor_msgs.msg.FluidPressureConstructor,
    'sensor_msgs/msg/Illuminance': sensor_msgs.msg.IlluminanceConstructor,
    'sensor_msgs/msg/Image': sensor_msgs.msg.ImageConstructor,
    'sensor_msgs/msg/Imu': sensor_msgs.msg.ImuConstructor,
    'sensor_msgs/msg/JointState': sensor_msgs.msg.JointStateConstructor,
    'sensor_msgs/msg/Joy': sensor_msgs.msg.JoyConstructor,
    'sensor_msgs/msg/JoyFeedback': sensor_msgs.msg.JoyFeedbackConstructor,
    'sensor_msgs/msg/JoyFeedbackArray': sensor_msgs.msg.JoyFeedbackArrayConstructor,
    'sensor_msgs/msg/LaserEcho': sensor_msgs.msg.LaserEchoConstructor,
    'sensor_msgs/msg/LaserScan': sensor_msgs.msg.LaserScanConstructor,
    'sensor_msgs/msg/MagneticField': sensor_msgs.msg.MagneticFieldConstructor,
    'sensor_msgs/msg/MultiDOFJointState': sensor_msgs.msg.MultiDOFJointStateConstructor,
    'sensor_msgs/msg/MultiEchoLaserScan': sensor_msgs.msg.MultiEchoLaserScanConstructor,
    'sensor_msgs/msg/NavSatFix': sensor_msgs.msg.NavSatFixConstructor,
    'sensor_msgs/msg/NavSatStatus': sensor_msgs.msg.NavSatStatusConstructor,
    'sensor_msgs/msg/PointCloud': sensor_msgs.msg.PointCloudConstructor,
    'sensor_msgs/msg/PointCloud2': sensor_msgs.msg.PointCloud2Constructor,
    'sensor_msgs/msg/PointField': sensor_msgs.msg.PointFieldConstructor,
    'sensor_msgs/msg/Range': sensor_msgs.msg.RangeConstructor,
    'sensor_msgs/msg/RegionOfInterest': sensor_msgs.msg.RegionOfInterestConstructor,
    'sensor_msgs/msg/RelativeHumidity': sensor_msgs.msg.RelativeHumidityConstructor,
    'sensor_msgs/msg/Temperature': sensor_msgs.msg.TemperatureConstructor,
    'sensor_msgs/msg/TimeReference': sensor_msgs.msg.TimeReferenceConstructor,
    'sensor_msgs/srv/SetCameraInfo_Request': sensor_msgs.srv.SetCameraInfo_RequestConstructor,
    'sensor_msgs/srv/SetCameraInfo_Response': sensor_msgs.srv.SetCameraInfo_ResponseConstructor,
    'shape_msgs/msg/Mesh': shape_msgs.msg.MeshConstructor,
    'shape_msgs/msg/MeshTriangle': shape_msgs.msg.MeshTriangleConstructor,
    'shape_msgs/msg/Plane': shape_msgs.msg.PlaneConstructor,
    'shape_msgs/msg/SolidPrimitive': shape_msgs.msg.SolidPrimitiveConstructor,
    'slam_toolbox/srvs/AddSubmap_Request': slam_toolbox.srvs.AddSubmap_RequestConstructor,
    'slam_toolbox/srvs/AddSubmap_Response': slam_toolbox.srvs.AddSubmap_ResponseConstructor,
    'slam_toolbox/srvs/ClearQueue_Request': slam_toolbox.srvs.ClearQueue_RequestConstructor,
    'slam_toolbox/srvs/ClearQueue_Response': slam_toolbox.srvs.ClearQueue_ResponseConstructor,
    'slam_toolbox/srvs/Clear_Request': slam_toolbox.srvs.Clear_RequestConstructor,
    'slam_toolbox/srvs/Clear_Response': slam_toolbox.srvs.Clear_ResponseConstructor,
    'slam_toolbox/srvs/DeserializePoseGraph_Request': slam_toolbox.srvs.DeserializePoseGraph_RequestConstructor,
    'slam_toolbox/srvs/DeserializePoseGraph_Response': slam_toolbox.srvs.DeserializePoseGraph_ResponseConstructor,
    'slam_toolbox/srvs/LoopClosure_Request': slam_toolbox.srvs.LoopClosure_RequestConstructor,
    'slam_toolbox/srvs/LoopClosure_Response': slam_toolbox.srvs.LoopClosure_ResponseConstructor,
    'slam_toolbox/srvs/MergeMaps_Request': slam_toolbox.srvs.MergeMaps_RequestConstructor,
    'slam_toolbox/srvs/MergeMaps_Response': slam_toolbox.srvs.MergeMaps_ResponseConstructor,
    'slam_toolbox/srvs/Pause_Request': slam_toolbox.srvs.Pause_RequestConstructor,
    'slam_toolbox/srvs/Pause_Response': slam_toolbox.srvs.Pause_ResponseConstructor,
    'slam_toolbox/srvs/SaveMap_Request': slam_toolbox.srvs.SaveMap_RequestConstructor,
    'slam_toolbox/srvs/SaveMap_Response': slam_toolbox.srvs.SaveMap_ResponseConstructor,
    'slam_toolbox/srvs/SerializePoseGraph_Request': slam_toolbox.srvs.SerializePoseGraph_RequestConstructor,
    'slam_toolbox/srvs/SerializePoseGraph_Response': slam_toolbox.srvs.SerializePoseGraph_ResponseConstructor,
    'slam_toolbox/srvs/ToggleInteractive_Request': slam_toolbox.srvs.ToggleInteractive_RequestConstructor,
    'slam_toolbox/srvs/ToggleInteractive_Response': slam_toolbox.srvs.ToggleInteractive_ResponseConstructor,
    'statistics_msgs/msg/MetricsMessage': statistics_msgs.msg.MetricsMessageConstructor,
    'statistics_msgs/msg/StatisticDataPoint': statistics_msgs.msg.StatisticDataPointConstructor,
    'statistics_msgs/msg/StatisticDataType': statistics_msgs.msg.StatisticDataTypeConstructor,
    'std_msgs/msg/Bool': std_msgs.msg.BoolConstructor,
    'std_msgs/msg/Byte': std_msgs.msg.ByteConstructor,
    'std_msgs/msg/ByteMultiArray': std_msgs.msg.ByteMultiArrayConstructor,
    'std_msgs/msg/Char': std_msgs.msg.CharConstructor,
    'std_msgs/msg/ColorRGBA': std_msgs.msg.ColorRGBAConstructor,
    'std_msgs/msg/Empty': std_msgs.msg.EmptyConstructor,
    'std_msgs/msg/Float32': std_msgs.msg.Float32Constructor,
    'std_msgs/msg/Float32MultiArray': std_msgs.msg.Float32MultiArrayConstructor,
    'std_msgs/msg/Float64': std_msgs.msg.Float64Constructor,
    'std_msgs/msg/Float64MultiArray': std_msgs.msg.Float64MultiArrayConstructor,
    'std_msgs/msg/Header': std_msgs.msg.HeaderConstructor,
    'std_msgs/msg/Int16': std_msgs.msg.Int16Constructor,
    'std_msgs/msg/Int16MultiArray': std_msgs.msg.Int16MultiArrayConstructor,
    'std_msgs/msg/Int32': std_msgs.msg.Int32Constructor,
    'std_msgs/msg/Int32MultiArray': std_msgs.msg.Int32MultiArrayConstructor,
    'std_msgs/msg/Int64': std_msgs.msg.Int64Constructor,
    'std_msgs/msg/Int64MultiArray': std_msgs.msg.Int64MultiArrayConstructor,
    'std_msgs/msg/Int8': std_msgs.msg.Int8Constructor,
    'std_msgs/msg/Int8MultiArray': std_msgs.msg.Int8MultiArrayConstructor,
    'std_msgs/msg/MultiArrayDimension': std_msgs.msg.MultiArrayDimensionConstructor,
    'std_msgs/msg/MultiArrayLayout': std_msgs.msg.MultiArrayLayoutConstructor,
    'std_msgs/msg/String': std_msgs.msg.StringConstructor,
    'std_msgs/msg/UInt16': std_msgs.msg.UInt16Constructor,
    'std_msgs/msg/UInt16MultiArray': std_msgs.msg.UInt16MultiArrayConstructor,
    'std_msgs/msg/UInt32': std_msgs.msg.UInt32Constructor,
    'std_msgs/msg/UInt32MultiArray': std_msgs.msg.UInt32MultiArrayConstructor,
    'std_msgs/msg/UInt64': std_msgs.msg.UInt64Constructor,
    'std_msgs/msg/UInt64MultiArray': std_msgs.msg.UInt64MultiArrayConstructor,
    'std_msgs/msg/UInt8': std_msgs.msg.UInt8Constructor,
    'std_msgs/msg/UInt8MultiArray': std_msgs.msg.UInt8MultiArrayConstructor,
    'std_srvs/srv/Empty_Request': std_srvs.srv.Empty_RequestConstructor,
    'std_srvs/srv/Empty_Response': std_srvs.srv.Empty_ResponseConstructor,
    'std_srvs/srv/SetBool_Request': std_srvs.srv.SetBool_RequestConstructor,
    'std_srvs/srv/SetBool_Response': std_srvs.srv.SetBool_ResponseConstructor,
    'std_srvs/srv/Trigger_Request': std_srvs.srv.Trigger_RequestConstructor,
    'std_srvs/srv/Trigger_Response': std_srvs.srv.Trigger_ResponseConstructor,
    'stereo_msgs/msg/DisparityImage': stereo_msgs.msg.DisparityImageConstructor,
    'tf2_msgs/action/LookupTransform_Feedback': tf2_msgs.action.LookupTransform_FeedbackConstructor,
    'tf2_msgs/action/LookupTransform_FeedbackMessage': tf2_msgs.action.LookupTransform_FeedbackMessageConstructor,
    'tf2_msgs/action/LookupTransform_GetResult_Request': tf2_msgs.action.LookupTransform_GetResult_RequestConstructor,
    'tf2_msgs/action/LookupTransform_GetResult_Response': tf2_msgs.action.LookupTransform_GetResult_ResponseConstructor,
    'tf2_msgs/action/LookupTransform_Goal': tf2_msgs.action.LookupTransform_GoalConstructor,
    'tf2_msgs/action/LookupTransform_Result': tf2_msgs.action.LookupTransform_ResultConstructor,
    'tf2_msgs/action/LookupTransform_SendGoal_Request': tf2_msgs.action.LookupTransform_SendGoal_RequestConstructor,
    'tf2_msgs/action/LookupTransform_SendGoal_Response': tf2_msgs.action.LookupTransform_SendGoal_ResponseConstructor,
    'tf2_msgs/msg/TF2Error': tf2_msgs.msg.TF2ErrorConstructor,
    'tf2_msgs/msg/TFMessage': tf2_msgs.msg.TFMessageConstructor,
    'tf2_msgs/srv/FrameGraph_Request': tf2_msgs.srv.FrameGraph_RequestConstructor,
    'tf2_msgs/srv/FrameGraph_Response': tf2_msgs.srv.FrameGraph_ResponseConstructor,
    'theora_image_transport/msg/Packet': theora_image_transport.msg.PacketConstructor,
    'trajectory_msgs/msg/JointTrajectory': trajectory_msgs.msg.JointTrajectoryConstructor,
    'trajectory_msgs/msg/JointTrajectoryPoint': trajectory_msgs.msg.JointTrajectoryPointConstructor,
    'trajectory_msgs/msg/MultiDOFJointTrajectory': trajectory_msgs.msg.MultiDOFJointTrajectoryConstructor,
    'trajectory_msgs/msg/MultiDOFJointTrajectoryPoint': trajectory_msgs.msg.MultiDOFJointTrajectoryPointConstructor,
    'turtlebot3_msgs/action/Patrol_Feedback': turtlebot3_msgs.action.Patrol_FeedbackConstructor,
    'turtlebot3_msgs/action/Patrol_FeedbackMessage': turtlebot3_msgs.action.Patrol_FeedbackMessageConstructor,
    'turtlebot3_msgs/action/Patrol_GetResult_Request': turtlebot3_msgs.action.Patrol_GetResult_RequestConstructor,
    'turtlebot3_msgs/action/Patrol_GetResult_Response': turtlebot3_msgs.action.Patrol_GetResult_ResponseConstructor,
    'turtlebot3_msgs/action/Patrol_Goal': turtlebot3_msgs.action.Patrol_GoalConstructor,
    'turtlebot3_msgs/action/Patrol_Result': turtlebot3_msgs.action.Patrol_ResultConstructor,
    'turtlebot3_msgs/action/Patrol_SendGoal_Request': turtlebot3_msgs.action.Patrol_SendGoal_RequestConstructor,
    'turtlebot3_msgs/action/Patrol_SendGoal_Response': turtlebot3_msgs.action.Patrol_SendGoal_ResponseConstructor,
    'turtlebot3_msgs/msg/SensorState': turtlebot3_msgs.msg.SensorStateConstructor,
    'turtlebot3_msgs/msg/Sound': turtlebot3_msgs.msg.SoundConstructor,
    'turtlebot3_msgs/msg/VersionInfo': turtlebot3_msgs.msg.VersionInfoConstructor,
    'turtlebot3_msgs/srv/Dqn_Request': turtlebot3_msgs.srv.Dqn_RequestConstructor,
    'turtlebot3_msgs/srv/Dqn_Response': turtlebot3_msgs.srv.Dqn_ResponseConstructor,
    'turtlebot3_msgs/srv/Sound_Request': turtlebot3_msgs.srv.Sound_RequestConstructor,
    'turtlebot3_msgs/srv/Sound_Response': turtlebot3_msgs.srv.Sound_ResponseConstructor,
    'turtlebot4_msgs/msg/UserButton': turtlebot4_msgs.msg.UserButtonConstructor,
    'turtlebot4_msgs/msg/UserDisplay': turtlebot4_msgs.msg.UserDisplayConstructor,
    'turtlebot4_msgs/msg/UserLed': turtlebot4_msgs.msg.UserLedConstructor,
    'turtlesim/action/RotateAbsolute_Feedback': turtlesim.action.RotateAbsolute_FeedbackConstructor,
    'turtlesim/action/RotateAbsolute_FeedbackMessage': turtlesim.action.RotateAbsolute_FeedbackMessageConstructor,
    'turtlesim/action/RotateAbsolute_GetResult_Request': turtlesim.action.RotateAbsolute_GetResult_RequestConstructor,
    'turtlesim/action/RotateAbsolute_GetResult_Response': turtlesim.action.RotateAbsolute_GetResult_ResponseConstructor,
    'turtlesim/action/RotateAbsolute_Goal': turtlesim.action.RotateAbsolute_GoalConstructor,
    'turtlesim/action/RotateAbsolute_Result': turtlesim.action.RotateAbsolute_ResultConstructor,
    'turtlesim/action/RotateAbsolute_SendGoal_Request': turtlesim.action.RotateAbsolute_SendGoal_RequestConstructor,
    'turtlesim/action/RotateAbsolute_SendGoal_Response': turtlesim.action.RotateAbsolute_SendGoal_ResponseConstructor,
    'turtlesim/msg/Color': turtlesim.msg.ColorConstructor,
    'turtlesim/msg/Pose': turtlesim.msg.PoseConstructor,
    'turtlesim/srv/Kill_Request': turtlesim.srv.Kill_RequestConstructor,
    'turtlesim/srv/Kill_Response': turtlesim.srv.Kill_ResponseConstructor,
    'turtlesim/srv/SetPen_Request': turtlesim.srv.SetPen_RequestConstructor,
    'turtlesim/srv/SetPen_Response': turtlesim.srv.SetPen_ResponseConstructor,
    'turtlesim/srv/Spawn_Request': turtlesim.srv.Spawn_RequestConstructor,
    'turtlesim/srv/Spawn_Response': turtlesim.srv.Spawn_ResponseConstructor,
    'turtlesim/srv/TeleportAbsolute_Request': turtlesim.srv.TeleportAbsolute_RequestConstructor,
    'turtlesim/srv/TeleportAbsolute_Response': turtlesim.srv.TeleportAbsolute_ResponseConstructor,
    'turtlesim/srv/TeleportRelative_Request': turtlesim.srv.TeleportRelative_RequestConstructor,
    'turtlesim/srv/TeleportRelative_Response': turtlesim.srv.TeleportRelative_ResponseConstructor,
    'unique_identifier_msgs/msg/UUID': unique_identifier_msgs.msg.UUIDConstructor,
    'vision_msgs/msg/BoundingBox2D': vision_msgs.msg.BoundingBox2DConstructor,
    'vision_msgs/msg/BoundingBox2DArray': vision_msgs.msg.BoundingBox2DArrayConstructor,
    'vision_msgs/msg/BoundingBox3D': vision_msgs.msg.BoundingBox3DConstructor,
    'vision_msgs/msg/BoundingBox3DArray': vision_msgs.msg.BoundingBox3DArrayConstructor,
    'vision_msgs/msg/Classification': vision_msgs.msg.ClassificationConstructor,
    'vision_msgs/msg/Detection2D': vision_msgs.msg.Detection2DConstructor,
    'vision_msgs/msg/Detection2DArray': vision_msgs.msg.Detection2DArrayConstructor,
    'vision_msgs/msg/Detection3D': vision_msgs.msg.Detection3DConstructor,
    'vision_msgs/msg/Detection3DArray': vision_msgs.msg.Detection3DArrayConstructor,
    'vision_msgs/msg/LabelInfo': vision_msgs.msg.LabelInfoConstructor,
    'vision_msgs/msg/ObjectHypothesis': vision_msgs.msg.ObjectHypothesisConstructor,
    'vision_msgs/msg/ObjectHypothesisWithPose': vision_msgs.msg.ObjectHypothesisWithPoseConstructor,
    'vision_msgs/msg/Point2D': vision_msgs.msg.Point2DConstructor,
    'vision_msgs/msg/Pose2D': vision_msgs.msg.Pose2DConstructor,
    'vision_msgs/msg/VisionClass': vision_msgs.msg.VisionClassConstructor,
    'vision_msgs/msg/VisionInfo': vision_msgs.msg.VisionInfoConstructor,
    'visualization_msgs/msg/ImageMarker': visualization_msgs.msg.ImageMarkerConstructor,
    'visualization_msgs/msg/InteractiveMarker': visualization_msgs.msg.InteractiveMarkerConstructor,
    'visualization_msgs/msg/InteractiveMarkerControl': visualization_msgs.msg.InteractiveMarkerControlConstructor,
    'visualization_msgs/msg/InteractiveMarkerFeedback': visualization_msgs.msg.InteractiveMarkerFeedbackConstructor,
    'visualization_msgs/msg/InteractiveMarkerInit': visualization_msgs.msg.InteractiveMarkerInitConstructor,
    'visualization_msgs/msg/InteractiveMarkerPose': visualization_msgs.msg.InteractiveMarkerPoseConstructor,
    'visualization_msgs/msg/InteractiveMarkerUpdate': visualization_msgs.msg.InteractiveMarkerUpdateConstructor,
    'visualization_msgs/msg/Marker': visualization_msgs.msg.MarkerConstructor,
    'visualization_msgs/msg/MarkerArray': visualization_msgs.msg.MarkerArrayConstructor,
    'visualization_msgs/msg/MenuEntry': visualization_msgs.msg.MenuEntryConstructor,
    'visualization_msgs/msg/MeshFile': visualization_msgs.msg.MeshFileConstructor,
    'visualization_msgs/msg/UVCoordinate': visualization_msgs.msg.UVCoordinateConstructor,
    'visualization_msgs/srv/GetInteractiveMarkers_Request': visualization_msgs.srv.GetInteractiveMarkers_RequestConstructor,
    'visualization_msgs/srv/GetInteractiveMarkers_Response': visualization_msgs.srv.GetInteractiveMarkers_ResponseConstructor,
  };
  type MessageConstructorType<T> = T extends MessageTypeClassName ? MessageTypeClassConstructorMap[T] : object;

  type ServicesMap = {
    'action_msgs/srv/CancelGoal': action_msgs.srv.CancelGoalConstructor,
    'cartographer_ros_msgs/srv/FinishTrajectory': cartographer_ros_msgs.srv.FinishTrajectoryConstructor,
    'cartographer_ros_msgs/srv/GetTrajectoryStates': cartographer_ros_msgs.srv.GetTrajectoryStatesConstructor,
    'cartographer_ros_msgs/srv/ReadMetrics': cartographer_ros_msgs.srv.ReadMetricsConstructor,
    'cartographer_ros_msgs/srv/StartTrajectory': cartographer_ros_msgs.srv.StartTrajectoryConstructor,
    'cartographer_ros_msgs/srv/SubmapQuery': cartographer_ros_msgs.srv.SubmapQueryConstructor,
    'cartographer_ros_msgs/srv/TrajectoryQuery': cartographer_ros_msgs.srv.TrajectoryQueryConstructor,
    'cartographer_ros_msgs/srv/WriteState': cartographer_ros_msgs.srv.WriteStateConstructor,
    'composition_interfaces/srv/ListNodes': composition_interfaces.srv.ListNodesConstructor,
    'composition_interfaces/srv/LoadNode': composition_interfaces.srv.LoadNodeConstructor,
    'composition_interfaces/srv/UnloadNode': composition_interfaces.srv.UnloadNodeConstructor,
    'control_msgs/srv/QueryCalibrationState': control_msgs.srv.QueryCalibrationStateConstructor,
    'control_msgs/srv/QueryTrajectoryState': control_msgs.srv.QueryTrajectoryStateConstructor,
    'controller_manager_msgs/srv/ConfigureController': controller_manager_msgs.srv.ConfigureControllerConstructor,
    'controller_manager_msgs/srv/ListControllerTypes': controller_manager_msgs.srv.ListControllerTypesConstructor,
    'controller_manager_msgs/srv/ListControllers': controller_manager_msgs.srv.ListControllersConstructor,
    'controller_manager_msgs/srv/ListHardwareComponents': controller_manager_msgs.srv.ListHardwareComponentsConstructor,
    'controller_manager_msgs/srv/ListHardwareInterfaces': controller_manager_msgs.srv.ListHardwareInterfacesConstructor,
    'controller_manager_msgs/srv/LoadController': controller_manager_msgs.srv.LoadControllerConstructor,
    'controller_manager_msgs/srv/ReloadControllerLibraries': controller_manager_msgs.srv.ReloadControllerLibrariesConstructor,
    'controller_manager_msgs/srv/SetHardwareComponentState': controller_manager_msgs.srv.SetHardwareComponentStateConstructor,
    'controller_manager_msgs/srv/SwitchController': controller_manager_msgs.srv.SwitchControllerConstructor,
    'controller_manager_msgs/srv/UnloadController': controller_manager_msgs.srv.UnloadControllerConstructor,
    'diagnostic_msgs/srv/AddDiagnostics': diagnostic_msgs.srv.AddDiagnosticsConstructor,
    'diagnostic_msgs/srv/SelfTest': diagnostic_msgs.srv.SelfTestConstructor,
    'dwb_msgs/srv/DebugLocalPlan': dwb_msgs.srv.DebugLocalPlanConstructor,
    'dwb_msgs/srv/GenerateTrajectory': dwb_msgs.srv.GenerateTrajectoryConstructor,
    'dwb_msgs/srv/GenerateTwists': dwb_msgs.srv.GenerateTwistsConstructor,
    'dwb_msgs/srv/GetCriticScore': dwb_msgs.srv.GetCriticScoreConstructor,
    'dwb_msgs/srv/ScoreTrajectory': dwb_msgs.srv.ScoreTrajectoryConstructor,
    'irobot_create_msgs/srv/EStop': irobot_create_msgs.srv.EStopConstructor,
    'irobot_create_msgs/srv/ResetPose': irobot_create_msgs.srv.ResetPoseConstructor,
    'irobot_create_msgs/srv/RobotPower': irobot_create_msgs.srv.RobotPowerConstructor,
    'lifecycle_msgs/srv/ChangeState': lifecycle_msgs.srv.ChangeStateConstructor,
    'lifecycle_msgs/srv/GetAvailableStates': lifecycle_msgs.srv.GetAvailableStatesConstructor,
    'lifecycle_msgs/srv/GetAvailableTransitions': lifecycle_msgs.srv.GetAvailableTransitionsConstructor,
    'lifecycle_msgs/srv/GetState': lifecycle_msgs.srv.GetStateConstructor,
    'map_msgs/srv/GetMapROI': map_msgs.srv.GetMapROIConstructor,
    'map_msgs/srv/GetPointMap': map_msgs.srv.GetPointMapConstructor,
    'map_msgs/srv/GetPointMapROI': map_msgs.srv.GetPointMapROIConstructor,
    'map_msgs/srv/ProjectedMapsInfo': map_msgs.srv.ProjectedMapsInfoConstructor,
    'map_msgs/srv/SaveMap': map_msgs.srv.SaveMapConstructor,
    'map_msgs/srv/SetMapProjections': map_msgs.srv.SetMapProjectionsConstructor,
    'moveit_msgs/srv/ApplyPlanningScene': moveit_msgs.srv.ApplyPlanningSceneConstructor,
    'moveit_msgs/srv/ChangeControlDimensions': moveit_msgs.srv.ChangeControlDimensionsConstructor,
    'moveit_msgs/srv/ChangeDriftDimensions': moveit_msgs.srv.ChangeDriftDimensionsConstructor,
    'moveit_msgs/srv/CheckIfRobotStateExistsInWarehouse': moveit_msgs.srv.CheckIfRobotStateExistsInWarehouseConstructor,
    'moveit_msgs/srv/DeleteRobotStateFromWarehouse': moveit_msgs.srv.DeleteRobotStateFromWarehouseConstructor,
    'moveit_msgs/srv/ExecuteKnownTrajectory': moveit_msgs.srv.ExecuteKnownTrajectoryConstructor,
    'moveit_msgs/srv/GetCartesianPath': moveit_msgs.srv.GetCartesianPathConstructor,
    'moveit_msgs/srv/GetMotionPlan': moveit_msgs.srv.GetMotionPlanConstructor,
    'moveit_msgs/srv/GetMotionSequence': moveit_msgs.srv.GetMotionSequenceConstructor,
    'moveit_msgs/srv/GetPlannerParams': moveit_msgs.srv.GetPlannerParamsConstructor,
    'moveit_msgs/srv/GetPlanningScene': moveit_msgs.srv.GetPlanningSceneConstructor,
    'moveit_msgs/srv/GetPositionFK': moveit_msgs.srv.GetPositionFKConstructor,
    'moveit_msgs/srv/GetPositionIK': moveit_msgs.srv.GetPositionIKConstructor,
    'moveit_msgs/srv/GetRobotStateFromWarehouse': moveit_msgs.srv.GetRobotStateFromWarehouseConstructor,
    'moveit_msgs/srv/GetStateValidity': moveit_msgs.srv.GetStateValidityConstructor,
    'moveit_msgs/srv/GraspPlanning': moveit_msgs.srv.GraspPlanningConstructor,
    'moveit_msgs/srv/ListRobotStatesInWarehouse': moveit_msgs.srv.ListRobotStatesInWarehouseConstructor,
    'moveit_msgs/srv/LoadMap': moveit_msgs.srv.LoadMapConstructor,
    'moveit_msgs/srv/QueryPlannerInterfaces': moveit_msgs.srv.QueryPlannerInterfacesConstructor,
    'moveit_msgs/srv/RenameRobotStateInWarehouse': moveit_msgs.srv.RenameRobotStateInWarehouseConstructor,
    'moveit_msgs/srv/SaveMap': moveit_msgs.srv.SaveMapConstructor,
    'moveit_msgs/srv/SaveRobotStateToWarehouse': moveit_msgs.srv.SaveRobotStateToWarehouseConstructor,
    'moveit_msgs/srv/SetPlannerParams': moveit_msgs.srv.SetPlannerParamsConstructor,
    'moveit_msgs/srv/UpdatePointcloudOctomap': moveit_msgs.srv.UpdatePointcloudOctomapConstructor,
    'nav2_msgs/srv/ClearCostmapAroundRobot': nav2_msgs.srv.ClearCostmapAroundRobotConstructor,
    'nav2_msgs/srv/ClearCostmapExceptRegion': nav2_msgs.srv.ClearCostmapExceptRegionConstructor,
    'nav2_msgs/srv/ClearEntireCostmap': nav2_msgs.srv.ClearEntireCostmapConstructor,
    'nav2_msgs/srv/GetCostmap': nav2_msgs.srv.GetCostmapConstructor,
    'nav2_msgs/srv/IsPathValid': nav2_msgs.srv.IsPathValidConstructor,
    'nav2_msgs/srv/LoadMap': nav2_msgs.srv.LoadMapConstructor,
    'nav2_msgs/srv/ManageLifecycleNodes': nav2_msgs.srv.ManageLifecycleNodesConstructor,
    'nav2_msgs/srv/SaveMap': nav2_msgs.srv.SaveMapConstructor,
    'nav2_msgs/srv/SetInitialPose': nav2_msgs.srv.SetInitialPoseConstructor,
    'nav_msgs/srv/GetMap': nav_msgs.srv.GetMapConstructor,
    'nav_msgs/srv/GetPlan': nav_msgs.srv.GetPlanConstructor,
    'nav_msgs/srv/LoadMap': nav_msgs.srv.LoadMapConstructor,
    'nav_msgs/srv/SetMap': nav_msgs.srv.SetMapConstructor,
    'object_recognition_msgs/srv/GetObjectInformation': object_recognition_msgs.srv.GetObjectInformationConstructor,
    'octomap_msgs/srv/BoundingBoxQuery': octomap_msgs.srv.BoundingBoxQueryConstructor,
    'octomap_msgs/srv/GetOctomap': octomap_msgs.srv.GetOctomapConstructor,
    'pcl_msgs/srv/UpdateFilename': pcl_msgs.srv.UpdateFilenameConstructor,
    'rcl_interfaces/srv/DescribeParameters': rcl_interfaces.srv.DescribeParametersConstructor,
    'rcl_interfaces/srv/GetParameterTypes': rcl_interfaces.srv.GetParameterTypesConstructor,
    'rcl_interfaces/srv/GetParameters': rcl_interfaces.srv.GetParametersConstructor,
    'rcl_interfaces/srv/ListParameters': rcl_interfaces.srv.ListParametersConstructor,
    'rcl_interfaces/srv/SetParameters': rcl_interfaces.srv.SetParametersConstructor,
    'rcl_interfaces/srv/SetParametersAtomically': rcl_interfaces.srv.SetParametersAtomicallyConstructor,
    'realsense2_camera_msgs/srv/DeviceInfo': realsense2_camera_msgs.srv.DeviceInfoConstructor,
    'ros_gz_interfaces/srv/ControlWorld': ros_gz_interfaces.srv.ControlWorldConstructor,
    'ros_gz_interfaces/srv/DeleteEntity': ros_gz_interfaces.srv.DeleteEntityConstructor,
    'ros_gz_interfaces/srv/SetEntityPose': ros_gz_interfaces.srv.SetEntityPoseConstructor,
    'ros_gz_interfaces/srv/SpawnEntity': ros_gz_interfaces.srv.SpawnEntityConstructor,
    'ros_ign_interfaces/srv/ControlWorld': ros_ign_interfaces.srv.ControlWorldConstructor,
    'ros_ign_interfaces/srv/DeleteEntity': ros_ign_interfaces.srv.DeleteEntityConstructor,
    'ros_ign_interfaces/srv/SetEntityPose': ros_ign_interfaces.srv.SetEntityPoseConstructor,
    'ros_ign_interfaces/srv/SpawnEntity': ros_ign_interfaces.srv.SpawnEntityConstructor,
    'rosbag2_interfaces/srv/Burst': rosbag2_interfaces.srv.BurstConstructor,
    'rosbag2_interfaces/srv/GetRate': rosbag2_interfaces.srv.GetRateConstructor,
    'rosbag2_interfaces/srv/IsPaused': rosbag2_interfaces.srv.IsPausedConstructor,
    'rosbag2_interfaces/srv/Pause': rosbag2_interfaces.srv.PauseConstructor,
    'rosbag2_interfaces/srv/PlayNext': rosbag2_interfaces.srv.PlayNextConstructor,
    'rosbag2_interfaces/srv/Resume': rosbag2_interfaces.srv.ResumeConstructor,
    'rosbag2_interfaces/srv/Seek': rosbag2_interfaces.srv.SeekConstructor,
    'rosbag2_interfaces/srv/SetRate': rosbag2_interfaces.srv.SetRateConstructor,
    'rosbag2_interfaces/srv/Snapshot': rosbag2_interfaces.srv.SnapshotConstructor,
    'rosbag2_interfaces/srv/TogglePaused': rosbag2_interfaces.srv.TogglePausedConstructor,
    'sensor_msgs/srv/SetCameraInfo': sensor_msgs.srv.SetCameraInfoConstructor,
    'slam_toolbox/srvs/AddSubmap': slam_toolbox.srvs.AddSubmapConstructor,
    'slam_toolbox/srvs/Clear': slam_toolbox.srvs.ClearConstructor,
    'slam_toolbox/srvs/ClearQueue': slam_toolbox.srvs.ClearQueueConstructor,
    'slam_toolbox/srvs/DeserializePoseGraph': slam_toolbox.srvs.DeserializePoseGraphConstructor,
    'slam_toolbox/srvs/LoopClosure': slam_toolbox.srvs.LoopClosureConstructor,
    'slam_toolbox/srvs/MergeMaps': slam_toolbox.srvs.MergeMapsConstructor,
    'slam_toolbox/srvs/Pause': slam_toolbox.srvs.PauseConstructor,
    'slam_toolbox/srvs/SaveMap': slam_toolbox.srvs.SaveMapConstructor,
    'slam_toolbox/srvs/SerializePoseGraph': slam_toolbox.srvs.SerializePoseGraphConstructor,
    'slam_toolbox/srvs/ToggleInteractive': slam_toolbox.srvs.ToggleInteractiveConstructor,
    'std_srvs/srv/Empty': std_srvs.srv.EmptyConstructor,
    'std_srvs/srv/SetBool': std_srvs.srv.SetBoolConstructor,
    'std_srvs/srv/Trigger': std_srvs.srv.TriggerConstructor,
    'tf2_msgs/srv/FrameGraph': tf2_msgs.srv.FrameGraphConstructor,
    'turtlebot3_msgs/srv/Dqn': turtlebot3_msgs.srv.DqnConstructor,
    'turtlebot3_msgs/srv/Sound': turtlebot3_msgs.srv.SoundConstructor,
    'turtlesim/srv/Kill': turtlesim.srv.KillConstructor,
    'turtlesim/srv/SetPen': turtlesim.srv.SetPenConstructor,
    'turtlesim/srv/Spawn': turtlesim.srv.SpawnConstructor,
    'turtlesim/srv/TeleportAbsolute': turtlesim.srv.TeleportAbsoluteConstructor,
    'turtlesim/srv/TeleportRelative': turtlesim.srv.TeleportRelativeConstructor,
    'visualization_msgs/srv/GetInteractiveMarkers': visualization_msgs.srv.GetInteractiveMarkersConstructor,
  };
  type ServiceTypeClassName = keyof ServicesMap;
  type Service = ServicesMap[ServiceTypeClassName];
  type ServiceType<T> = T extends ServiceTypeClassName ? ServicesMap[T] : object;

  type ActionsMap = {
    'control_msgs/action/FollowJointTrajectory': control_msgs.action.FollowJointTrajectoryConstructor,
    'control_msgs/action/GripperCommand': control_msgs.action.GripperCommandConstructor,
    'control_msgs/action/JointTrajectory': control_msgs.action.JointTrajectoryConstructor,
    'control_msgs/action/ParallelGripperCommand': control_msgs.action.ParallelGripperCommandConstructor,
    'control_msgs/action/PointHead': control_msgs.action.PointHeadConstructor,
    'control_msgs/action/SingleJointPosition': control_msgs.action.SingleJointPositionConstructor,
    'irobot_create_msgs/action/AudioNoteSequence': irobot_create_msgs.action.AudioNoteSequenceConstructor,
    'irobot_create_msgs/action/Dock': irobot_create_msgs.action.DockConstructor,
    'irobot_create_msgs/action/DriveArc': irobot_create_msgs.action.DriveArcConstructor,
    'irobot_create_msgs/action/DriveDistance': irobot_create_msgs.action.DriveDistanceConstructor,
    'irobot_create_msgs/action/LedAnimation': irobot_create_msgs.action.LedAnimationConstructor,
    'irobot_create_msgs/action/NavigateToPosition': irobot_create_msgs.action.NavigateToPositionConstructor,
    'irobot_create_msgs/action/RotateAngle': irobot_create_msgs.action.RotateAngleConstructor,
    'irobot_create_msgs/action/Undock': irobot_create_msgs.action.UndockConstructor,
    'irobot_create_msgs/action/WallFollow': irobot_create_msgs.action.WallFollowConstructor,
    'moveit_msgs/action/ExecuteTrajectory': moveit_msgs.action.ExecuteTrajectoryConstructor,
    'moveit_msgs/action/GlobalPlanner': moveit_msgs.action.GlobalPlannerConstructor,
    'moveit_msgs/action/HybridPlanner': moveit_msgs.action.HybridPlannerConstructor,
    'moveit_msgs/action/LocalPlanner': moveit_msgs.action.LocalPlannerConstructor,
    'moveit_msgs/action/MoveGroup': moveit_msgs.action.MoveGroupConstructor,
    'moveit_msgs/action/MoveGroupSequence': moveit_msgs.action.MoveGroupSequenceConstructor,
    'moveit_msgs/action/Pickup': moveit_msgs.action.PickupConstructor,
    'moveit_msgs/action/Place': moveit_msgs.action.PlaceConstructor,
    'nav2_msgs/action/AssistedTeleop': nav2_msgs.action.AssistedTeleopConstructor,
    'nav2_msgs/action/BackUp': nav2_msgs.action.BackUpConstructor,
    'nav2_msgs/action/ComputePathThroughPoses': nav2_msgs.action.ComputePathThroughPosesConstructor,
    'nav2_msgs/action/ComputePathToPose': nav2_msgs.action.ComputePathToPoseConstructor,
    'nav2_msgs/action/DriveOnHeading': nav2_msgs.action.DriveOnHeadingConstructor,
    'nav2_msgs/action/DummyBehavior': nav2_msgs.action.DummyBehaviorConstructor,
    'nav2_msgs/action/FollowPath': nav2_msgs.action.FollowPathConstructor,
    'nav2_msgs/action/FollowWaypoints': nav2_msgs.action.FollowWaypointsConstructor,
    'nav2_msgs/action/NavigateThroughPoses': nav2_msgs.action.NavigateThroughPosesConstructor,
    'nav2_msgs/action/NavigateToPose': nav2_msgs.action.NavigateToPoseConstructor,
    'nav2_msgs/action/SmoothPath': nav2_msgs.action.SmoothPathConstructor,
    'nav2_msgs/action/Spin': nav2_msgs.action.SpinConstructor,
    'nav2_msgs/action/Wait': nav2_msgs.action.WaitConstructor,
    'object_recognition_msgs/action/ObjectRecognition': object_recognition_msgs.action.ObjectRecognitionConstructor,
    'tf2_msgs/action/LookupTransform': tf2_msgs.action.LookupTransformConstructor,
    'turtlebot3_msgs/action/Patrol': turtlebot3_msgs.action.PatrolConstructor,
    'turtlesim/action/RotateAbsolute': turtlesim.action.RotateAbsoluteConstructor,
  };
  type ActionTypeClassName = keyof ActionsMap;
  type Action = ActionsMap[ActionTypeClassName];
  type ActionType<T> = T extends ActionTypeClassName ? ActionsMap[T] : object;

  type TypeClassName = MessageTypeClassName | ServiceTypeClassName | ActionTypeClassName;
  type InterfaceType<T> = T extends TypeClassName ? (MessageTypeClassConstructorMap & ServicesMap & ActionsMap)[T] : object;
}
