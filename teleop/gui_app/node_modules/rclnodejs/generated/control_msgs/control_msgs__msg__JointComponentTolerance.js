// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const StringWrapper = require('../../generated/std_msgs/std_msgs__msg__String.js');
const JointComponentToleranceRefStruct = StructType({
  joint_name: primitiveTypes.string,
  component: primitiveTypes.uint16,
  position: primitiveTypes.float64,
  velocity: primitiveTypes.float64,
  acceleration: primitiveTypes.float64,
});
const JointComponentToleranceRefArray = ArrayType(JointComponentToleranceRefStruct);
const JointComponentToleranceRefStructArray = StructType({
  data: JointComponentToleranceRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class JointComponentToleranceWrapper {
  constructor(other, willCheckConsistency = false) {
    this._wrapperFields = {};
    this._willCheckConsistency = willCheckConsistency;
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new JointComponentToleranceRefStruct(other._refObject.toObject());
      this._joint_nameIntialized = true;
      this._wrapperFields.joint_name =  new StringWrapper(other._wrapperFields.joint_name);
      this._componentIntialized = true;
      this._positionIntialized = true;
      this._velocityIntialized = true;
      this._accelerationIntialized = true;
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new JointComponentToleranceRefStruct();
    this._joint_nameIntialized = false;
    this._wrapperFields.joint_name = new StringWrapper();
    this._componentIntialized = false;
    this._positionIntialized = false;
    this._velocityIntialized = false;
    this._accelerationIntialized = false;
  }
  static createFromRefObject(refObject) {
    let self = new JointComponentToleranceWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new JointComponentToleranceArrayWrapper;
  }
  static get ArrayType() {
    return JointComponentToleranceArrayWrapper;
  }
  static get refObjectArrayType() {
    return JointComponentToleranceRefStructArray
  }
  static get refObjectType() {
    return JointComponentToleranceRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
      if (checkConsistency && !this._joint_nameIntialized) {
        throw new TypeError('Invalid argument: joint_name in JointComponentTolerance');
      }
      if (checkConsistency && !this._componentIntialized) {
        throw new TypeError('Invalid argument: component in JointComponentTolerance');
      }
      if (checkConsistency && !this._positionIntialized) {
        throw new TypeError('Invalid argument: position in JointComponentTolerance');
      }
      if (checkConsistency && !this._velocityIntialized) {
        throw new TypeError('Invalid argument: velocity in JointComponentTolerance');
      }
      if (checkConsistency && !this._accelerationIntialized) {
        throw new TypeError('Invalid argument: acceleration in JointComponentTolerance');
      }
    if (own) {
      this._wrapperFields.joint_name.freeze(own, checkConsistency);
    }
    this._refObject.joint_name = this._wrapperFields.joint_name.refObject;
  }
  serialize() {
    this.freeze(/*own=*/false, this._willCheckConsistency);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._joint_nameIntialized = true;
    this._wrapperFields.joint_name.data = refObject.joint_name.data;
    this._componentIntialized = true;
    this._refObject.component = refObject.component;
    this._positionIntialized = true;
    this._refObject.position = refObject.position;
    this._velocityIntialized = true;
    this._refObject.velocity = refObject.velocity;
    this._accelerationIntialized = true;
    this._refObject.acceleration = refObject.acceleration;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
    StringWrapper.freeStruct(refObject.joint_name);
  }
  static destoryRawROS(msg) {
    JointComponentToleranceWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'control_msgs', subFolder: 'msg', interfaceName: 'JointComponentTolerance'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get joint_name() {
    if (!this._joint_nameIntialized) {
      return undefined;
    }
    return this._wrapperFields.joint_name.data;
  }
  set joint_name(value) {
    this._joint_nameIntialized = true;
    this._wrapperFields.joint_name.data = value;
  }
  get component() {
    if (!this._componentIntialized) {
      return undefined;
    }
    return this._refObject.component;
  }
  set component(value) {
    this._componentIntialized = true;
    this._refObject.component = value;
  }
  get position() {
    if (!this._positionIntialized) {
      return undefined;
    }
    return this._refObject.position;
  }
  set position(value) {
    this._positionIntialized = true;
    this._refObject.position = value;
  }
  get velocity() {
    if (!this._velocityIntialized) {
      return undefined;
    }
    return this._refObject.velocity;
  }
  set velocity(value) {
    this._velocityIntialized = true;
    this._refObject.velocity = value;
  }
  get acceleration() {
    if (!this._accelerationIntialized) {
      return undefined;
    }
    return this._refObject.acceleration;
  }
  set acceleration(value) {
    this._accelerationIntialized = true;
    this._refObject.acceleration = value;
  }
  copyRefObject(refObject) {
    this._refObject = new JointComponentToleranceRefStruct(refObject.toObject());
    this._joint_nameIntialized = true;
    this._wrapperFields.joint_name.copyRefObject(this._refObject.joint_name);
    this._componentIntialized = true;
    this._positionIntialized = true;
    this._velocityIntialized = true;
    this._accelerationIntialized = true;
  }
  copy(other) {
    this._refObject = new JointComponentToleranceRefStruct(other._refObject.toObject());
    this._joint_nameIntialized = true;
    this._wrapperFields.joint_name.copy(other._wrapperFields.joint_name);
    this._componentIntialized = true;
    this._positionIntialized = true;
    this._velocityIntialized = true;
    this._accelerationIntialized = true;
  }
  static get classType() {
    return JointComponentToleranceWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[{"type":"uint16","name":"X_AXIS","value":1},{"type":"uint16","name":"Y_AXIS","value":2},{"type":"uint16","name":"Z_AXIS","value":3},{"type":"uint16","name":"TRANSLATION","value":4},{"type":"uint16","name":"ROTATION","value":5}],"fields":[{"name":"joint_name","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"string","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"component","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"position","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"velocity","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"acceleration","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"control_msgs","type":"JointComponentTolerance","stringUpperBound":null,"isPrimitiveType":false},"msgName":"JointComponentTolerance"};
  }
  hasMember(name) {
    let memberNames = ["joint_name","component","position","velocity","acceleration"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class JointComponentToleranceArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof JointComponentToleranceWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new JointComponentToleranceWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to JointComponentToleranceArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to JointComponentToleranceArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new JointComponentToleranceRefArray(size);
    this._refObject = new JointComponentToleranceRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new JointComponentToleranceWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof JointComponentToleranceArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "JointComponentToleranceArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      JointComponentToleranceWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return JointComponentToleranceWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return JointComponentToleranceArrayWrapper;
  }
}
// Define constants (5 in total)
Object.defineProperty(JointComponentToleranceWrapper, "X_AXIS", {value: 1, writable: false, enumerable: true, configurable: true});
Object.defineProperty(JointComponentToleranceWrapper, "Y_AXIS", {value: 2, writable: false, enumerable: true, configurable: true});
Object.defineProperty(JointComponentToleranceWrapper, "Z_AXIS", {value: 3, writable: false, enumerable: true, configurable: true});
Object.defineProperty(JointComponentToleranceWrapper, "TRANSLATION", {value: 4, writable: false, enumerable: true, configurable: true});
Object.defineProperty(JointComponentToleranceWrapper, "ROTATION", {value: 5, writable: false, enumerable: true, configurable: true});
module.exports = JointComponentToleranceWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [
    {
      "type": "uint16",
      "name": "X_AXIS",
      "value": 1
    },
    {
      "type": "uint16",
      "name": "Y_AXIS",
      "value": 2
    },
    {
      "type": "uint16",
      "name": "Z_AXIS",
      "value": 3
    },
    {
      "type": "uint16",
      "name": "TRANSLATION",
      "value": 4
    },
    {
      "type": "uint16",
      "name": "ROTATION",
      "value": 5
    }
  ],
  "fields": [
    {
      "name": "joint_name",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "string",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "component",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "position",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "velocity",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "acceleration",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "control_msgs",
    "type": "JointComponentTolerance",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "JointComponentTolerance"
}
*/
