// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const StringWrapper = require('../../generated/std_msgs/std_msgs__msg__String.js');
const BagfileProgressRefStruct = StructType({
  current_bagfile_name: primitiveTypes.string,
  current_bagfile_id: primitiveTypes.uint32,
  total_bagfiles: primitiveTypes.uint32,
  total_messages: primitiveTypes.uint32,
  processed_messages: primitiveTypes.uint32,
  total_seconds: primitiveTypes.float32,
  processed_seconds: primitiveTypes.float32,
});
const BagfileProgressRefArray = ArrayType(BagfileProgressRefStruct);
const BagfileProgressRefStructArray = StructType({
  data: BagfileProgressRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class BagfileProgressWrapper {
  constructor(other, willCheckConsistency = false) {
    this._wrapperFields = {};
    this._willCheckConsistency = willCheckConsistency;
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new BagfileProgressRefStruct(other._refObject.toObject());
      this._current_bagfile_nameIntialized = true;
      this._wrapperFields.current_bagfile_name =  new StringWrapper(other._wrapperFields.current_bagfile_name);
      this._current_bagfile_idIntialized = true;
      this._total_bagfilesIntialized = true;
      this._total_messagesIntialized = true;
      this._processed_messagesIntialized = true;
      this._total_secondsIntialized = true;
      this._processed_secondsIntialized = true;
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new BagfileProgressRefStruct();
    this._current_bagfile_nameIntialized = false;
    this._wrapperFields.current_bagfile_name = new StringWrapper();
    this._current_bagfile_idIntialized = false;
    this._total_bagfilesIntialized = false;
    this._total_messagesIntialized = false;
    this._processed_messagesIntialized = false;
    this._total_secondsIntialized = false;
    this._processed_secondsIntialized = false;
  }
  static createFromRefObject(refObject) {
    let self = new BagfileProgressWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new BagfileProgressArrayWrapper;
  }
  static get ArrayType() {
    return BagfileProgressArrayWrapper;
  }
  static get refObjectArrayType() {
    return BagfileProgressRefStructArray
  }
  static get refObjectType() {
    return BagfileProgressRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
      if (checkConsistency && !this._current_bagfile_nameIntialized) {
        throw new TypeError('Invalid argument: current_bagfile_name in BagfileProgress');
      }
      if (checkConsistency && !this._current_bagfile_idIntialized) {
        throw new TypeError('Invalid argument: current_bagfile_id in BagfileProgress');
      }
      if (checkConsistency && !this._total_bagfilesIntialized) {
        throw new TypeError('Invalid argument: total_bagfiles in BagfileProgress');
      }
      if (checkConsistency && !this._total_messagesIntialized) {
        throw new TypeError('Invalid argument: total_messages in BagfileProgress');
      }
      if (checkConsistency && !this._processed_messagesIntialized) {
        throw new TypeError('Invalid argument: processed_messages in BagfileProgress');
      }
      if (checkConsistency && !this._total_secondsIntialized) {
        throw new TypeError('Invalid argument: total_seconds in BagfileProgress');
      }
      if (checkConsistency && !this._processed_secondsIntialized) {
        throw new TypeError('Invalid argument: processed_seconds in BagfileProgress');
      }
    if (own) {
      this._wrapperFields.current_bagfile_name.freeze(own, checkConsistency);
    }
    this._refObject.current_bagfile_name = this._wrapperFields.current_bagfile_name.refObject;
  }
  serialize() {
    this.freeze(/*own=*/false, this._willCheckConsistency);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._current_bagfile_nameIntialized = true;
    this._wrapperFields.current_bagfile_name.data = refObject.current_bagfile_name.data;
    this._current_bagfile_idIntialized = true;
    this._refObject.current_bagfile_id = refObject.current_bagfile_id;
    this._total_bagfilesIntialized = true;
    this._refObject.total_bagfiles = refObject.total_bagfiles;
    this._total_messagesIntialized = true;
    this._refObject.total_messages = refObject.total_messages;
    this._processed_messagesIntialized = true;
    this._refObject.processed_messages = refObject.processed_messages;
    this._total_secondsIntialized = true;
    this._refObject.total_seconds = refObject.total_seconds;
    this._processed_secondsIntialized = true;
    this._refObject.processed_seconds = refObject.processed_seconds;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
    StringWrapper.freeStruct(refObject.current_bagfile_name);
  }
  static destoryRawROS(msg) {
    BagfileProgressWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'cartographer_ros_msgs', subFolder: 'msg', interfaceName: 'BagfileProgress'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get current_bagfile_name() {
    if (!this._current_bagfile_nameIntialized) {
      return undefined;
    }
    return this._wrapperFields.current_bagfile_name.data;
  }
  set current_bagfile_name(value) {
    this._current_bagfile_nameIntialized = true;
    this._wrapperFields.current_bagfile_name.data = value;
  }
  get current_bagfile_id() {
    if (!this._current_bagfile_idIntialized) {
      return undefined;
    }
    return this._refObject.current_bagfile_id;
  }
  set current_bagfile_id(value) {
    this._current_bagfile_idIntialized = true;
    this._refObject.current_bagfile_id = value;
  }
  get total_bagfiles() {
    if (!this._total_bagfilesIntialized) {
      return undefined;
    }
    return this._refObject.total_bagfiles;
  }
  set total_bagfiles(value) {
    this._total_bagfilesIntialized = true;
    this._refObject.total_bagfiles = value;
  }
  get total_messages() {
    if (!this._total_messagesIntialized) {
      return undefined;
    }
    return this._refObject.total_messages;
  }
  set total_messages(value) {
    this._total_messagesIntialized = true;
    this._refObject.total_messages = value;
  }
  get processed_messages() {
    if (!this._processed_messagesIntialized) {
      return undefined;
    }
    return this._refObject.processed_messages;
  }
  set processed_messages(value) {
    this._processed_messagesIntialized = true;
    this._refObject.processed_messages = value;
  }
  get total_seconds() {
    if (!this._total_secondsIntialized) {
      return undefined;
    }
    return this._refObject.total_seconds;
  }
  set total_seconds(value) {
    this._total_secondsIntialized = true;
    this._refObject.total_seconds = value;
  }
  get processed_seconds() {
    if (!this._processed_secondsIntialized) {
      return undefined;
    }
    return this._refObject.processed_seconds;
  }
  set processed_seconds(value) {
    this._processed_secondsIntialized = true;
    this._refObject.processed_seconds = value;
  }
  copyRefObject(refObject) {
    this._refObject = new BagfileProgressRefStruct(refObject.toObject());
    this._current_bagfile_nameIntialized = true;
    this._wrapperFields.current_bagfile_name.copyRefObject(this._refObject.current_bagfile_name);
    this._current_bagfile_idIntialized = true;
    this._total_bagfilesIntialized = true;
    this._total_messagesIntialized = true;
    this._processed_messagesIntialized = true;
    this._total_secondsIntialized = true;
    this._processed_secondsIntialized = true;
  }
  copy(other) {
    this._refObject = new BagfileProgressRefStruct(other._refObject.toObject());
    this._current_bagfile_nameIntialized = true;
    this._wrapperFields.current_bagfile_name.copy(other._wrapperFields.current_bagfile_name);
    this._current_bagfile_idIntialized = true;
    this._total_bagfilesIntialized = true;
    this._total_messagesIntialized = true;
    this._processed_messagesIntialized = true;
    this._total_secondsIntialized = true;
    this._processed_secondsIntialized = true;
  }
  static get classType() {
    return BagfileProgressWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[],"fields":[{"name":"current_bagfile_name","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"string","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"current_bagfile_id","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"total_bagfiles","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"total_messages","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"processed_messages","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"total_seconds","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"processed_seconds","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"cartographer_ros_msgs","type":"BagfileProgress","stringUpperBound":null,"isPrimitiveType":false},"msgName":"BagfileProgress"};
  }
  hasMember(name) {
    let memberNames = ["current_bagfile_name","current_bagfile_id","total_bagfiles","total_messages","processed_messages","total_seconds","processed_seconds"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class BagfileProgressArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof BagfileProgressWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new BagfileProgressWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to BagfileProgressArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to BagfileProgressArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new BagfileProgressRefArray(size);
    this._refObject = new BagfileProgressRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new BagfileProgressWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof BagfileProgressArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "BagfileProgressArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      BagfileProgressWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return BagfileProgressWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return BagfileProgressArrayWrapper;
  }
}
module.exports = BagfileProgressWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [],
  "fields": [
    {
      "name": "current_bagfile_name",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "string",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "current_bagfile_id",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "total_bagfiles",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "total_messages",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "processed_messages",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "total_seconds",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "processed_seconds",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "cartographer_ros_msgs",
    "type": "BagfileProgress",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "BagfileProgress"
}
*/
